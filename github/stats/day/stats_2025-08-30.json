{
  "interval": {
    "intervalStart": "2025-08-30T00:00:00.000Z",
    "intervalEnd": "2025-08-31T00:00:00.000Z",
    "intervalType": "day"
  },
  "repository": "elizaos/eliza",
  "overview": "From 2025-08-30 to 2025-08-31, elizaos/eliza had 3 new PRs (1 merged), 0 new issues, and 6 active contributors.",
  "topIssues": [],
  "topPRs": [
    {
      "id": "PR_kwDOMT5cIs6mHlEn",
      "title": "fix: logger debug level & style",
      "author": "0xbbjoker",
      "number": 5849,
      "body": "# Relates to\r\n\r\n<!-- Fixed logger debug level not working and improved terminal readability -->\r\n\r\n# Risks\r\n\r\nLow. This change only affects logging output presentation and fixes a bug with debug level logging. No functional changes to core logic.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR fixes the logger debug level that wasn't properly working and significantly improves terminal log readability by:\r\n\r\n1. **Fixed debug level configuration**: Removed hardcoded log level from runtime initialization, allowing global environment variable (`LOG_LEVEL`) to properly control debug output\r\n2. **Improved terminal color scheme**:\r\n   - Changed info logs from cyan to blue for better readability\r\n   - Added white text on red background for critical alerts\r\n   - Used bold styling for important log levels (error, warn, info, success)\r\n   - Added underline to 'fail' level to distinguish from regular errors\r\n   - Dimmed regular 'log' output to reduce visual noise\r\n   - Made verbose logs dim and italic for minimal distraction\r\n3. **Removed emoji clutter**: Cleared emojis from log output that were making terminal screenshots harder to read\r\n4. **Simplified Adze level mapping**: Created cleaner mapping function for ElizaOS to Adze log levels\r\n\r\n## What kind of change is this?\r\n\r\nBug fixes (non-breaking change which fixes an issue)\r\nImprovements (misc. changes to existing features)\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes do not require a change to the project documentation.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nReview the changes in `packages/core/src/logger.ts`, specifically the `customLevelConfig` object (lines 207-281) and the simplified level mapping logic.\r\n\r\n## Detailed testing steps\r\n\r\n1. Set `LOG_LEVEL=debug` in your `.env` file\r\n2. Run `bun run start` or `elizaos start`\r\n3. Verify that:\r\n   - Debug messages now appear (previously weren't showing)\r\n   - Different log levels have distinct visual appearance\r\n   - Critical alerts (fatal) have red background with white text\r\n   - Info logs are blue instead of cyan\r\n   - Success messages are bold green\r\n   - Regular logs are dimmed for less visual clutter\r\n\r\n## Screenshots\r\n### Before\r\n- Debug level wasn't working regardless of LOG_LEVEL setting\r\n- Cyan info logs were hard to read on some terminals\r\n- All red logs (error, fail, alert) looked the same\r\n- Emojis cluttered the output\r\n\r\n### After\r\n- Debug level responds to LOG_LEVEL environment variable\r\n- Blue info logs with better contrast\r\n- Visual hierarchy: alerts (red bg) > errors (bold red) > warnings (bold yellow) > info (bold blue) > log (dimmed)\r\n- Clean, professional terminal output without emoji clutter\r\n\r\n<!-- Discord username: 0xbbjoker -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-08-30T18:46:14Z",
      "mergedAt": null,
      "additions": 118,
      "deletions": 22
    },
    {
      "id": "PR_kwDOMT5cIs6mFP_V",
      "title": "fix: core types output",
      "author": "ChristopherTrimboli",
      "number": 5847,
      "body": "## ðŸ”§ Fix: Type Export Issues in @elizaos/core Package\n\n### Problem\nThe deployed version of `@elizaos/core` on NPM was experiencing type export failures, causing TypeScript compilation errors when the package was used outside the monorepo. Users reported errors like:\n```\nModule '\"@elizaos/core\"' has no exported member 'Agent'\nModule '\"@elizaos/core\"' has no exported member 'UUID'\n... (174+ similar errors)\n```\n\n### Root Cause Analysis\n1. **Missing Source Files**: The published NPM package only included the `dist` folder, but the type declaration files referenced source files in `../src` that weren't included in the package\n2. **Broken Type Generation**: The build process was attempting to generate TypeScript declarations using `npx tsc` which wasn't available in the build environment\n3. **Incorrect Build Script**: The `build.ts` script created stub `.d.ts` files that pointed to non-existent locations\n\n### Solution Implemented\n\n#### 1. Fixed `package.json` exports and files\n```diff\n  \"files\": [\n-   \"dist\"\n+   \"dist\",\n+   \"src\"\n  ],\n```\n\n#### 2. Updated `build.ts` to generate proper type declaration stubs\n```typescript\n// dist/index.d.ts\nexport * from '../src/index.node';\n\n// dist/node/index.d.ts  \nexport * from '../../src/index.node';\n\n// dist/browser/index.d.ts\nexport * from '../../src/index.browser';\n```\n\n#### 3. Created `tsconfig.build.json` for future TypeScript compilation\n```json\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"declaration\": true,\n    \"declarationMap\": true,\n    \"emitDeclarationOnly\": true,\n    \"outDir\": \"./dist\",\n    \"rootDir\": \"./src\"\n  }\n}\n```\n\n### Verification\nâœ… **Monorepo Development**: Types resolve correctly through source references\nâœ… **NPM Package**: Published package includes source files for type resolution\nâœ… **Build Output Structure**:\n```\ndist/\nâ”œâ”€â”€ index.d.ts         # â†’ ../src/index.node\nâ”œâ”€â”€ index.js           # Conditional exports\nâ”œâ”€â”€ node/\nâ”‚   â”œâ”€â”€ index.d.ts     # â†’ ../../src/index.node\nâ”‚   â””â”€â”€ index.node.js  # Compiled bundle\nâ””â”€â”€ browser/\n    â”œâ”€â”€ index.d.ts     # â†’ ../../src/index.browser\n    â””â”€â”€ index.browser.js # Compiled bundle\n```\n\n### Testing\n```typescript\n// All types now import successfully:\nimport { \n  Agent, UUID, Character, Memory, IAgentRuntime,\n  Plugin, Action, Provider, Service, logger\n} from '@elizaos/core';\n```\n\n### Impact\n- **Before**: Package worked only in monorepo, failed when published to NPM\n- **After**: Package works in both monorepo development and NPM distribution\n- **No Breaking Changes**: Maintains backward compatibility with existing code\n\n### Build Commands\n```bash\n# Clean and rebuild\nbun run clean\nbun run build\n\n# The build now properly generates:\n# - JavaScript bundles for node and browser\n# - Type declaration stubs that reference source files\n# - Source maps for debugging\n```\n\n### Notes for Reviewers\n- The solution includes source files in the NPM package, which is a common pattern for TypeScript packages\n- Alternative approach would be to properly generate `.d.ts` files during build, but that requires additional tooling setup\n- This fix is minimal, non-breaking, and immediately resolves the critical issue\n",
      "repository": "elizaos/eliza",
      "createdAt": "2025-08-30T01:26:40Z",
      "mergedAt": "2025-08-30T01:30:54Z",
      "additions": 86,
      "deletions": 67
    },
    {
      "id": "PR_kwDOMT5cIs6mGult",
      "title": "fix(core): fix TypeScript declarations in npm package",
      "author": "standujar",
      "number": 5848,
      "body": "# Relates to\r\n\r\n  TypeScript declarations build optimization.\r\n\r\n  # Risks\r\n\r\n  **Low risk** - Configuration changes only, no functional code changes.\r\n\r\n  # Background\r\n\r\n  ## What does this PR do?\r\n\r\n  Optimizes the TypeScript build configuration for @elizaos/core package by:\r\n\r\n  1. **Removes unused configuration files** - Eliminates dead code\r\n  2. **Simplifies configuration hierarchy** - Direct inheritance from root config\r\n  3. **Renames files for clarity** - `tsconfig.build.json` â†’ `tsconfig.declarations.json`\r\n  4. **Optimizes package structure** - Continues excluding src/ from npm package\r\n\r\n  ## What kind of change is this?\r\n\r\n  **Improvements** (misc. changes to existing features)\r\n\r\n  - Build system optimization\r\n  - Configuration cleanup\r\n  - Dead code removal\r\n\r\n  ## Why are we doing this?\r\n\r\n  The core package had a complex and partially unused TypeScript configuration setup:\r\n\r\n  - `tsconfig.browser.json` was not used by build.ts (dead code)\r\n  - `tsconfig.json` served only as an unnecessary intermediate layer\r\n  - `tsconfig.build.json` name was ambiguous (could be JS build vs types)\r\n  - Configuration inheritance chain was unnecessarily complex\r\n\r\n  This PR streamlines the setup to only what's actually needed while maintaining the same build output.\r\n\r\n  # Documentation changes needed?\r\n\r\n  **My changes do not require a change to the project documentation.**\r\n\r\n  The build commands and package structure remain identical from the consumer perspective.\r\n\r\n  # Testing\r\n\r\n  ## Where should a reviewer start?\r\n\r\n  1. Verify the build still works: `cd packages/core && bun run build`\r\n  2. Check that dist/ contains the same .d.ts files as before\r\n  3. Confirm package.json still excludes src/ from published files\r\n\r\n  ## Detailed testing steps\r\n\r\n  - Navigate to `packages/core/`\r\n  - Run `bun run build`\r\n  - Verify successful completion with TypeScript declarations generated\r\n  - Check `dist/` contains compiled .d.ts files (not pointer files)\r\n  - Confirm package size optimization (src/ excluded from npm package)\r\n  - Validate that conditional exports in package.json work correctly\r\n\r\n  ## Before and After\r\n\r\n  ### Before (3 config files, complex inheritance)\r\n  tsconfig.json (intermediate) â†’ extends ../../tsconfig.json\r\n  tsconfig.browser.json (unused) â†’ extends ./tsconfig.jsontsconfig.build.json â†’ extends ./tsconfig.json â†’ extends ../../tsconfig.json\r\n\r\n  ### After (1 config file, direct inheritance)\r\n  tsconfig.declarations.json â†’ extends ../../tsconfig.json\r\n\r\n  **Results:**\r\n  - Same build output\r\n  - stop exporting /src\r\n  - Clearer configuration purpose\r\n  - No breaking changes for consumers\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n* **Chores**\n  * Switched to compiled TypeScript declaration generation for more reliable typings.\n  * Published package now includes only compiled output, reducing install size.\n  * Simplified TypeScript configuration by relying on root settings and focused declaration entrypoints.\n  * Improved build logs and error handling during type generation.\n\n* **Refactor**\n  * Adjusted type entrypoints to reference compiled declarations without bundling source files.\n\n* **Notes**\n  * No API changes; end-user functionality remains the same.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-08-30T13:00:47Z",
      "mergedAt": "2025-08-31T04:05:44Z",
      "additions": 39,
      "deletions": 966
    }
  ],
  "codeChanges": {
    "additions": 86,
    "deletions": 67,
    "files": 4,
    "commitCount": 6
  },
  "completedItems": [
    {
      "title": "fix: core types output",
      "prNumber": 5847,
      "type": "bugfix",
      "body": "## ðŸ”§ Fix: Type Export Issues in @elizaos/core Package\n\n### Problem\nThe deployed version of `@elizaos/core` on NPM was experiencing type export failures, causing TypeScript compilation errors when the package was used outside the monorepo. ",
      "files": [
        "bun.lock",
        "packages/core/build.ts",
        "packages/core/package.json",
        "packages/core/tsconfig.build.json"
      ]
    }
  ],
  "topContributors": [
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 44.50890520482726,
      "prScore": 44.50890520482726,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": "ChristopherTrimboli: Focused on bugfix and refactor work, merging a PR in elizaos/eliza (#5847) that addressed core types output. Their contributions primarily involved modifications to configuration and code files."
    },
    {
      "username": "standujar",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16385918?u=718bdcd1585be8447bdfffb8c11ce249baa7532d&v=4",
      "totalScore": 34.42626433794567,
      "prScore": 29.726264337945665,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0.2,
      "summary": "standujar: Addressed a critical bug by merging elizaos/eliza#5848, which fixed TypeScript declarations in the npm package, demonstrating a focus on bugfix work primarily within configuration files."
    },
    {
      "username": "0xbbjoker",
      "avatarUrl": "https://avatars.githubusercontent.com/u/54844437?u=90fe1762420de6ad493a1c1582f1f70c0d87d8e2&v=4",
      "totalScore": 22.102759890378167,
      "prScore": 22.102759890378167,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": "0xbbjoker: Focused on bugfix work, opening one pull request, elizaos/eliza#5849, to address a logger debug level and style issue, modifying 3 files with 127 additions and 31 deletions."
    },
    {
      "username": "Dexploarer",
      "avatarUrl": "https://avatars.githubusercontent.com/u/211557447?u=21a243d61cc1f87574328ae07fc64d7d7577b53d&v=4",
      "totalScore": 18.846573590279974,
      "prScore": 14.346573590279972,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0,
      "summary": "Dexploarer: Focused on other work and bugfixes, merging a PR in elizaos-plugins/registry (#213) to add a new plugin, and modified 3 files with a primary focus on config files."
    },
    {
      "username": "claude",
      "avatarUrl": "https://avatars.githubusercontent.com/in/1236702?v=4",
      "totalScore": 4.938,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0.43799999999999994,
      "summary": "claude: No activity today."
    }
  ],
  "newPRs": 3,
  "mergedPRs": 1,
  "newIssues": 0,
  "closedIssues": 0,
  "activeContributors": 6
}
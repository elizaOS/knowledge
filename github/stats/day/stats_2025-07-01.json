{
  "interval": {
    "intervalStart": "2025-07-01T00:00:00.000Z",
    "intervalEnd": "2025-07-02T00:00:00.000Z",
    "intervalType": "day"
  },
  "repository": "elizaos/eliza",
  "overview": "From 2025-07-01 to 2025-07-02, elizaos/eliza had 7 new PRs (10 merged), 2 new issues, and 10 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDOMT5cIs6-RUyw",
      "title": "Upgrade BD tier 1-4 plugins",
      "author": "borisudovicic",
      "number": 5341,
      "repository": "elizaos/eliza",
      "body": "[https://docs.google.com/spreadsheets/d/13Xbqg5W80jx9kCK_3AzkeTCPVT6Lm19gyConLTw5KEU/edit?gid=123741074#gid=123741074](https://docs.google.com/spreadsheets/d/13Xbqg5W80jx9kCK_3AzkeTCPVT6Lm19gyConLTw5KEU/edit?gid=123741074#gid=123741074)",
      "createdAt": "2025-07-01T12:07:38Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs6-LdhY",
      "title": "Fix CLI Create Command Text for Different Types",
      "author": "linear",
      "number": 5336,
      "repository": "elizaos/eliza",
      "body": "* Update CLI create command to display correct type in prompts\n* Change \"Creating ElizaOS Project\" to dynamic text based on --type flag\n* Update confirmation prompts to match the actual creation type\n* Test with different --type values (plugin, agent, etc)\n* Ensure consistent messaging throughout create workflow\n* Verify all create command text reflects the actual type being created\n\n**Context:** When running `elizaos create --type plugin labubu`, the CLI incorrectly shows \"Creating ElizaOS Project\" and \"Create plugin...\" when it should display type-appropriate messaging for plugins vs projects vs agents vs tees.",
      "createdAt": "2025-07-01T04:47:14Z",
      "closedAt": "2025-07-01T07:55:07Z",
      "state": "CLOSED",
      "commentCount": 0
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDOMT5cIs6aFGnn",
      "title": "feat: updated plugin migrator",
      "author": "samarth30",
      "number": 5066,
      "body": "This pull request introduces several enhancements and new features to the plugin migration system, focusing on improving test generation, repository analysis, and environment variable management. The most significant changes include the introduction of a context-aware test generation system, updates to repository analysis logic, and improvements to environment variable prompting. Additionally, configuration constants and export structure have been updated for better maintainability.\r\n\r\n### Context-Aware Test Generation\r\n* Added a new system for generating plugin-specific tests dynamically based on the plugin's actual structure and functionality. This replaces the old static template system, ensuring more relevant and accurate tests. (`CONTEXT_AWARE_TESTING.md`)\r\n\r\n### Repository Analysis Enhancements\r\n* Implemented a repository analyzer that scans a plugin's directory for key files (`README.md`, `package.json`, `index.ts/js`) and source files while respecting token limits and skipping large or binary files. (`repository-analyzer.ts`)\r\n\r\n### Environment Variable Management\r\n* Introduced `EnvPrompter`, a utility for interactive collection and validation of environment variables, with support for sensitive values and default descriptions. (`env-prompter.ts`)\r\n\r\n### Configuration Updates\r\n* Added new configuration constants for migration, including `MAX_TOKENS`, `CLAUDE_CODE_TIMEOUT`, and `MIN_DISK_SPACE_GB`, to centralize and standardize settings. (`config.ts`)\r\n\r\n### Export Structure Improvements\r\n* Updated the export structure in `index.ts` to include new components like `EnvPrompter`, `ContextAwareTestGenerator`, and configuration constants, ensuring better modularity and accessibility. (`index.ts`)<!-- Use this template by filling in information and copying and pasting relevant items out of the HTML comments. -->\r\n\r\n",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-11T18:02:27Z",
      "mergedAt": null,
      "additions": 46293,
      "deletions": 1326
    },
    {
      "id": "PR_kwDOMT5cIs6clTBC",
      "title": "feat: plugins upgrade with claude code",
      "author": "0xbbjoker",
      "number": 5311,
      "body": "\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n* **New Features**\n  * Introduced an AI-powered migration tool for upgrading ElizaOS plugins from version 0.x to 1.x, featuring a stepwise, gated process with detailed progress reporting and validation at each stage.\n  * Added advanced migration guides and comprehensive documentation covering configuration, state management, providers, prompt generation, and testing.\n  * Extended CLI options for the upgrade command, including verbosity controls and confirmation skipping.\n\n* **Bug Fixes**\n  * Improved error handling and user messaging during the migration process.\n\n* **Documentation**\n  * Added detailed migration, prompt, state, provider, and testing guides to assist plugin developers with the upgrade process.\n\n* **Chores**\n  * Updated dependencies to support the new migration workflow.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-29T15:07:06Z",
      "mergedAt": "2025-07-01T12:49:28Z",
      "additions": 6050,
      "deletions": 1089
    },
    {
      "id": "PR_kwDOMT5cIs6c1Ksr",
      "title": "feat: Add @elizaos/plugin-grok for xAI Grok models",
      "author": "0xtc23",
      "number": 5338,
      "body": "Implements a new plugin `@elizaos/plugin-grok` to integrate with xAI's Grok language models. This plugin leverages Grok's OpenAI-compatible API.\r\n\r\nKey changes:\r\n- Created `packages/plugin-grok/`:\r\n    - `package.json`: Defines the new plugin package.\r\n    - `tsconfig.json`, `tsup.config.ts`: Build configuration.\r\n    - `src/index.ts`: Implements `GrokLanguageModel` (extending `ChatLanguageModel` from core) using the OpenAI SDK configured for Grok's API endpoint (`https://api.x.ai/v1`) and `XAI_API_KEY`. Includes `generate` and `stream` methods with preliminary tool use support. Registers `GrokService` with service type \"grok\".\r\n    - `src/__tests__/index.test.ts`: Basic unit tests for `GrokLanguageModel`.\r\n    - `README.md`: Documentation for setting up and using the plugin.\r\n- Updated `packages/cli/src/server/loader.ts` to import `@elizaos/plugin-grok`, ensuring the service is registered.\r\n- Updated `packages/cli/tsconfig.json` to include path mapping for the new local plugin.\r\n- Updated `packages/cli/src/characters/gork.ts` to demonstrate how a character can conditionally use `@elizaos/plugin-grok` if `XAI_API_KEY` is set.\r\n\r\nThis allows users with an XAI API key to use Grok models within the ElizaOS ecosystem.\r\n\r\n<!-- Use this template by filling in information and copying and pasting relevant items out of the HTML comments. -->\r\n\r\n# Relates to\r\n\r\n<!-- LINK TO ISSUE OR TICKET -->\r\n\r\n<!-- This risks section must be filled out before the final review and merge. -->\r\n\r\n# Risks\r\n\r\n<!--\r\nLow, medium, large. List what kind of risks and what could be affected.\r\n-->\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\n## What kind of change is this?\r\n\r\n<!--\r\nBug fixes (non-breaking change which fixes an issue)\r\nImprovements (misc. changes to existing features)\r\nFeatures (non-breaking change which adds functionality)\r\nUpdates (new versions of included code)\r\n-->\r\n\r\n<!-- This \"Why\" section is most relevant if there are no linked issues explaining why. If there is a related issue, it might make sense to skip this why section. -->\r\n<!--\r\n## Why are we doing this? Any context or related work?\r\n-->\r\n\r\n# Documentation changes needed?\r\n\r\n<!--\r\nMy changes do not require a change to the project documentation.\r\nMy changes require a change to the project documentation.\r\nIf documentation change is needed: I have updated the documentation accordingly.\r\n-->\r\n\r\n<!-- Please show how you tested the PR. This will really help if the PR needs to be retested and probably help the PR get merged quicker. -->\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\n## Detailed testing steps\r\n\r\n<!--\r\nNone: Automated tests are acceptable.\r\n-->\r\n\r\n<!--\r\n- As [anon/admin], go to [link]\r\n  - [do action]\r\n  - verify [result]\r\n-->\r\n\r\n<!-- If there is a UI change, please include before and after screenshots or videos. This will speed up PRs being merged. It is extra nice to annotate screenshots with arrows or boxes pointing out the differences. -->\r\n<!--\r\n## Screenshots\r\n### Before\r\n### After\r\n-->\r\n\r\n<!-- If there is anything about the deployment, please make a note. -->\r\n<!--\r\n# Deploy Notes\r\n-->\r\n\r\n<!--  Copy and paste command line output. -->\r\n<!--\r\n## Database changes\r\n-->\r\n\r\n<!--  Please specify deploy instructions if there is something more than the automated steps. -->\r\n<!--\r\n## Deployment instructions\r\n-->\r\n\r\n<!-- If you are on Discord, please join https://discord.gg/ai16z and state your Discord username here for the contributor role and join us in #development-feed -->\r\n<!--\r\n## Discord username\r\n\r\n-->\r\n",
      "repository": "elizaos/eliza",
      "createdAt": "2025-07-01T07:08:57Z",
      "mergedAt": null,
      "additions": 1731,
      "deletions": 2143
    },
    {
      "id": "PR_kwDOMT5cIs6cbDtx",
      "title": "Feature: Add ELIZA_UI_ENABLE environment variable to toggle Web UI availability",
      "author": "bealers",
      "number": 5304,
      "body": "# Add ELIZA_UI_ENABLE environment variable to control web UI in production\r\n\r\n## Problem\r\n\r\nelizaOS currently serves the web UI to anyone who can reach the server. While there's `ELIZA_SERVER_AUTH_TOKEN` for API endpoints, the web interface itself is wide open. In production deployments, this creates an unnecessary attack surface.\r\n\r\n## Solution\r\n\r\nAdded `ELIZA_UI_ENABLE` environment variable with sensible defaults:\r\n- **Development**: UI enabled by default\r\n- **Production**: UI disabled by default\r\n- **Override**: Set `ELIZA_UI_ENABLE=true/false`\r\n\r\nWhen disabled, the web UI returns a standard HTTP 403 Forbidden error, but all API endpoints continue to work normally.\r\n\r\n## Implementation\r\n\r\n~20 lines in `packages/server/src/index.ts`:\r\n\r\n1. Check `NODE_ENV` and `ELIZA_UI_ENABLE` to determine UI status\r\n2. Conditionally serve static files only when UI is enabled\r\n3. Replace SPA fallback with 403 response when UI is disabled\r\n4. Update startup logging to clearly show UI status\r\n\r\n## Testing\r\n\r\n```bash\r\n# Development (UI enabled)\r\nbun start\r\n\r\n# Production (UI disabled)  \r\nNODE_ENV=production bun start\r\n\r\n# Force enable in production\r\nNODE_ENV=production ELIZA_UI_ENABLE=true bun start\r\n\r\n# Force disable in development\r\nELIZA_UI_ENABLE=false bun start\r\n```\r\n\r\nWhen UI is disabled:\r\n- `http://localhost:3000` → HTTP 403 Forbidden  \r\n- `http://localhost:3000/api/server/ping` → Still works fine\r\n\r\n## Test Coverage\r\n\r\nAdded tests:\r\n- **Unit tests**: Environment variable parsing and default behaviours (development vs production)\r\n- **Integration tests**: Server configuration impact and HTTP response handling\r\n- **Security validation**: API functionality preservation when UI disabled\r\n\r\n`bun test packages/server/src/__tests__/ui-disable-feature.test.ts`\r\n\r\n25 tests passing, including both new tests and existing functionality verification.\r\n\r\n## Justification\r\n\r\nI'm working on scripting prod deploys and wanted a straighforward way to shut the UI off, but keep API open. I've purposely kept the API authentication (`ELIZA_SERVER_AUTH_TOKEN`) separate from this UI disable feature to minimise any clashes. \r\n\r\n\r\n## ⚠️ Desktop App Compatibility\r\n\r\nAny remote deploy breaks the desktop anyway, as it's a wrapper to an iframe polling localhost:3000. \r\n\r\nIn future iterations of the desktop app, with the correct plumbing, it could:\r\n\r\n1. **Explicitly override**: `ELIZA_UI_ENABLE=true elizaos start`\r\n2. **Environment file**: Add `ELIZA_UI_ENABLE=true` to `.env`\r\n3. **Startup script**: Desktop app launcher can set the environment variable\r\n\r\n(I'd be happy to help with this!)\r\n\r\n## Backward compatibility\r\n\r\nShould be fully backward compatible - no breaking changes, development experience stays the same. Only affects deployments that explicitly set `NODE_ENV=production`.\r\n\r\n---\r\n\r\nDiscord: @bealers ",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-27T12:57:03Z",
      "mergedAt": "2025-07-01T16:03:02Z",
      "additions": 1148,
      "deletions": 217
    },
    {
      "id": "PR_kwDOMT5cIs6cw3Tz",
      "title": "🔧 Fix Windows CI Issues - Comprehensive Solution",
      "author": "wtfsayo",
      "number": 5332,
      "body": "# 🔧 Fix Windows CI Issues - Comprehensive Solution\n\n## 📋 Summary\n\nThis PR implements a comprehensive solution to resolve the long-standing Windows CI failures that have been affecting the ElizaOS project. The fixes address root causes including Bun installation issues, process cleanup problems, memory constraints, and flaky test execution.\n\n## 🎯 Problems Solved\n\n### 1. **Bun Installation & Reliability Issues**\n- ❌ Bun installation failures on Windows runners\n- ❌ PATH resolution problems preventing Bun execution\n- ❌ Cache corruption causing installation loops\n- ❌ File permission issues blocking Bun execution\n\n### 2. **Process Management Problems**\n- ❌ Hanging test processes causing CI timeouts\n- ❌ Port conflicts from previous test runs\n- ❌ Resource leaks affecting subsequent tests\n- ❌ Inadequate process cleanup on Windows\n\n### 3. **Test Execution Issues**\n- ❌ Flaky tests due to resource contention\n- ❌ Memory constraints causing OOM errors\n- ❌ Poor error handling and diagnostics\n- ❌ No retry logic for transient failures\n\n## ✅ Solutions Implemented\n\n### 🔧 **New Windows-Specific Scripts**\n\n#### 1. `packages/cli/tests/fix-bun-windows.ps1`\n**Comprehensive Bun Installation Fixer**\n- Automatically detects and repairs Bun installation issues\n- Fixes PATH resolution problems\n- Clears corrupted cache files\n- Repairs file permissions\n- Provides fallback reinstallation\n- Includes detailed diagnostics\n\n#### 2. `packages/cli/tests/cleanup-processes.ps1`\n**Advanced Process Cleanup**\n- Terminates hanging processes by pattern matching\n- Cleans up port conflicts using `Get-NetTCPConnection`\n- Handles Eliza-specific process cleanup\n- Forces garbage collection\n- Safe error handling for all operations\n\n#### 3. `packages/cli/tests/windows-test-helper.ps1`\n**Robust Test Execution Framework**\n- Implements configurable retry logic (default: 2 attempts)\n- Provides timeout handling using PowerShell jobs\n- Pre and post-test environment verification\n- Comprehensive cleanup between attempts\n- Detailed logging and error reporting\n\n### 🚀 **Enhanced CI Workflow**\n\n#### Updated `.github/workflows/cli-tests.yml`\n- **Memory Optimization**: Increased Node.js heap to 6144MB for Windows\n- **Performance**: Added Windows Defender exclusions for faster file operations\n- **Environment Setup**: Optimized environment variables and caching\n- **Integration**: Seamlessly integrated all new helper scripts\n- **Monitoring**: Added verification steps for cleanup success\n\n## 📊 **Key Improvements**\n\n| **Area** | **Before** | **After** |\n|----------|------------|-----------|\n| **Bun Reliability** | Manual troubleshooting | Automatic detection & fixing |\n| **Process Cleanup** | Basic `pkill` commands | Native PowerShell process management |\n| **Test Execution** | Single attempt, no retry | 2 retries with proper cleanup |\n| **Memory Handling** | Default limits (often insufficient) | 6144MB + forced GC |\n| **Diagnostics** | Limited error info | Comprehensive logging & monitoring |\n| **Timeout Handling** | Fixed 15min timeout | 25min with job-based isolation |\n\n## 🔄 **Workflow Changes**\n\n### Before:\n```yaml\n- name: Run CLI TypeScript tests (Windows)\n  run: cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" bun test tests/commands/\n```\n\n### After:\n```yaml\n- name: Configure Windows environment\n  # Windows Defender exclusions, memory optimization\n  \n- name: Fix and verify Bun installation\n  # Automatic Bun installation fixing\n  \n- name: Install dependencies (with retry logic)\n  # Retry logic for flaky installations\n  \n- name: Run CLI TypeScript tests (Windows - Enhanced)\n  # Advanced test execution with helper script\n  \n- name: Cleanup test processes (Windows - Enhanced)\n  # Comprehensive cleanup using dedicated script\n  \n- name: Verify Windows cleanup\n  # Verification of cleanup success\n```\n\n## 🧪 **Testing Strategy**\n\n### Manual Testing Commands:\n```powershell\n# Fix Bun installation\npowershell -ExecutionPolicy Bypass -File \"packages/cli/tests/fix-bun-windows.ps1\" -Verbose\n\n# Clean up processes\npowershell -ExecutionPolicy Bypass -File \"packages/cli/tests/cleanup-processes.ps1\"\n\n# Run tests with retry\npowershell -ExecutionPolicy Bypass -File \"packages/cli/tests/windows-test-helper.ps1\" -TestCommand \"bun test tests/commands/\" -MaxRetries 3\n```\n\n## 📈 **Expected Impact**\n\n### Immediate Benefits:\n- **🎯 Reduced CI failure rate** by addressing root causes\n- **⚡ Faster issue resolution** through automatic fixing\n- **🔍 Better debugging** with comprehensive diagnostics\n- **🔄 Consistent environment** through standardized cleanup\n- **🛠️ Maintainable solution** with modular, updateable scripts\n\n### Long-term Benefits:\n- **📊 Improved developer productivity** - Less time debugging CI\n- **🚀 Faster iteration cycles** - More reliable test execution\n- **💰 Reduced CI costs** - Fewer failed runs and retries\n- **🔧 Easier maintenance** - Clear separation of concerns\n\n## 🔍 **Files Changed**\n\n### New Files:\n- `packages/cli/tests/cleanup-processes.ps1` - Windows process cleanup\n- `packages/cli/tests/windows-test-helper.ps1` - Test execution framework\n- `packages/cli/tests/fix-bun-windows.ps1` - Bun installation fixer\n- `WINDOWS_CI_FIXES.md` - Comprehensive documentation\n\n### Modified Files:\n- `.github/workflows/cli-tests.yml` - Enhanced Windows CI workflow\n\n## ⚙️ **Configuration Options**\n\n### Windows Test Helper:\n- `TestCommand` - Command to execute\n- `MaxRetries` - Number of retry attempts (default: 2)\n- `TimeoutMinutes` - Timeout per attempt (default: 15)\n\n### Bun Fixer:\n- `Force` - Force reinstallation\n- `Verbose` - Enable detailed logging\n\n## 🔒 **Safety & Compatibility**\n\n- **✅ Backward Compatible**: Doesn't affect Linux/macOS workflows\n- **✅ Safe Error Handling**: Graceful degradation on failures\n- **✅ Non-Breaking**: Existing functionality preserved\n- **✅ Isolated**: Windows-specific changes only\n\n## 🚨 **Breaking Changes**\n\n**None** - This PR only enhances Windows CI reliability without changing any APIs or interfaces.\n\n## 📝 **Additional Notes**\n\n### Why PowerShell Scripts?\n- **Native Windows support** - Better process and port management\n- **Rich error handling** - Comprehensive try/catch blocks\n- **Built-in cmdlets** - `Get-NetTCPConnection`, `Get-Process`, etc.\n- **Job isolation** - Timeout handling with PowerShell jobs\n\n### Monitoring & Maintenance:\n- Scripts include detailed logging for troubleshooting\n- Diagnostic information collected on failures\n- Modular design allows individual component updates\n- Performance metrics can be extracted from logs\n\n## 🔮 **Future Enhancements**\n\n1. **Adaptive timeouts** based on system performance\n2. **Health checks** before test execution\n3. **Metrics collection** for optimization\n4. **Integration testing** across Windows versions\n\n---\n\n**This comprehensive solution addresses the \"too long\" Windows CI issues by tackling fundamental problems rather than applying band-aid fixes. The modular, well-documented approach ensures maintainability and allows for future improvements.**",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-30T20:29:42Z",
      "mergedAt": null,
      "additions": 1009,
      "deletions": 32
    }
  ],
  "codeChanges": {
    "additions": 10678,
    "deletions": 2446,
    "files": 89,
    "commitCount": 40
  },
  "completedItems": [
    {
      "title": "Feature: Add ELIZA_UI_ENABLE environment variable to toggle Web UI availability",
      "prNumber": 5304,
      "type": "feature",
      "body": "# Add ELIZA_UI_ENABLE environment variable to control web UI in production\r\n\r\n## Problem\r\n\r\nelizaOS currently serves the web UI to anyone who can reach the server. While there's `ELIZA_SERVER_AUTH_TOKEN` for API endpoints, the web interface"
    },
    {
      "title": "feat: plugins upgrade with claude code",
      "prNumber": 5311,
      "type": "feature",
      "body": "\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n* **New Features**\n  * Introduced an AI-powered migration tool for upgrading ElizaOS plugins from version 0.x to 1.x, featuring a stepwi"
    },
    {
      "title": "chore: update agent secrets when they are empty with local vars",
      "prNumber": 5329,
      "type": "other",
      "body": "## Summary\r\n\r\nAdd automatic synchronization of secrets from local `.env` file for characters that don't have secrets configured.\r\n\r\n## Context\r\n\r\nWhen characters are stored in the database or loaded from files, they often lack secrets for s"
    },
    {
      "title": "feat: clack env prompts cli, major refactor of cli envs",
      "prNumber": 5326,
      "type": "feature",
      "body": "## 🔧 CLI Environment System Improvements\r\n\r\nThis PR significantly improves the CLI environment variable system, making it more maintainable, user-friendly, and feature-rich.\r\n\r\n### 🎯 Summary of Changes\r\n\r\n#### 1. **Enhanced Plugin Environ"
    },
    {
      "title": "fix: cli create command directory display and cleanup on interruption",
      "prNumber": 5321,
      "type": "bugfix",
      "body": "# Fix CLI create command directory display and cleanup on interruption\r\n\r\n## Problem\r\n\r\nTwo minor bugs with the `elizaos create` command:\r\n\r\n1. **Confusing directory display**: When creating a project/plugin, the confirmation prompt showed "
    },
    {
      "title": "feat(client): Restructure character form action buttons layout",
      "prNumber": 5342,
      "type": "feature",
      "body": "## Description\n\nThis PR restructures the character form action buttons to improve the user experience and visual layout.\n\n## Changes Made\n\n### Layout Improvements\n- **Horizontal Layout**: Replaced vertical stacked buttons with horizontal la"
    },
    {
      "title": "fix: simplify .env file creation to use template only",
      "prNumber": 5340,
      "type": "bugfix",
      "body": "## Summary\n- Remove automatic merging of process.env variables into .env file\n- Use clean template without runtime environment pollution\n- Prevent .env file from becoming cluttered with unrelated variables\n\n## Problem\nThe previous implement"
    },
    {
      "title": "fix: gui version resolve",
      "prNumber": 5339,
      "type": "bugfix",
      "body": "\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n* **New Features**\n  * The app sidebar now displays the server version dynamically, fetched from the server.\n  * Added a new server endp"
    },
    {
      "title": "fix: (cli) show correct type in create command messages",
      "prNumber": 5337,
      "type": "bugfix",
      "body": "## Description\r\n\r\nUpdates the CLI create command to display the correct type (Plugin/Agent/TEE Project) in prompts instead of always showing \"Project\".\r\n\r\n## Changes\r\n\r\n- Dynamic intro message based on `--type` flag\r\n- Type-specific success"
    },
    {
      "title": "fix: auto-install AI model plugins on project creation",
      "prNumber": 5335,
      "type": "bugfix",
      "body": "## Problem\r\n\r\nWhen creating a new project with `elizaos create`, selecting an AI model (e.g., OpenAI, Claude) would:\r\n- ✅ Store the API key in `.env`\r\n- ✅ Report successful configuration\r\n- ❌ **NOT** install the corresponding plugin package"
    }
  ],
  "topContributors": [
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 130.08694431577842,
      "prScore": 129.64894431577844,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.43799999999999994,
      "summary": null
    },
    {
      "username": "yungalgo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/113615973?u=92e0f29f7e2fbb8ce46ed13c51f692ca803de02d&v=4",
      "totalScore": 52.06035254341913,
      "prScore": 51.622352543419126,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.43799999999999994,
      "summary": null
    },
    {
      "username": "0xtc23",
      "avatarUrl": "https://avatars.githubusercontent.com/u/129641996?v=4",
      "totalScore": 43.5437738965761,
      "prScore": 43.5437738965761,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "0xbbjoker",
      "avatarUrl": "https://avatars.githubusercontent.com/u/54844437?u=90fe1762420de6ad493a1c1582f1f70c0d87d8e2&v=4",
      "totalScore": 10.34,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 10,
      "commentScore": 0.33999999999999997,
      "summary": null
    },
    {
      "username": "Dangoz",
      "avatarUrl": "https://avatars.githubusercontent.com/u/71613713?u=1839f372422c7a5503a713dca22981490b4ea7da&v=4",
      "totalScore": 10.263366670143164,
      "prScore": 10.263366670143164,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "linear",
      "avatarUrl": "https://avatars.githubusercontent.com/in/20150?v=4",
      "totalScore": 4,
      "prScore": 0,
      "issueScore": 4,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "borisudovicic",
      "avatarUrl": "https://avatars.githubusercontent.com/u/31806472?u=27713fbe603baae91ef519990facbacd6c23e93d&v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "bealers",
      "avatarUrl": "https://avatars.githubusercontent.com/u/6403055?u=8c40778251e25b92cdee727056415b6c0d1bcdc5&v=4",
      "totalScore": 0.43799999999999994,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.43799999999999994,
      "summary": null
    }
  ],
  "newPRs": 7,
  "mergedPRs": 10,
  "newIssues": 2,
  "closedIssues": 1,
  "activeContributors": 10
}
{
  "interval": {
    "intervalStart": "2025-06-28T00:00:00.000Z",
    "intervalEnd": "2025-06-29T00:00:00.000Z",
    "intervalType": "day"
  },
  "repository": "elizaos/eliza",
  "overview": "From 2025-06-28 to 2025-06-29, elizaos/eliza had 2 new PRs (0 merged), 0 new issues, and 3 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDOMT5cIs653q_k",
      "title": "How to check currently loaded plugins in the agent",
      "author": "omariosman",
      "number": 4931,
      "repository": "elizaos/eliza",
      "body": "When I start the agent using `elizaos start`, how can I check the currently loaded plugins in the agent while it is running?\n\n",
      "createdAt": "2025-06-04T16:14:19Z",
      "closedAt": "2025-06-28T14:57:25Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs68QEwg",
      "title": "Standardize Testing Framework: Migrate from vitest to bun:test",
      "author": "wtfsayo",
      "number": 5185,
      "repository": "elizaos/eliza",
      "body": "# Standardize Testing Framework: Migrate from vitest to bun:test\n\n## Problem Statement\n\nThe ElizaOS monorepo currently uses a mixed testing setup with both `vitest` and `bun:test`, creating inconsistency and potential maintenance overhead. Since the project already uses bun as the package manager and runtime, standardizing on `bun:test` would provide better integration and consistency across the codebase.\n\n## Current State Analysis\n\n**vitest Usage (extensive):**\n- 21+ `vitest.config.ts` files across packages\n- vitest listed as devDependency in root `package.json` and multiple package-specific `package.json` files\n- Used in: `@elizaos/core`, `@elizaos/cli`, `@elizaos/plugin-sql`, `@elizaos/server`, `@elizaos/client`, and others\n- Documentation specifically mentions \"Component tests use **Vitest**\"\n- Test scripts in packages use `vitest run`, `vitest watch`, etc.\n\n**bun:test Usage (minimal):**\n- Only 1 `bunfig.toml` file found in `packages/cli`\n- Limited configuration: just test preload setup\n- No evidence of extensive bun:test usage in test files\n\n## Proposed Solution\n\nMigrate the entire monorepo to use `bun:test` exclusively, removing vitest dependencies and configurations while maintaining all existing test functionality.\n\n## Benefits of bun:test\n\n1. **Consistency**: Single testing framework aligned with bun package manager usage\n2. **Performance**: Native bun testing typically faster than vitest\n3. **Simplicity**: Reduced dependency count and configuration complexity\n4. **Maintenance**: One less external dependency to maintain and update\n5. **Integration**: Better integration with bun's built-in development tools\n\n## Implementation Plan\n\n### Phase 1: Preparation\n- [ ] Audit all test files to identify vitest-specific APIs that need migration\n- [ ] Create bun:test configuration templates for different package types\n- [ ] Update test utilities in `@elizaos/plugin-bootstrap/__tests__/test-utils` for bun:test compatibility\n\n### Phase 2: Core Packages Migration\n- [ ] Migrate `@elizaos/core` package\n  - [ ] Replace `vitest.config.ts` with appropriate `bunfig.toml`\n  - [ ] Update test imports (`describe`, `it`, `expect`, etc.)\n  - [ ] Update package.json test scripts\n  - [ ] Verify all 9 test files work with bun:test\n- [ ] Migrate `@elizaos/plugin-bootstrap` (contains test utilities used by other packages)\n\n### Phase 3: Application Packages Migration\n- [ ] Migrate `@elizaos/cli` package\n  - [ ] Update existing `bunfig.toml` configuration\n  - [ ] Replace vitest scripts with bun:test equivalents\n  - [ ] Update `run-all-tests.sh` script\n  - [ ] Ensure compatibility with BATS tests (keep separate)\n- [ ] Migrate `@elizaos/server` package\n  - [ ] Handle both `vitest.config.ts` and `vitest.config.integration.ts`\n  - [ ] Update integration test setup\n- [ ] Migrate `@elizaos/client` package\n\n### Phase 4: Plugin Packages Migration\n- [ ] Migrate `@elizaos/plugin-sql` (complex test suite)\n- [ ] Migrate remaining plugin packages\n- [ ] Update plugin templates to use bun:test\n\n### Phase 5: Documentation & Templates\n- [ ] Update `/packages/docs/docs/core/testing.md` \n- [ ] Update plugin and project starter templates\n- [ ] Update CLI template generation to use bun:test configuration\n\n### Phase 6: Cleanup\n- [ ] Remove vitest dependencies from all package.json files\n- [ ] Remove all vitest.config.ts files\n- [ ] Update root-level test scripts and turbo.json configuration\n- [ ] Update CI/CD workflows if needed\n\n## Acceptance Criteria\n\n- [ ] All existing tests pass with bun:test\n- [ ] No vitest dependencies remain in any package.json\n- [ ] No vitest configuration files remain\n- [ ] Test coverage functionality maintained (if used)\n- [ ] CI/CD pipeline works with bun:test\n- [ ] Documentation updated to reflect bun:test usage\n- [ ] New project templates use bun:test by default\n- [ ] All test scripts use bun:test commands\n- [ ] Performance benchmarks show no regression (preferably improvement)\n\n## Migration Considerations\n\n**Potential Challenges:**\n1. **API Differences**: Some vitest-specific APIs may not have direct bun:test equivalents\n2. **Coverage Reports**: Ensure test coverage functionality is maintained\n3. **IDE Integration**: Verify IDE/editor test runners work with bun:test\n4. **CI Performance**: Monitor CI build times during transition\n5. **Complex Test Configurations**: Some packages have sophisticated vitest configurations that need careful translation\n\n**Risk Mitigation:**\n- Migrate packages incrementally to catch issues early\n- Maintain comprehensive test suite throughout migration\n- Keep detailed documentation of configuration changes\n- Test in CI environment before merging changes\n\n## Related Files\n\n**High-priority migration targets:**\n- `packages/core/vitest.config.ts` (9 test files)\n- `packages/cli/vitest.config.ts` (extensive test suite)\n- `packages/plugin-sql/vitest.config.ts` (complex integration tests)\n- `packages/server/vitest.config.ts` & `vitest.config.integration.ts`\n- `packages/docs/docs/core/testing.md` (documentation)\n\n**Configuration files to update:**\n- Root `package.json` (remove vitest devDependency)\n- Individual package `package.json` files\n- `turbo.json` (if test pipeline configuration needs updates)\n\n---\n\nThis migration will significantly simplify the testing infrastructure while maintaining all existing functionality and improving consistency across the ElizaOS monorepo.",
      "createdAt": "2025-06-18T22:23:56Z",
      "closedAt": "2025-06-28T14:57:50Z",
      "state": "CLOSED",
      "commentCount": 0
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDOMT5cIs6ch6YT",
      "title": "fix: increase character file size limit to 2MB",
      "author": "wtfsayo",
      "number": 5308,
      "body": "## Summary\n- Fixes #5268 by increasing Express JSON payload limit from 100KB to 2MB\n- Adds comprehensive regression test to prevent future issues\n- Addresses user reports of 150KB character files failing with \"request entity too large\" errors\n\n## Changes\n- Updated Express JSON limit in `packages/server/src/index.ts` from `100kb` to `2mb`\n- Added regression test in `packages/server/src/__tests__/character-file-size-regression.test.ts`\n- Test covers the exact 150KB scenario reported and validates 20x increase in limit\n\n## Test Coverage\n- âœ… Regression test reproduces original 150KB failure scenario\n- âœ… Validates new 2MB limit handles various character sizes (150KB, 500KB, 1MB)\n- âœ… Documents the fix and prevents future regressions\n\nðŸ¤– Generated with [Claude Code](https://claude.ai/code)\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n* **Bug Fixes**\n  * Resolved an issue preventing upload of large character files by increasing the supported file size limit from 100KB to 2MB.\n\n* **Tests**\n  * Added tests to verify support for larger character files and prevent future regressions related to file size limits.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-28T14:42:13Z",
      "mergedAt": null,
      "additions": 108,
      "deletions": 2
    },
    {
      "id": "PR_kwDOMT5cIs6ciCTV",
      "title": "docs: enhance plugin-bootstrap requirements documentation",
      "author": "wtfsayo",
      "number": 5309,
      "body": "## Summary\n\nEnhances documentation to clearly communicate that plugin-bootstrap is mandatory for communication and basic agent functionality unless doing heavy customizations.\n\n## Changes Made\n\n### ðŸ“š Documentation Updates\n\n- **FAQ Section**: Enhanced the \"Can I skip the bootstrap plugin?\" section to emphasize it's mandatory for communication\n- **README.md**: Updated plugin-bootstrap description to highlight it as \"Essential communication core\" and \"Required for basic agent functionality\"\n- **Core Plugins Documentation**: Added clear warnings about bootstrap plugin requirement and what happens without it\n- **Quickstart Guide**: Added important note about plugin-bootstrap being essential for communication\n\n### ðŸŽ¯ Key Improvements\n\n- Clarifies that plugin-bootstrap is **mandatory for communication** unless building custom event handling\n- Explains what functionality breaks without plugin-bootstrap (message processing, responses, etc.)\n- Maintains information about IGNORE_BOOTSTRAP for testing purposes\n- Provides clear guidance on when it can be skipped (heavy customizations only)\n\n### ðŸ“‹ Files Changed\n\n- `README.md` - Enhanced plugin-bootstrap description\n- `packages/docs/docs/faq.md` - Improved FAQ answer with emphasis on requirement\n- `packages/docs/docs/core/plugins.md` - Added warnings and requirements section\n- `packages/docs/docs/quickstart.md` - Added important note for new users\n\n## Problem Solved\n\nPreviously, the documentation suggested plugin-bootstrap was \"optional\" or \"should be imported into most agents,\" which led to confusion. Users might skip it thinking it's just nice-to-have, when in reality it contains critical event handlers for message processing and communication.\n\n## Impact\n\n- New users will understand plugin-bootstrap is essential for basic agent functionality\n- Reduces confusion about why agents don't respond when plugin-bootstrap is missing\n- Maintains flexibility for advanced users doing heavy customizations\n- Improves onboarding experience by setting correct expectations",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-28T15:08:14Z",
      "mergedAt": null,
      "additions": 44,
      "deletions": 17
    }
  ],
  "codeChanges": {
    "additions": 0,
    "deletions": 0,
    "files": 0,
    "commitCount": 3
  },
  "completedItems": [],
  "topContributors": [
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 36.23279897140252,
      "prScore": 35.794798971402514,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.43799999999999994,
      "summary": null
    },
    {
      "username": "bealers",
      "avatarUrl": "https://avatars.githubusercontent.com/u/6403055?u=8c40778251e25b92cdee727056415b6c0d1bcdc5&v=4",
      "totalScore": 0.2,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    }
  ],
  "newPRs": 2,
  "mergedPRs": 0,
  "newIssues": 0,
  "closedIssues": 2,
  "activeContributors": 3
}
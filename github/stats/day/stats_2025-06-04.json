{
  "interval": {
    "intervalStart": "2025-06-04T00:00:00.000Z",
    "intervalEnd": "2025-06-05T00:00:00.000Z",
    "intervalType": "day"
  },
  "repository": "elizaos/eliza",
  "overview": "From 2025-06-04 to 2025-06-05, elizaos/eliza had 17 new PRs (11 merged), 10 new issues, and 12 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDOMT5cIs652Dw9",
      "title": "Web client thinks it is on a different version",
      "author": "scottrepreneur",
      "number": 4924,
      "repository": "elizaos/eliza",
      "body": "**Describe the bug**\n\nThe web client shows `v1.0.3` but the cli and core are on `v1.0.4`\n\n**To Reproduce**\n\n1. `elizaos create`\n2. select defaults\n3. cd & `elizaos start`\n4. open web client\n5. see incorrect version and update spaz banner\n\n**Expected behavior**\n\nShould see matching version in web client\n\n```bash\nVersion: 1.0.4\n[2025-06-04 13:38:06] WARN: Server authentication is disabled. Set ELIZA_SERVER_AUTH_TOKEN environment variable to enable.\nStartup successful!\nGo to the dashboard at http://localhost:3000\n```\n\n**Screenshots**\n\n<img width=\"232\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/185ab37d-74c7-4c29-a6aa-2ec0afccc2fc\" />\n\nhttps://github.com/user-attachments/assets/c435654e-56df-4ecd-93f5-3faf2d1db91c\n\n**Additional Context**\n\nelizaos: `v1.0.4`\nMac: `15.5`\n",
      "createdAt": "2025-06-04T13:59:53Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 3
    },
    {
      "id": "I_kwDOMT5cIs65uEGH",
      "title": "Installation and plugins issue with aws bedrock",
      "author": "omariosman",
      "number": 4911,
      "repository": "elizaos/eliza",
      "body": "When I create an eliza project using `elizaos create` I cannot find aws bedrock as a model provider\nHowever, when I clone the whole `eliza repo`, I can find aws bedrock model, why does that happen?\nHow can I get to access aws bedrock model even from `elizaos create` without the need to clone the whole repo ",
      "createdAt": "2025-06-04T00:40:12Z",
      "closedAt": "2025-06-04T07:14:48Z",
      "state": "CLOSED",
      "commentCount": 2
    },
    {
      "id": "I_kwDOMT5cIs600DmL",
      "title": "Error: No handler found for delegate type: TEXT_EMBEDDING with OpenAI",
      "author": "Kirstygoodary",
      "number": 4418,
      "repository": "elizaos/eliza",
      "body": "Having issues in the chat, when writing the message getting this error: \n\n```\nfile:///Users/../.nvm/versions/node/v23.3.0/lib/node_modules/@elizaos/cli/dist/chunk-GFPVHNVN.js:46822\n      throw new Error(`No handler found for delegate type: ${modelKey}`);\n            ^\n```\n```\nError: No handler found for delegate type: TEXT_EMBEDDING\n```\n\nI've added the open api key to .env. \n\nOn line 45459 in `chunk-GFPVHNVN.js`  - `TEXT_EMBEDDING: \"TEXT_EMBEDDING\"`,  is being used as the `modelKey` it seems. \nis this right for `modelType`? \n\nAlso tried `rm -rf ~/.eliza` and restarted.",
      "createdAt": "2025-05-01T09:48:19Z",
      "closedAt": "2025-06-04T03:32:58Z",
      "state": "CLOSED",
      "commentCount": 1
    },
    {
      "id": "I_kwDOMT5cIs65j3LT",
      "title": "As a Full stack Software Engineer, I am looking for new opening job position",
      "author": "mattdev071",
      "number": 4901,
      "repository": "elizaos/eliza",
      "body": "\nI'm passionate about building apps that tie frontend, backend, and smart contracts together, with a layer of AI when useful. \nLet’s work together.",
      "createdAt": "2025-06-03T09:29:20Z",
      "closedAt": "2025-06-04T11:37:48Z",
      "state": "CLOSED",
      "commentCount": 1
    },
    {
      "id": "I_kwDOMT5cIs650izy",
      "title": "Agent won't respond to twitter mentions",
      "author": "CurralesDragon",
      "number": 4921,
      "repository": "elizaos/eliza",
      "body": "```\n   agentName: \"Eliza\"\n[2025-06-04 13:31:03.404 +0200] DEBUG: Service instrumentation not found\n    agentName: \"Eliza\"\n[2025-06-04 11:31:04] DEBUG: [Bootstrap] Response evaluation for Eliza:\n<response>\n  <name>Eliza</name>\n  <reasoning>... is directly asking for clarification, so it's appropriate to respond.</reasoning>\n  <action>REPLY</action>\n</response>\n{\"level\":20,\"time\":1749036664690,\"pid\":3826,\"hostname\":\"MacBook-Pro-9.local\",\"msg\":\"Found response XML block\"}\nshouldRespond is false\nshouldSkipShouldRespond false\n[2025-06-04 11:31:04] DEBUG: [Bootstrap] Response type: string\n[2025-06-04 11:31:04] DEBUG (Eliza): [Bootstrap] Parsed response:\n    reasoning: \"... is directly asking for clarification, so it's appropriate to respond.\"\n    action: \"REPLY\"\n[2025-06-04 11:31:04] DEBUG: [Bootstrap] Agent decided not to respond (shouldRespond is false).\n[2025-06-04 11:31:04] WARN: No text content in response, skipping tweet reply\n```\nAgent won't respond to any mentions when creating a project via the CLI\n\nRunning default agent with env variables set, all the functionality from the twitter interactions seems to work except for the replies. The action taken is actually IGNORE instead of REPLY \n\nDefault config and settings Version: 1.0.4\n\nAm i missing something?",
      "createdAt": "2025-06-04T11:50:36Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 1
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDOMT5cIs6ZDLkG",
      "title": "1.0.5 develop merge",
      "author": "ChristopherTrimboli",
      "number": 4928,
      "body": "This pull request introduces several changes across multiple files, focusing on improving plugin development workflows, refining message handling logic, and simplifying client-side configurations. Key updates include the introduction of a new utility for detecting local plugin development contexts, enhancements to the message bus service for better handling of direct messages, and the removal of redundant scripts in the client package.\r\n\r\n### Plugin Development Enhancements:\r\n* Added `plugin-context` utilities to detect local plugin development scenarios, ensure plugins are built before loading, and provide guidance when issues occur. These changes impact files like `packages/cli/src/utils/plugin-context.ts`, `install-plugin.ts`, and `load-plugin.ts`. [[1]](diffhunk://#diff-82c66107ee0ef273a03277a2536340f5ff1061780808d49e160ff641b80d1cd8R1-R142) [[2]](diffhunk://#diff-74a3576479d0da74bc7663b3f9e5af4ff702625b15832eae51be54ab9b21bcf8R8) [[3]](diffhunk://#diff-0cf79118603e21c1796db0c0a2d3f9946318d2ec59cb14eef71115ff5368f603L77-R109)\r\n* Updated `loadAndPreparePlugin` in `start.ts` to prioritize local development scenarios when loading plugins. [[1]](diffhunk://#diff-6858dc88bcb8c8d88063b185a5bddbe2709171731c56c401cbf793bf7ff5baa1R51-R71) [[2]](diffhunk://#diff-6858dc88bcb8c8d88063b185a5bddbe2709171731c56c401cbf793bf7ff5baa1R98)\r\n* Prevented self-installation of plugins in `installPlugin` to avoid accidental overwrites during development.\r\n\r\n### Message Handling Improvements:\r\n* Enhanced `MessageBusService` to validate UUIDs, handle direct message channels, and log detailed information for debugging purposes. This includes checks for agent participation in DM channels and fallback behavior when participant checks fail.\r\n* Added `validateUuid` import to `message.ts` for improved validation logic.\r\n\r\n### Client-Side Simplifications:\r\n* Removed the `version.sh` script and related references from `packages/client/package.json`, simplifying the build process. [[1]](diffhunk://#diff-8ef328a58a2bf7849f068b414807c673ff1d348e37d0df64299eeab7acb793fdL1-L28) [[2]](diffhunk://#diff-26d3d28d31824ef26252df77cca08d24faea8451cb8fd3ffee2000f9e496daa0L8-L27)\r\n* Updated `package.json` in the client package to streamline scripts and dependencies, such as replacing `vitest` test commands with coverage support and removing unnecessary dependencies. [[1]](diffhunk://#diff-26d3d28d31824ef26252df77cca08d24faea8451cb8fd3ffee2000f9e496daa0R72) [[2]](diffhunk://#diff-26d3d28d31824ef26252df77cca08d24faea8451cb8fd3ffee2000f9e496daa0R82) [[3]](diffhunk://#diff-26d3d28d31824ef26252df77cca08d24faea8451cb8fd3ffee2000f9e496daa0L98)\r\n* Added `fs` import to `vite.config.ts` for potential future use.\r\n\r\n### Other Notable Changes:\r\n* Modified the `copy-templates` script to exclude `node_modules` and `.git` directories during template copying.\r\n* Updated the Tauri app's `run` function to directly call `elizaos` instead of using `npx`.",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-04T15:46:01Z",
      "mergedAt": "2025-06-05T19:57:06Z",
      "additions": 2338,
      "deletions": 1197
    },
    {
      "id": "PR_kwDOMT5cIs6ZGqCU",
      "title": "chore: force bun in cli, add install docs",
      "author": "ChristopherTrimboli",
      "number": 4937,
      "body": "",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-04T23:03:13Z",
      "mergedAt": "2025-06-05T12:36:31Z",
      "additions": 574,
      "deletions": 205
    },
    {
      "id": "PR_kwDOMT5cIs6ZBQz9",
      "title": "feat: [DRAFT] fallback installation to latest v1 related branch at last",
      "author": "wtfsayo",
      "number": 4923,
      "body": "incase user is blocked by `unreleased` changes falls back to installing from latest commit on 1.x related branch on git repo",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-04T12:55:08Z",
      "mergedAt": null,
      "additions": 440,
      "deletions": 457
    },
    {
      "id": "PR_kwDOMT5cIs6Y_SsO",
      "title": "fix: prevent circular dependency",
      "author": "wtfsayo",
      "number": 4917,
      "body": "# Fix Circular Dependency During Plugin Testing\r\n\r\n## 🚨 Problem\r\n\r\nWhen plugin developers run `elizaos test` from within their plugin directory, the CLI encounters a critical circular dependency issue:\r\n\r\n1. **Test Command Execution**: `elizaos test` is run from within a plugin directory (e.g., `/path/to/my-plugin/`)\r\n2. **Plugin Loading Attempt**: The CLI attempts to load the plugin being tested\r\n3. **Loading Failure**: Plugin not found in node_modules (since it's being developed locally)\r\n4. **Installation Trigger**: System calls `installPlugin()` to install the missing plugin\r\n5. **Self-Installation**: Plugin tries to install itself into its own directory\r\n6. **Circular Dependency**: 💥 Creates circular reference, corrupts package.json, and breaks testing\r\n\r\n### Real-World Impact\r\n- Plugin developers cannot run tests without encountering errors\r\n- Package.json files get corrupted by self-installation attempts\r\n- Development workflow is severely hindered\r\n- Poor developer experience discourages plugin development\r\n\r\n## 🔍 Root Cause Analysis\r\n\r\nThe core issue lies in the plugin loading system's lack of **context awareness**:\r\n\r\n### Current Flow (Problematic)\r\n```\r\nelizaos test (in plugin dir) \r\n  → startAgent() \r\n  → loadAndPreparePlugin(\"@user/plugin-name\")\r\n  → loadPluginModule() [FAILS - not in node_modules]\r\n  → installPlugin(\"@user/plugin-name\", process.cwd()) [CIRCULAR\\!]\r\n  → Package corruption & dependency errors\r\n```\r\n\r\n### Key Issues Identified\r\n1. **No Local Development Detection**: System doesn't recognize when operating within a plugin's own directory\r\n2. **Blind Installation Logic**: `installPlugin()` doesn't prevent self-installation\r\n3. **Missing Context**: No distinction between \"external plugin\" vs \"current plugin being tested\"\r\n4. **Poor Error Handling**: Generic error messages provide no actionable guidance\r\n\r\n## ✅ Solution: Context-Aware Plugin Resolution\r\n\r\nThis PR introduces a comprehensive **context-aware plugin resolution system** that intelligently handles local plugin development scenarios.\r\n\r\n### New Architecture\r\n\r\n```\r\nelizaos test (in plugin dir)\r\n  → detectPluginContext() [NEW: Smart detection]\r\n  → IF local development detected:\r\n    → Load from local dist/ [PREVENTS circular dependency]\r\n    → Auto-build if needed\r\n    → Provide helpful guidance\r\n  → ELSE:\r\n    → Continue with normal plugin installation flow\r\n```\r\n\r\n## 🛠 Implementation Details\r\n\r\n### 1. Plugin Context Detection System\r\n\r\n**New File**: `src/utils/plugin-context.ts`\r\n\r\n```typescript\r\nexport function detectPluginContext(pluginName: string): PluginContext {\r\n  // Intelligent detection of local plugin development\r\n  // Handles various naming conventions and directory structures\r\n  // Returns context with build status and local paths\r\n}\r\n```\r\n\r\n**Features**:\r\n- **Smart Name Matching**: Handles `@scope/plugin-name`, `plugin-name`, `name` variations\r\n- **Directory Fallback**: Matches by directory name when package names differ\r\n- **Build Detection**: Checks if plugin is built and ready to load\r\n- **Path Resolution**: Provides exact paths for local loading\r\n\r\n### 2. Enhanced Plugin Loading Strategy\r\n\r\n**Modified**: `src/utils/load-plugin.ts`\r\n\r\n**New Priority Order**:\r\n1. **🎯 Local Development Plugin** (NEW - Highest Priority)\r\n2. Workspace dependency\r\n3. Direct path\r\n4. Local node_modules\r\n5. Global node_modules\r\n6. Package.json entry\r\n7. Common dist pattern\r\n\r\n**Local Development Strategy**:\r\n- Detects plugin development context\r\n- Auto-builds plugin if needed\r\n- Loads directly from `dist/` output\r\n- Provides helpful error messages\r\n- Skips unnecessary installation attempts\r\n\r\n### 3. Self-Installation Prevention\r\n\r\n**Modified**: `src/utils/install-plugin.ts` & `src/commands/start.ts`\r\n\r\n```typescript\r\n// NEW: Early detection prevents circular dependency\r\nconst context = detectPluginContext(pluginName);\r\nif (context.isLocalDevelopment) {\r\n  // Block self-installation\r\n  // Provide helpful guidance\r\n  // Load locally instead\r\n}\r\n```\r\n\r\n**Benefits**:\r\n- **Prevents Corruption**: No more package.json modification attempts\r\n- **Clear Messaging**: Explains why installation was prevented\r\n- **Alternative Path**: Suggests local build and provides commands\r\n\r\n### 4. Improved Developer Experience\r\n\r\n**Enhanced Error Handling**:\r\n- Context-aware error messages\r\n- Specific build instructions\r\n- Actionable guidance for developers\r\n- Clear explanation of detection logic\r\n",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-04T09:35:46Z",
      "mergedAt": "2025-06-04T15:13:51Z",
      "additions": 228,
      "deletions": 21
    },
    {
      "id": "PR_kwDOMT5cIs6ZEay_",
      "title": "fix: agent cross interference loop",
      "author": "wtfsayo",
      "number": 4935,
      "body": "## Issue Summary\n\nFixed agent cross-chat interference in DM channels where multiple agents would respond to messages intended for a single agent. The root cause was incorrect metadata preservation causing `agent_response` messages to lose their DM context, leading to unwanted cross-agent chatter.\n\n## Root Cause Analysis\n\n1. **Context Bleeding**: Agent responses were being sent with `isDm: false` even when responding to DM messages\n2. **Inconsistent Channel Type Metadata**: Original message metadata wasn't being preserved through response chains\n3. **Missing DM Filtering**: `agent_response` messages weren't being filtered based on channel type in the message bus service\n\n## Technical Solution\n\n### 1. Enhanced Metadata Preservation (`message.ts:390-392`)\n\nFixed the `sendAgentResponseToBus` method to preserve original message metadata:\n\n```typescript\nmetadata: {\n  agent_id: this.runtime.agentId,\n  agentName: this.runtime.character.name,\n  attachments: content.attachments,\n  channelType: originalMessage?.metadata?.channelType || room?.type,\n  isDm: originalMessage?.metadata?.isDm || (originalMessage?.metadata?.channelType || room?.type) === ChannelType.DM,\n},\n```\n\n### 2. Agent Response Filtering (`message.ts:144-150`)\n\nAdded targeted filtering to prevent cross-agent interference:\n\n```typescript\n// Skip agent_response messages from other agents in DM channels to prevent cross-agent chatter\nif (message.source_type === 'agent_response' && (message.metadata?.channelType === ChannelType.DM || message.metadata?.isDm)) {\n  logger.debug(\n    `[${this.runtime.character.name}] MessageBusService: Skipping agent_response message in DM channel to prevent cross-agent interference.`\n  );\n  return;\n}\n```\n\n### 3. ChannelType Enum Standardization\n\nStandardized ChannelType values across the codebase:\n- **Main types file**: Updated to use consistent uppercase values (`DM`, `GROUP` instead of `dm`, `group`)\n- **V2 types file**: Synchronized enum values for consistency\n- **Test files**: Updated to use enum constants instead of hardcoded strings\n\n## Impact\n\n✅ **Prevents**: Unwanted agent-to-agent responses in DM channels  \n✅ **Preserves**: Group chat functionality where multiple agents should interact  \n✅ **Maintains**: Proper context throughout conversation threads  \n✅ **Ensures**: Consistent channel type handling across the codebase  \n\n## Files Modified\n\n- `/packages/cli/src/server/services/message.ts` - Core message routing fixes\n- `/packages/core/src/types.ts` - ChannelType enum standardization  \n- `/packages/core/src/specs/v2/types.ts` - Synchronized enum values\n- `/packages/plugin-bootstrap/__tests__/evaluators.test.ts` - Updated test to use enum\n\n## Testing\n\nThe fix has been tested and verified to:\n- Stop cross-agent responses in DM channels\n- Maintain proper agent behavior in group channels\n- Preserve conversation context through message threads\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-04T18:07:51Z",
      "mergedAt": "2025-06-05T08:55:15Z",
      "additions": 218,
      "deletions": 226
    }
  ],
  "codeChanges": {
    "additions": 476,
    "deletions": 163,
    "files": 23,
    "commitCount": 58
  },
  "completedItems": [
    {
      "title": "fix: agent self-response infinite loop in message service",
      "prNumber": 4934,
      "type": "bugfix",
      "body": "## Summary\nFixed infinite loop where multiple agents were responding to each other's messages, creating endless back-and-forth conversations.\n\n## Root Cause\nThe issue was that agents were processing and responding to any agent_response mess"
    },
    {
      "title": "fix useVersion in client spamming",
      "prNumber": 4932,
      "type": "bugfix",
      "body": ""
    },
    {
      "title": "feat: chat ui improvements",
      "prNumber": 4930,
      "type": "feature",
      "body": "## Summary\n- Fix thought and action data persistence after page refresh by extracting from rawMessage in messages API\n- Fix user message alignment to appear on right side of chat consistently across DM and GROUP modes  \n- Fix inactive agent"
    },
    {
      "title": "chore: update bun.lockb",
      "prNumber": 4925,
      "type": "other",
      "body": "This PR updates the bun.lockb file to ensure it's in sync with the latest dependencies.\n\nAfter running `bun install`, no changes were detected in the lockfile, indicating that all dependencies are already up to date."
    },
    {
      "title": "chore: add bootstrap to package.json",
      "prNumber": 4922,
      "type": "feature",
      "body": "make it easier for users to start (less log spam, gets installed during auto installation during create command)"
    },
    {
      "title": "fix: eliza responding for other characters",
      "prNumber": 4920,
      "type": "bugfix",
      "body": "\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **Bug Fixes**\n  - Improved validation for direct message channels to ensure only authorized participants receive messages.\n\n- **New Fe"
    },
    {
      "title": "fix(bootstrap): ensure action callbacks reach users and improve shouldRespond logic",
      "prNumber": 4919,
      "type": "bugfix",
      "body": "## Relates to\r\n\r\nResolves issue where MCP tool responses and other non-REPLY actions were generated but never sent to users.\r\n\r\n## Risks\r\n\r\n**Low** - This is a bug fix that ensures action callbacks are properly transmitted. The change is is"
    },
    {
      "title": "fix: remove duplicate @elizaos/cli dependency from root package.json",
      "prNumber": 4918,
      "type": "bugfix",
      "body": "This PR fixes the bun install error caused by having `@elizaos/cli` listed as both a workspace package and a root dependency.\n\n### Changes\n- Removed `@elizaos/cli` from root `package.json` dependencies since it's already available as a work"
    },
    {
      "title": "fix: prevent circular dependency",
      "prNumber": 4917,
      "type": "bugfix",
      "body": "# Fix Circular Dependency During Plugin Testing\r\n\r\n## 🚨 Problem\r\n\r\nWhen plugin developers run `elizaos test` from within their plugin directory, the CLI encounters a critical circular dependency issue:\r\n\r\n1. **Test Command Execution**: `el"
    },
    {
      "title": "fix: plugin route handler intercepting agent API routes",
      "prNumber": 4916,
      "type": "bugfix",
      "body": "## Problem\n\nThe plugin route handler was incorrectly trying to handle standard agent API routes, causing debug messages like:\n\n```\n[2025-06-04 08:57:23] DEBUG: No valid agentId in query. Trying global match for path: /api/agents/b850bc30-45"
    },
    {
      "title": "windows compatibility",
      "prNumber": 4913,
      "type": "other",
      "body": "This PR enables vanilla windows to build by fixing some dependencies on bash and symlinking"
    }
  ],
  "topContributors": [
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 267.1695476308135,
      "prScore": 264.7315476308135,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0.43799999999999994,
      "summary": null
    },
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 124.13155240484018,
      "prScore": 98.93155240484018,
      "issueScore": 0,
      "reviewScore": 25,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "lalalune",
      "avatarUrl": "https://avatars.githubusercontent.com/u/18633264?u=e2e906c3712c2506ebfa98df01c2cfdc50050b30&v=4",
      "totalScore": 36.99569576445829,
      "prScore": 34.65569576445829,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0.33999999999999997,
      "summary": null
    },
    {
      "username": "0xbbjoker",
      "avatarUrl": "https://avatars.githubusercontent.com/u/54844437?u=90fe1762420de6ad493a1c1582f1f70c0d87d8e2&v=4",
      "totalScore": 36.589745871391024,
      "prScore": 16.589745871391024,
      "issueScore": 0,
      "reviewScore": 20,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "standujar",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16385918?u=718bdcd1585be8447bdfffb8c11ce249baa7532d&v=4",
      "totalScore": 35.74615975689589,
      "prScore": 35.54615975689589,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "yungalgo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/113615973?u=92e0f29f7e2fbb8ce46ed13c51f692ca803de02d&v=4",
      "totalScore": 18.529174095733918,
      "prScore": 13.689174095733918,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0.33999999999999997,
      "summary": null
    },
    {
      "username": "omariosman",
      "avatarUrl": "https://avatars.githubusercontent.com/u/45637656?u=4225742309bf32d2c6c341b67da1613373390605&v=4",
      "totalScore": 10.299999999999999,
      "prScore": 0,
      "issueScore": 10.1,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "github-advanced-security",
      "avatarUrl": "https://avatars.githubusercontent.com/in/57789?v=4",
      "totalScore": 9,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 9,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "scottrepreneur",
      "avatarUrl": "https://avatars.githubusercontent.com/u/1778380?u=fede4269023b94283a66b98872ce7f971a7999e7&v=4",
      "totalScore": 6.3,
      "prScore": 0,
      "issueScore": 6.1,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "CurralesDragon",
      "avatarUrl": "https://avatars.githubusercontent.com/u/7818955?v=4",
      "totalScore": 2.3000000000000003,
      "prScore": 0,
      "issueScore": 2.1,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    }
  ],
  "newPRs": 17,
  "mergedPRs": 11,
  "newIssues": 10,
  "closedIssues": 3,
  "activeContributors": 12
}
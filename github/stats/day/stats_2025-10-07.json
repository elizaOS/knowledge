{
  "interval": {
    "intervalStart": "2025-10-07T00:00:00.000Z",
    "intervalEnd": "2025-10-08T00:00:00.000Z",
    "intervalType": "day"
  },
  "repository": "elizaos/eliza",
  "overview": "From 2025-10-07 to 2025-10-08, elizaos/eliza had 7 new PRs (7 merged), 0 new issues, and 7 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDOMT5cIs7HyidA",
      "title": "Analyze options for MCP Gateway, Add some MCP servers, add x402 layer",
      "author": "borisudovicic",
      "number": 5814,
      "repository": "elizaos/eliza",
      "body": "[https://hackmd.io/aM2pd2NbSmOMzD0X9GPYiQ](https://hackmd.io/aM2pd2NbSmOMzD0X9GPYiQ)",
      "createdAt": "2025-08-25T13:40:42Z",
      "closedAt": "2025-10-07T05:52:32Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7INMZr",
      "title": "Analyze options for MCP Gateway, Add some MCP servers, add x402 layer",
      "author": "borisudovicic",
      "number": 5830,
      "repository": "elizaos/eliza",
      "body": "",
      "createdAt": "2025-08-27T10:47:46Z",
      "closedAt": "2025-10-07T05:52:33Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7Ki49f",
      "title": "Core Cleanup",
      "author": "borisudovicic",
      "number": 5911,
      "repository": "elizaos/eliza",
      "body": "* Audit and refactor type definitions across runtime.\n* Remove legacy code paths (double-inits, redundant type guards).\n* Unify plugin loading across server, CLI, and browser runtimes.",
      "createdAt": "2025-09-09T12:10:03Z",
      "closedAt": "2025-10-07T16:26:04Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7K1tf4",
      "title": "Fully wrap up browser support",
      "author": "borisudovicic",
      "number": 5958,
      "repository": "elizaos/eliza",
      "body": "",
      "createdAt": "2025-09-10T16:20:51Z",
      "closedAt": "2025-10-07T16:26:01Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7LFPoC",
      "title": "send list of partners to BD (plugins)",
      "author": "linear",
      "number": 5969,
      "repository": "elizaos/eliza",
      "body": "",
      "createdAt": "2025-09-11T15:51:03Z",
      "closedAt": "2025-10-07T16:26:03Z",
      "state": "CLOSED",
      "commentCount": 0
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDOMT5cIs6sXx03",
      "title": "fix: agent plugins not reloading on PATCH update and service stop race condition",
      "author": "standujar",
      "number": 6040,
      "body": "# Relates to\r\n\r\nFixes issue where agent plugins/services are not properly updated when using PATCH endpoint to modify agent configuration, and fixes race condition causing service initialization errors during agent restart.\r\n\r\n# Risks\r\n\r\n**Medium**\r\n\r\n- Changes agent update logic to force restart when plugins change\r\n- Modifies service stop behavior to be synchronous\r\n- Could impact agent uptime during configuration updates\r\n- Affects all agents using the PATCH endpoint for updates\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR fixes two critical issues:\r\n\r\n1. **Agent Plugin Update Bug**: When updating an agent via PATCH `/api/agents/:agentId` and changing the `plugins` array, the plugins were not being reloaded. The agent continued using the old plugins/services even after the database was updated.\r\n\r\n2. **Service Stop Race Condition**: The `unregisterAgent` method was not awaiting service shutdown, causing services to be incompletely stopped before agent restart. This led to errors like \"Attempted to assign to readonly property\" when services (Telegram, Discord) tried to reinitialize.\r\n\r\n**Changes:**\r\n\r\n1. **`packages/server/src/api/agents/crud.ts`**:\r\n   - Detects plugin changes by comparing current and updated agent configurations\r\n   - Forces full agent restart (unregister + startAgents) when plugins change\r\n   - Preserves in-place updates for non-critical character property changes\r\n   - Adds detailed logging for restart decisions\r\n\r\n2. **`packages/server/src/index.ts`**:\r\n   - Changes `agent.stop().catch(...)` to `await agent.stop()`\r\n   - Ensures all services (Discord, Telegram, etc.) are completely stopped before proceeding\r\n   - Prevents race conditions when restarting agents\r\n   - Fixes \"Attempted to assign to readonly property\" errors in Telegram/Discord clients\r\n\r\n## What kind of change is this?\r\n\r\n- [x] Bug fixes (non-breaking change which fixes an issue)\r\n- [x] Improvements (misc. changes to existing features)\r\n\r\n# Documentation changes needed?\r\n\r\n- [x] My changes do not require a change to the project documentation.\r\n\r\nThe changes are internal fixes to existing functionality and don't change the API surface.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\n1. Review the plugin change detection logic in `crud.ts` (lines 219-228)\r\n2. Review the restart vs update decision logic (lines 232-250)\r\n3. Review the await change in `index.ts` (line 1273)\r\n\r\n## Detailed testing steps\r\n\r\n### Test 1: Plugin Update with Restart\r\n1. Start an agent with a set of plugins (e.g., `[\"bootstrap\", \"discord\", \"knowledge\"]`)\r\n2. Use PATCH to update the agent and remove a plugin (e.g., remove `\"knowledge\"`)\r\n   ```bash\r\n   curl -X PATCH http://localhost:3000/api/agents/{agentId} \\\r\n     -H \"Content-Type: application/json\" \\\r\n     -d '{\"plugins\": [\"bootstrap\", \"discord\"]}'\r\n   ```\r\n3. Verify the logs show:\r\n   - `[AGENT UPDATE] Agent {id} requires restart due to plugins changes`\r\n   - `[AGENT UPDATE] Restarting agent {id} due to configuration changes`\r\n   - `[AGENT UPDATE] Agent {id} restarted successfully`\r\n4. Verify the removed plugin's services are no longer available\r\n5. Check that plugin routes are updated (e.g., `/knowledge/` routes should be gone)\r\n\r\n### Test 2: Character Update without Restart\r\n1. Start an agent\r\n2. Use PATCH to update only character properties (e.g., `name`, `bio`)\r\n   ```bash\r\n   curl -X PATCH http://localhost:3000/api/agents/{agentId} \\\r\n     -H \"Content-Type: application/json\" \\\r\n     -d '{\"name\": \"New Name\", \"bio\": \"Updated bio\"}'\r\n   ```\r\n3. Verify the logs show:\r\n   - `[AGENT UPDATE] Updated active agent {id} without restart`\r\n4. Verify the agent continues running without interruption\r\n\r\n### Test 3: Service Stop Behavior\r\n1. Start an agent with multiple services (Discord, Telegram, etc.)\r\n2. Update the agent to trigger a restart (change plugins)\r\n3. Verify no errors occur during service shutdown\r\n4. Verify all services are cleanly stopped before restart begins:\r\n   - Look for `[AGENT UNREGISTER] All services stopped for agent {id}`\r\n5. Verify the agent restarts successfully with all new services\r\n",
      "repository": "elizaos/eliza",
      "createdAt": "2025-10-06T21:13:42Z",
      "mergedAt": "2025-10-07T11:51:13Z",
      "additions": 516,
      "deletions": 17
    },
    {
      "id": "PR_kwDOMT5cIs6sagmR",
      "title": "feat(core): Add comprehensive Zod descriptions to character schema",
      "author": "wtfsayo",
      "number": 6043,
      "body": "## Summary\n\nThis PR adds comprehensive `.describe()` annotations to all Zod schema definitions in the character validation schema, significantly improving developer experience and validation error messages.\n\n## Changes\n\n### Schema Descriptions Added\n\n- **UUID Schema**: Documents the unique identifier format\n- **Content Schema**: Explains all message content fields including text, thought, actions, providers, attachments, etc.\n- **Message Example Schema**: Documents conversation example structure with placeholder support\n- **Knowledge Item Schema**: Describes three types of knowledge sources (file paths, file objects, directories)\n- **Template Type Schema**: Explains template strings and functions\n- **Style Schema**: Documents style guidelines for different contexts (all, chat, post)\n- **Settings & Secrets**: Explains configuration and security considerations\n\n### Main Character Schema Fields\n\nAdded detailed descriptions for all character fields:\n- `name`, `username`, `system` - Identity and behavior configuration\n- `bio`, `topics`, `adjectives` - Personality and knowledge areas\n- `messageExamples`, `postExamples` - Conversation and post demonstrations\n- `knowledge` - Reference sources\n- `plugins` - Plugin package names with required examples\n- `settings`, `secrets`, `style` - Configuration and communication style\n\n## Benefits\n\n1. **Self-Documenting Schema**: Developers can understand field purposes without external documentation\n2. **Better Error Messages**: Validation failures now include contextual descriptions\n3. **IDE Support**: Enhanced autocomplete and hover documentation in IDEs\n4. **Developer Onboarding**: New contributors can understand character structure more easily\n5. **Type Safety**: Maintains strict validation while improving clarity\n\n## Based On\n\nCharacter structure and usage patterns from `packages/cli/src/characters/eliza.ts`\n\n## Testing\n\n- ✅ All 23 existing character validation tests pass\n- ✅ 100% test coverage maintained\n- ✅ TypeScript compilation successful\n- ✅ No linting errors\n- ✅ Build completes successfully\n\n## Related\n\nThis enhancement improves the character schema validation introduced in the character validation test suite and makes it easier for developers to create and validate character definitions.\n\n<!-- CURSOR_SUMMARY -->\n---\n\n> [!NOTE]\n> Adds media-aware attachments and comprehensive descriptions to character/content schemas, updates tests accordingly, and removes the standalone example.\n> \n> - **Core**:\n>   - **Schemas**: Add `mediaSchema` and switch `content.attachments` to an array of media; add detailed `.describe()` docs; export `uuidSchema`, `contentSchema`, `messageExampleSchema`, `directoryItemSchema`, `knowledgeItemSchema`, `templateTypeSchema`, `styleSchema`, `settingsSchema`, `secretsSchema`; loosen `contentSchema` (`.loose()`/`catchall`) and broaden `settingsSchema` value types.\n>   - **Character Schema**: Add descriptions for all fields; keep strict validation.\n>   - **Tests**: Update `character-validation.test.ts` to use new attachment shape with `id`, `url`, `title`, `description`.\n> - **Examples**:\n>   - Remove `examples/standalone.ts`.\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit 8f0fd948e9da550a4e23fcc816b74192d76b44ba. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-10-07T04:55:21Z",
      "mergedAt": null,
      "additions": 169,
      "deletions": 5441
    },
    {
      "id": "PR_kwDOMT5cIs6sa-SR",
      "title": "feat(core): improve character schema validation with comprehensive Zod schemas",
      "author": "wtfsayo",
      "number": 6044,
      "body": "## Summary\n\nThis PR significantly improves the character schema validation system by adding comprehensive Zod schema definitions with detailed descriptions and better type safety.\n\n## Changes Made\n\n### Schema Improvements (packages/core/src/schemas/character.ts)\n- **Added detailed descriptions** to all character schema fields for better documentation and IDE support\n- **Exported schemas** that were previously internal (uuidSchema, contentSchema, messageExampleSchema, etc.) for reusability\n- **Added mediaSchema** for proper attachment validation matching the Media type from primitives\n- **Changed from passthrough() to loose()** for schemas that need flexibility while maintaining validation\n- **Added catchall(z.unknown())** to Content schema to support dynamic properties per the Content interface\n- **Improved field descriptions** including examples and usage guidance (e.g., plugins field mentions required plugins)\n\n### Test Updates (packages/core/src/__tests__/character-validation.test.ts)\n- Updated test fixture attachments to match the new mediaSchema structure\n- Changed from simple `{ type: 'text', data: '...' }` to proper Media objects with `id`, `url`, `title`, `description`\n\n## Benefits\n\n1. **Better Documentation**: All fields now have comprehensive descriptions visible in IDE tooltips\n2. **Type Safety**: More precise validation with proper Media attachment structure\n3. **Reusability**: Exported schemas can be used by other packages and plugins\n4. **Maintainability**: Clear schema definitions make it easier to understand character structure\n5. **Developer Experience**: IDE autocomplete and inline documentation improved significantly\n\n## Testing\n\n- All existing character validation tests pass\n- Test fixtures updated to match new schema requirements\n- No breaking changes to the Character interface\n\n## Related Issues\n\nThis addresses the need for better schema validation and documentation in character configuration files, making it easier for developers to create and validate character JSON files.\n\n<!-- CURSOR_SUMMARY -->\n---\n\n> [!NOTE]\n> Export schemas and add media attachment validation with richer descriptions and more flexible settings, updating tests accordingly.\n> \n> - **Core schemas (`packages/core/src/schemas/character.ts`)**:\n>   - Export internal schemas (`uuidSchema`, `contentSchema`, `messageExampleSchema`, `directoryItemSchema`, `knowledgeItemSchema`, `templateTypeSchema`, `styleSchema`, `settingsSchema`, `secretsSchema`, `mediaSchema`).\n>   - Add `mediaSchema` and validate `content.attachments` as `mediaSchema[]`.\n>   - Switch `contentSchema` from `.passthrough()` to `.catchall(z.unknown())` for dynamic props.\n>   - Expand `settingsSchema` to allow loose objects and arrays; add descriptions across fields; export `uuidSchema` with description.\n>   - Retain `.strict()` on `characterSchema` and add descriptive metadata throughout.\n> - **Tests (`packages/core/src/__tests__/character-validation.test.ts`)**:\n>   - Update attachments in message examples to full media objects (`id`, `url`, `title`, `description`).\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit c1a1f90cedde222c3eadab058376ce2c92ecaaa0. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-10-07T06:08:56Z",
      "mergedAt": "2025-10-07T06:14:26Z",
      "additions": 146,
      "deletions": 60
    },
    {
      "id": "PR_kwDOMT5cIs6sXdG8",
      "title": "support SERVER_PORT",
      "author": "odilitime",
      "number": 6038,
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Add support for SERVER_PORT to configure the HTTP server port (falls back to --port or 3000).\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit 43fe2b28976eb02a145956e3f60df0af5fd85936. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-10-06T20:48:00Z",
      "mergedAt": "2025-10-07T11:23:12Z",
      "additions": 19,
      "deletions": 2
    },
    {
      "id": "PR_kwDOMT5cIs6seGMN",
      "title": "fix: port validate",
      "author": "tcm390",
      "number": 6046,
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Improve port resolution in `start` by validating CLI `--port`, parsing `SERVER_PORT` with `validatePort`, and falling back to `3000` with a warning if invalid.\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit a40f4d5b2d06994a7f029190cfd5eab244f6c691. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-10-07T11:03:12Z",
      "mergedAt": "2025-10-07T11:16:04Z",
      "additions": 18,
      "deletions": 2
    }
  ],
  "codeChanges": {
    "additions": 878,
    "deletions": 256,
    "files": 13,
    "commitCount": 52
  },
  "completedItems": [
    {
      "title": "fix: agent plugins not reloading on PATCH update and service stop race condition",
      "prNumber": 6040,
      "type": "bugfix",
      "body": "# Relates to\r\n\r\nFixes issue where agent plugins/services are not properly updated when using PATCH endpoint to modify agent configuration, and fixes race condition causing service initialization errors during agent restart.\r\n\r\n# Risks\r\n\r\n**",
      "files": [
        "bun.lock",
        "packages/server/src/api/agents/crud.ts",
        "packages/server/src/index.ts",
        "packages/server/src/__tests__/agent-plugin-reload.test.ts",
        "packages/server/src/__tests__/agent-server-constructor.test.ts",
        "packages/server/src/__tests__/agent-server-management.test.ts"
      ]
    },
    {
      "title": "support SERVER_PORT",
      "prNumber": 6038,
      "type": "other",
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Add support for SERVER_PORT to configure the HTTP server port (falls back to --port or 3000).\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit 43fe2b28976eb02a14595",
      "files": [
        "packages/cli/src/commands/start/index.ts"
      ]
    },
    {
      "title": "fix: port validate",
      "prNumber": 6046,
      "type": "bugfix",
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Improve port resolution in `start` by validating CLI `--port`, parsing `SERVER_PORT` with `validatePort`, and falling back to `3000` with a warning if invalid.\n> \n> <sup>Written by [Cursor Bugbot](https:/",
      "files": [
        "packages/cli/src/commands/start/index.ts"
      ]
    },
    {
      "title": "fix: expose state cache and fix bootstrap types",
      "prNumber": 6045,
      "type": "bugfix",
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Expose runtime stateCache and refactor bootstrap multistep/type usage to consume it, with minor prompt and provider access fixes.\n> \n> - **Core**:\n>   - Expose `stateCache: Map<string, State>` on `IAgentR",
      "files": [
        "packages/core/src/prompts.ts",
        "packages/core/src/types/runtime.ts",
        "packages/plugin-bootstrap/src/index.ts"
      ]
    },
    {
      "title": "feat(core): improve character schema validation with comprehensive Zod schemas",
      "prNumber": 6044,
      "type": "feature",
      "body": "## Summary\n\nThis PR significantly improves the character schema validation system by adding comprehensive Zod schema definitions with detailed descriptions and better type safety.\n\n## Changes Made\n\n### Schema Improvements (packages/core/src",
      "files": [
        "packages/core/src/__tests__/character-validation.test.ts",
        "packages/core/src/schemas/character.ts"
      ]
    },
    {
      "title": "fix: handle when bool is passed into parseBooleanFromText",
      "prNumber": 6042,
      "type": "bugfix",
      "body": "Sometimes getSetting returns a bool, and sometimes it doesn't (like when you use `'YES', 'Y', 'T', '1', 'ON', 'ENABLE'`)\r\n\r\n<!-- CURSOR_SUMMARY -->\r\n> [!NOTE]\r\n> `parseBooleanFromText` now returns boolean inputs directly instead of treating",
      "files": [
        "packages/core/src/utils.ts"
      ]
    },
    {
      "title": "fix: fix BOOTSTRAP_KEEP_RESP",
      "prNumber": 6041,
      "type": "bugfix",
      "body": "make sure BOOTSTRAP_KEEP_RESP works even if not ignored\n\n<!-- CURSOR_SUMMARY -->\n---\n\n> [!NOTE]\n> Applies `BOOTSTRAP_KEEP_RESP` to both reply and ignore paths to prevent discarding responses when newer messages arrive.\n> \n> - **Message hand",
      "files": [
        "packages/plugin-bootstrap/src/index.ts"
      ]
    }
  ],
  "topContributors": [
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 84.31449268984147,
      "prScore": 83.87649268984147,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.43799999999999994,
      "summary": null
    },
    {
      "username": "odilitime",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16395496?u=c9bac48e632aae594a0d85aaf9e9c9c69b674d8b&v=4",
      "totalScore": 65.92211194932507,
      "prScore": 60.72211194932507,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "tcm390",
      "avatarUrl": "https://avatars.githubusercontent.com/u/60634884?u=c6c41679b8322eaa0c81f72e0b4ed95e80f0ac16&v=4",
      "totalScore": 56.505057291354944,
      "prScore": 51.505057291354944,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "letmehateu",
      "avatarUrl": "https://avatars.githubusercontent.com/u/133153661?u=2217cec1ebd7bf22a8e4e3ace28b3183720dd444&v=4",
      "totalScore": 10.84871895621705,
      "prScore": 10.648718956217051,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "standujar",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16385918?u=718bdcd1585be8447bdfffb8c11ce249baa7532d&v=4",
      "totalScore": 4.7,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "0xbbjoker",
      "avatarUrl": "https://avatars.githubusercontent.com/u/54844437?u=90fe1762420de6ad493a1c1582f1f70c0d87d8e2&v=4",
      "totalScore": 0.2,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    }
  ],
  "newPRs": 7,
  "mergedPRs": 7,
  "newIssues": 0,
  "closedIssues": 7,
  "activeContributors": 7
}
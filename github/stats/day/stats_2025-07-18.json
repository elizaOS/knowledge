{
  "interval": {
    "intervalStart": "2025-07-18T00:00:00.000Z",
    "intervalEnd": "2025-07-19T00:00:00.000Z",
    "intervalType": "day"
  },
  "repository": "elizaos/eliza",
  "overview": "From 2025-07-18 to 2025-07-19, elizaos/eliza had 7 new PRs (4 merged), 1 new issues, and 13 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDOMT5cIs7AsRye",
      "title": "Build Zapper plugin",
      "author": "borisudovicic",
      "number": 5600,
      "repository": "elizaos/eliza",
      "body": "",
      "createdAt": "2025-07-15T15:58:00Z",
      "closedAt": "2025-07-18T14:01:39Z",
      "state": "CLOSED",
      "commentCount": 1
    },
    {
      "id": "I_kwDOMT5cIs6zu3lP",
      "title": "Error when sending message without `ANTHROPIC_API_KEY`: \"x-api-key header is required\"",
      "author": "UD1sto",
      "number": 4346,
      "repository": "elizaos/eliza",
      "body": "# Error when sending message without `ANTHROPIC_API_KEY`: \"x-api-key header is required\"\n\n## Description\nWhen installing Eliza from source and running `bun start`, attempts to send a message to the agent fail with an `AI_APICallError: x-api-key header is required` error if the `ANTHROPIC_API_KEY` environment variable is not set. This occurs regardless of whether an `OPENAI_API_KEY` is present.\n\n## Steps to Reproduce\n1. Clone the Eliza repository and install dependencies.\n2. Ensure only the `OPENAI_API_KEY` (or no API keys) is set in your environment; do not set `ANTHROPIC_API_KEY`.\n3. From the project root, run:\n   ```bash\n   bun start\n   ```\n4. Attempt to send a message to the ‚ÄúEliza‚Äù agent (e.g., via an HTTP request or CLI).\n5. Observe the error in logs.\n\n## Expected Behavior\n- If `ANTHROPIC_API_KEY` is unset, Eliza should either:\n  - Fall back to OpenAI if `OPENAI_API_KEY` is provided, or\n  - Emit a warning about missing Anthropic functionality without throwing an error when handling messages.\n\n## Actual Behavior\nEliza logs warnings about missing instrumentation and missing `ANTHROPIC_API_KEY`, then errors out on any message send with:\n```text\n(AI_APICallError) x-api-key header is required\nat new _AISDKError (/eliza/node_modules/@ai-sdk/provider/dist/index.mjs:19:5)\n...\n```\n\n## Relevant Logs\n```text\n[2025-04-23 22:20:42] WARN: ANTHROPIC_API_KEY is not set in environment - Anthropic functionality will be limited\n[2025-04-23 22:20:47] WARN: Service instrumentation not found\n    agentName: \"Eliza\"\n    agentId: \"b850bc30-45f8-0041-a00a-83df46d8555d\"\n[2025-04-23 22:20:47] WARN: [getTracer] Service instrumentation not found in runtime.\n[2025-04-23 22:20:48] ERROR: Error during emitEvent for MESSAGE_RECEIVED (handler execution):\n    agentName: \"Eliza\"\n    agentId: \"b850bc30-45f8-0041-a00a-83df46d8555d\"\n    message: \"(AI_APICallError) x-api-key header is required\"\n    stack: [\n      \"AI_APICallError: x-api-key header is required\",\n      \"at new _AISDKError (/eliza/node_modules/@ai-sdk/provider/dist/index.mjs:19:5)\",\n      \"at new APICallError (/eliza/node_modules/@ai-sdk/provider/dist/index.mjs:61:5)\",\n      \"at <anonymous> (/eliza/node_modules/@ai-sdk/provider-utils/dist/index.mjs:667:18)\",\n      \"at processTicksAndRejections (native:7:39)\"\n    ]\n```\n\n## Environment\n- OS: Ubuntu 22.04 LTS\n- Runtime: Bun v0.x\n- Eliza Version: Source checkout as of April 23, 2025\n- Env Vars:\n  - `OPENAI_API_KEY`: set or unset\n  - `ANTHROPIC_API_KEY`: **not** set\n\n## Additional Context\nThis issue blocks users who wish to run Eliza exclusively with OpenAI credentials. A fallback or clearer error message would improve usability.\n\n",
      "createdAt": "2025-04-23T22:48:30Z",
      "closedAt": "2025-07-18T13:58:13Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7A86cd",
      "title": ".eliza directory getting hoisted",
      "author": "linear",
      "number": 5606,
      "repository": "elizaos/eliza",
      "body": "",
      "createdAt": "2025-07-16T20:01:27Z",
      "closedAt": "2025-07-18T18:13:49Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7BLWjU",
      "title": "its working!",
      "author": "linear",
      "number": 5627,
      "repository": "elizaos/eliza",
      "body": "",
      "createdAt": "2025-07-17T21:32:41Z",
      "closedAt": "2025-07-18T13:56:34Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7BLFzM",
      "title": "hello world",
      "author": "linear",
      "number": 5626,
      "repository": "elizaos/eliza",
      "body": "",
      "createdAt": "2025-07-17T21:04:41Z",
      "closedAt": "2025-07-18T13:56:41Z",
      "state": "CLOSED",
      "commentCount": 0
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDOMT5cIs6fjsbK",
      "title": "chore: v1.2.12",
      "author": "wtfsayo",
      "number": 5630,
      "body": "",
      "repository": "elizaos/eliza",
      "createdAt": "2025-07-18T11:13:53Z",
      "mergedAt": "2025-07-18T11:23:21Z",
      "additions": 3830,
      "deletions": 985
    },
    {
      "id": "PR_kwDOMT5cIs6fhJiz",
      "title": "feat: enhance ModuleLoader with local-first guarantees for consistent module resolution",
      "author": "wtfsayo",
      "number": 5629,
      "body": "## üîß Enhanced Module Resolution for Consistent Local-First Loading\n\nThis PR addresses critical module resolution issues by enhancing the existing ModuleLoader system to provide the same local-first guarantees as server-manager.ts, ensuring consistent module loading across all CLI operations.\n\n### üéØ Problem Statement\n\nThe CLI was experiencing inconsistent module resolution between different components:\n- **server-start.ts** was using ModuleLoader but without explicit local-first guarantees\n- **server-manager.ts** had proper local-first environment setup for spawned processes\n- **Inconsistent behavior** between development and production environments\n- **Potential singleton pattern issues** due to mixed global/local module loading\n\n### üöÄ Key Changes\n\n#### 1. **Enhanced ModuleLoader System** (`packages/cli/src/utils/module-loader.ts`)\n- **NEW: Environment Setup**: Added `setupEnvironment()` method that mirrors server-manager.ts logic\n- **NEW: Explicit Local Detection**: Checks if local module exists before resolution\n- **NEW: Enhanced Logging**: Clear feedback about which installation is being used\n- **IMPROVED: Validation**: Warns if expected local module resolves to global\n\n#### 2. **Consistent Architecture**\n- **ModuleLoader** ‚Üí For in-process module loading with local-first guarantees\n- **server-manager.ts** ‚Üí For spawned process environment setup with local-first guarantees\n- **Both systems** ‚Üí Use same approach: check local existence, prioritize local, set environment variables\n\n#### 3. **Environment Variable Management**\nEnhanced ModuleLoader now sets up environment like server-manager.ts:\n- `NODE_PATH = \"{project}/node_modules:{existing_NODE_PATH}\"`\n- `PATH = \"{project}/node_modules/.bin:{existing_PATH}\"`\n\n### üß™ Testing and Validation\n\n- ‚úÖ **Build System**: All builds pass with enhanced ModuleLoader\n- ‚úÖ **Local Module Detection**: Correctly identifies and uses local @elizaos packages\n- ‚úÖ **Environment Setup**: Properly configures NODE_PATH and PATH variables\n- ‚úÖ **Logging**: Clear feedback about local vs global module usage\n- ‚úÖ **Backward Compatibility**: All existing APIs maintained\n\n### üìà Impact and Benefits\n\n#### **Development Experience**\n- **Consistent Behavior**: Same module resolution logic across all CLI operations\n- **Local-First Approach**: Always prioritizes project's exact dependency versions\n- **Clear Feedback**: Explicit logging about which installation is being used\n- **Better Debugging**: Enhanced error messages with installation guidance\n\n#### **Architecture Improvements**\n- **Unified Strategy**: Both in-process and spawned processes use same local-first approach\n- **Singleton Safety**: Prevents multiple instances of core modules\n- **Environment Consistency**: Standardized module resolution across all operations\n- **Maintainability**: Centralized local-first logic in ModuleLoader\n\n### üîç Implementation Details\n\n#### **Enhanced Module Loading Strategy**\nModuleLoader now includes explicit local-first checks:\n```typescript\nconst localModulePath = path.join(this.projectPath, 'node_modules', moduleName);\nconst isLocalModule = existsSync(localModulePath);\n\nif (isLocalModule) {\n  logger.info(`Using local ${moduleName} installation`);\n} else {\n  logger.info(`Using global ${moduleName} installation`);\n}\n```\n\n#### **Environment Enhancement (NEW)**\nAdded setupEnvironment() method:\n```typescript\nprivate setupEnvironment(): void {\n  // Add local node_modules to NODE_PATH\n  const localModulesPath = path.join(this.projectPath, 'node_modules');\n  if (existsSync(localModulesPath)) {\n    process.env.NODE_PATH = `${localModulesPath}${path.delimiter}${process.env.NODE_PATH || ''}`;\n  }\n\n  // Add local .bin to PATH\n  const localBinPath = path.join(this.projectPath, 'node_modules', '.bin');\n  if (existsSync(localBinPath)) {\n    process.env.PATH = `${localBinPath}${path.delimiter}${process.env.PATH || ''}`;\n  }\n}\n```\n\n### üõ† Technical Notes\n\n- **Enhanced, Not Replaced**: ModuleLoader was enhanced rather than replaced\n- **Consistent Approach**: Both ModuleLoader and server-manager.ts use same local-first logic\n- **Environment Variables**: Proper PATH and NODE_PATH setup for consistent resolution\n- **Explicit Validation**: Checks that local modules are actually being used when expected\n- **Comprehensive Logging**: Clear feedback about module resolution decisions\n\n### üì¶ Files Changed\n\n- `packages/cli/src/utils/module-loader.ts` - Enhanced with local-first guarantees\n- `packages/cli/src/commands/start/actions/server-start.ts` - Uses enhanced ModuleLoader\n\nThis enhancement ensures that **all** @elizaos modules are resolved locally first, whether they're being loaded in the current process (ModuleLoader) or in spawned processes (server-manager.ts), providing a consistent and reliable development experience.",
      "repository": "elizaos/eliza",
      "createdAt": "2025-07-18T06:54:12Z",
      "mergedAt": "2025-07-18T11:13:02Z",
      "additions": 2584,
      "deletions": 233
    },
    {
      "id": "PR_kwDOMT5cIs6ffqSu",
      "title": "fix: JSON strings in sql base",
      "author": "ChristopherTrimboli",
      "number": 5628,
      "body": "### PR Review ‚Äì JSON B insert failure fix in `plugin-sql`\r\n\r\nGreat catch!  \r\nThe change that stringifies `content` and `metadata` before passing them to\r\n\r\n```ts\r\nsql`${...}::jsonb`\r\n```\r\n\r\nsolves the root issue where raw objects were implicitly coerced to the string `\"[object Object]\"`.  \r\nThat coercion broke the `::jsonb` cast, triggered `Failed query` errors, and blocked service startup (most visibly with `plugin-twitter`).\r\n\r\n#### What this patch does\r\n1. **`createMemory`**\r\n   * Detects string vs. object and always stores a *JSON string*:\r\n     ```ts\r\n     const contentToInsert  = typeof memory.content  === 'string'\r\n                              ? memory.content\r\n                              : JSON.stringify(memory.content ?? {});\r\n     const metadataToInsert = typeof memory.metadata === 'string'\r\n                              ? memory.metadata\r\n                              : JSON.stringify(memory.metadata ?? {});\r\n     ```\r\n   * Uses those variables in the `INSERT`.\r\n\r\n2. **`updateMemory`**\r\n   * Mirrors the same logic when updating existing rows.\r\n\r\n3. **Safety**\r\n   * No DB-schema changes; only the way values are bound.\r\n   * Back-compatible with records already stored as proper JSON.\r\n\r\n#### Why this matters\r\n* Prevents runtime-blocking SQL exceptions on any plugin that passes nested objects (Twitter, Discord, etc.).\r\n* Makes the adapter resilient to future changes where callers send rich objects.\r\n* Keeps the `::jsonb` cast (fast path for PG) without forcing every upstream plugin to remember to stringify.\r\n\r\n#### Suggested follow-ups\r\n* Add a small unit test for `createMemory`/`updateMemory` verifying that both object and string inputs land in Postgres as valid JSON.\r\n* Consider centralising this stringify helper to avoid duplication if more fields become JSONB later.\r\n\r\nLooks good ‚Äì with this in, service registration succeeds and no more `[object Object]` inserts. üéâ",
      "repository": "elizaos/eliza",
      "createdAt": "2025-07-18T03:22:36Z",
      "mergedAt": null,
      "additions": 81,
      "deletions": 7
    },
    {
      "id": "PR_kwDOMT5cIs6fpH2S",
      "title": "issue 5604 - making api keys optional for npx elizaos create",
      "author": "ai16z-demirix",
      "number": 5634,
      "body": "<!-- Use this template by filling in information and copying and pasting relevant items out of the HTML comments. -->\r\n\r\n# Relates to\r\n\r\n<!-- LINK TO ISSUE OR TICKET -->\r\nhttps://github.com/elizaOS/eliza/issues/5604\r\n<!-- This risks section must be filled out before the final review and merge. -->\r\n\r\n# Risks\r\n\r\n<!--\r\nLow, medium, large. List what kind of risks and what could be affected.\r\n-->\r\nmedium/large: adding flag to npx elizaos create\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nAdded new --skip-api-keys flag to the create command\r\nUpdated type definitions with skipApiKeys: boolean option\r\nModified project creation logic to bypass API key setup when flag is present\r\nUpdated both regular and TEE project creation flows to respect this setting\r\nPass the flag through the entire setup chain to prevent API key prompts\r\n\r\n## What kind of change is this?\r\n\r\n<!--\r\nBug fixes (non-breaking change which fixes an issue)\r\nImprovements (misc. changes to existing features)\r\nFeatures (non-breaking change which adds functionality)\r\nUpdates (new versions of included code)\r\n-->\r\n\r\n<!-- This \"Why\" section is most relevant if there are no linked issues explaining why. If there is a related issue, it might make sense to skip this why section. -->\r\n<!--\r\n## Why are we doing this? Any context or related work?\r\n-->\r\n\r\n# Documentation changes needed?\r\n\r\n<!--\r\nMy changes do not require a change to the project documentation.\r\nMy changes require a change to the project documentation.\r\nIf documentation change is needed: I have updated the documentation accordingly.\r\n-->\r\n\r\n<!-- Please show how you tested the PR. This will really help if the PR needs to be retested and probably help the PR get merged quicker. -->\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\n## Detailed testing steps\r\n\r\n<!--\r\nNone: Automated tests are acceptable.\r\n-->\r\n\r\n<!--\r\n- As [anon/admin], go to [link]\r\n¬† - [do action]\r\n¬† - verify [result]\r\n-->\r\n\r\n<!-- If there is a UI change, please include before and after screenshots or videos. This will speed up PRs being merged. It is extra nice to annotate screenshots with arrows or boxes pointing out the differences. -->\r\n<!--\r\n## Screenshots\r\n### Before\r\n### After\r\n-->\r\n\r\n<!-- If there is anything about the deployment, please make a note. -->\r\n<!--\r\n# Deploy Notes\r\n-->\r\n\r\n<!-- ¬†Copy and paste command line output. -->\r\n<!--\r\n## Database changes\r\n-->\r\n\r\n<!-- ¬†Please specify deploy instructions if there is something more than the automated steps. -->\r\n<!--\r\n## Deployment instructions\r\n-->\r\n\r\n<!-- If you are on Discord, please join https://discord.gg/ai16z and state your Discord username here for the contributor role and join us in #development-feed -->\r\n<!--\r\n## Discord username\r\n\r\n-->\r\n",
      "repository": "elizaos/eliza",
      "createdAt": "2025-07-18T22:13:50Z",
      "mergedAt": null,
      "additions": 55,
      "deletions": 11
    },
    {
      "id": "PR_kwDOMT5cIs6fbaVB",
      "title": "feat: add tiny, dim CLI warning when running from monorepo",
      "author": "yungalgo",
      "number": 5622,
      "body": "**PR Description:**\r\nAdds a light warning message when running elizaos CLI commands from within the monorepo directory. The CLI is intended for use in standalone project directories, and this helps guide users to the correct usage pattern. But if you are a dev using it for some intended reason its tiny and dim so it's not annoying.\r\n\r\n- Shows: `Note: CLI is intended for use outside the monorepo`\r\n- Only displays for actual commands (not --version, --help, etc.)\r\n- Non-blocking - users can still proceed\r\n- Uses dim text to keep it subtle\r\n\r\nDon't need this if other core devs dont want it, but trying to get ahead of issues. If we dont want to include it docs/videos should algo be fine.",
      "repository": "elizaos/eliza",
      "createdAt": "2025-07-17T18:16:36Z",
      "mergedAt": null,
      "additions": 17,
      "deletions": 0
    }
  ],
  "codeChanges": {
    "additions": 6421,
    "deletions": 1219,
    "files": 50,
    "commitCount": 66
  },
  "completedItems": [
    {
      "title": "fix: (cli) prevent .elizadb inheritance in nested project creation",
      "prNumber": 5618,
      "type": "bugfix",
      "body": "## PR Description\r\n\r\n### Summary\r\nFixes a bug where creating a new ElizaOS project from within an existing project directory causes the child project to incorrectly inherit the parent's `PGLITE_DATA_DIR` environment variable, resulting in b",
      "files": [
        "packages/cli/src/commands/create/actions/creators.ts"
      ]
    },
    {
      "title": "fix typo in plugin.ts",
      "prNumber": 5632,
      "type": "bugfix",
      "body": "Hi Devs, fixed typo in packages/plugin-quick-starter/src/plugin.ts\r\ndependecies - dependencies ",
      "files": [
        "packages/plugin-quick-starter/src/plugin.ts"
      ]
    },
    {
      "title": "chore: v1.2.12",
      "prNumber": 5630,
      "type": "other",
      "body": "",
      "files": [
        "CLAUDE.md",
        "KNAP_WORKFLOW_FIX_SUMMARY.md",
        "bun.lock",
        "docs/code-quality-analysis.md",
        "lerna.json",
        "package.json",
        "packages/api-client/package.json",
        "packages/app/package.json",
        "packages/autodoc/package.json",
        "packages/cli/package.json",
        "packages/cli/src/commands/create/actions/creators.ts",
        "packages/cli/src/commands/dev/types.ts",
        "packages/cli/src/commands/dev/utils/server-manager.ts",
        "packages/cli/src/commands/start/actions/server-start.ts",
        "packages/cli/src/commands/start/index.ts",
        "packages/cli/src/commands/start/utils/__tests__/loader.test.ts",
        "packages/cli/src/commands/start/utils/loader.ts",
        "packages/cli/src/commands/test/actions/e2e-tests.ts",
        "packages/cli/src/index.ts",
        "packages/cli/src/utils/index.ts",
        "packages/cli/src/utils/local-cli-delegation.ts",
        "packages/cli/src/utils/module-loader.test.ts",
        "packages/cli/src/utils/module-loader.ts",
        "packages/cli/src/utils/upgrade/simple-migration-agent.ts",
        "packages/cli/tests/commands/start.test.ts",
        "packages/cli/tests/commands/test-utils.ts",
        "packages/cli/tests/unit/utils/loader-integration.test.ts",
        "packages/cli/tests/unit/utils/loader-sync-async.test.ts",
        "packages/cli/tests/unit/utils/local-cli-delegation.test.ts",
        "packages/cli/tests/unit/utils/server-manager.test.ts",
        "packages/cli/tests/unit/utils/simple-migration-agent-eventemitter-compatibility.test.ts",
        "packages/cli/tsup.config.ts",
        "packages/client/package.json",
        "packages/config/package.json",
        "packages/core/package.json",
        "packages/create-eliza/package.json",
        "packages/docs/package.json",
        "packages/plugin-bootstrap/package.json",
        "packages/plugin-dummy-services/package.json",
        "packages/plugin-quick-starter/package.json",
        "packages/plugin-sql/package.json",
        "packages/plugin-starter/package.json",
        "packages/project-starter/package.json",
        "packages/project-tee-starter/package.json",
        "packages/server/package.json",
        "packages/server/src/__tests__/EventEmitter-Compatibility-README.md",
        "packages/server/src/__tests__/bus-eventemitter-compatibility.test.ts",
        "packages/server/src/bus.ts",
        "packages/test-utils/package.json"
      ]
    },
    {
      "title": "feat: enhance ModuleLoader with local-first guarantees for consistent module resolution",
      "prNumber": 5629,
      "type": "feature",
      "body": "## üîß Enhanced Module Resolution for Consistent Local-First Loading\n\nThis PR addresses critical module resolution issues by enhancing the existing ModuleLoader system to provide the same local-first guarantees as server-manager.ts, ensuring",
      "files": [
        "bun.lock",
        "lerna.json",
        "packages/api-client/package.json",
        "packages/cli/package.json",
        "packages/cli/src/commands/dev/types.ts",
        "packages/cli/src/commands/dev/utils/server-manager.ts",
        "packages/cli/src/commands/start/actions/server-start.ts",
        "packages/cli/src/commands/start/index.ts",
        "packages/cli/src/commands/start/utils/__tests__/loader.test.ts",
        "packages/cli/src/commands/start/utils/loader.ts",
        "packages/cli/src/commands/test/actions/e2e-tests.ts",
        "packages/cli/src/index.ts",
        "packages/cli/src/utils/index.ts",
        "packages/cli/src/utils/local-cli-delegation.ts",
        "packages/cli/src/utils/module-loader.test.ts",
        "packages/cli/src/utils/module-loader.ts",
        "packages/cli/tests/commands/start.test.ts",
        "packages/cli/tests/commands/test-utils.ts",
        "packages/cli/tests/unit/utils/loader-integration.test.ts",
        "packages/cli/tests/unit/utils/loader-sync-async.test.ts",
        "packages/cli/tests/unit/utils/local-cli-delegation.test.ts",
        "packages/cli/tests/unit/utils/server-manager.test.ts",
        "packages/cli/tsup.config.ts",
        "packages/config/package.json",
        "packages/core/package.json",
        "packages/plugin-bootstrap/package.json",
        "packages/plugin-dummy-services/package.json",
        "packages/plugin-sql/package.json",
        "packages/server/package.json",
        "packages/test-utils/package.json"
      ]
    }
  ],
  "topContributors": [
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 109.5255477931522,
      "prScore": 109.0875477931522,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.43799999999999994,
      "summary": "wtfsayo: Focused on enhancing core system capabilities, notably merging a significant feature in elizaos/eliza#5629 that improved ModuleLoader with local-first guarantees, alongside a maintenance release in elizaos/eliza#5630. Their work primarily involved other work, refactoring, and bug fixes, touching configuration, tests, and code files."
    },
    {
      "username": "META-DREAMER",
      "avatarUrl": "https://avatars.githubusercontent.com/u/7143583?u=96f63f10e066a06d5ad592c8efc659e2b84a68fc&v=4",
      "totalScore": 49.5437738965761,
      "prScore": 49.5437738965761,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": "META-DREAMER: Drove a significant cleanup effort, primarily by merging PR elizaos/elizaos.github.io#145, which removed over 250k lines of legacy scripts and data. This work, involving modifications across 150 files with a focus on configuration and code, primarily contributed to other work and refactoring efforts."
    },
    {
      "username": "ai16z-demirix",
      "avatarUrl": "https://avatars.githubusercontent.com/u/188117230?u=424cd5b834584b3799da288712b3c4158c8032a1&v=4",
      "totalScore": 33.70626497339596,
      "prScore": 33.70626497339596,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": "ai16z-demirix: Focused on significant development work, opening two substantial PRs: elizaos/eliza#5634, which makes API keys optional for `npx elizaos create`, and elizaos/eliza#5633, which targets the project directory for `.elizadb`. This work involved modifying 328 files with a net addition of over 16,000 lines of code, primarily focused on new features and bug fixes."
    },
    {
      "username": "reallesee",
      "avatarUrl": "https://avatars.githubusercontent.com/u/155267459?u=048a8021b60ccdd599d1389ec6bd3a07578a8cbf&v=4",
      "totalScore": 20.834306144334054,
      "prScore": 20.834306144334054,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": "reallesee: Focused on minor code improvements, merging a small PR in elizaos/eliza (#5632) to fix a typo."
    },
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 14.22763636973214,
      "prScore": 14.22763636973214,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": "ChristopherTrimboli: Focused on a bugfix, opening PR elizaos/eliza#5628 to address JSON string handling in the SQL base, with changes across 8 files including both code and tests."
    },
    {
      "username": "lalalune",
      "avatarUrl": "https://avatars.githubusercontent.com/u/18633264?u=e2e906c3712c2506ebfa98df01c2cfdc50050b30&v=4",
      "totalScore": 5.485147180559945,
      "prScore": 5.485147180559945,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "linear",
      "avatarUrl": "https://avatars.githubusercontent.com/in/20150?v=4",
      "totalScore": 4,
      "prScore": 0,
      "issueScore": 4,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": "linear: Focused on identifying and documenting potential issues and testing new functionalities, creating 5 issues including elizaos/eliza#5606, elizaos/eliza#5627, elizaos/eliza#5626, elizaos/eliza#5625, and elizaos/eliza#5631, all of which were subsequently closed."
    }
  ],
  "newPRs": 7,
  "mergedPRs": 4,
  "newIssues": 1,
  "closedIssues": 7,
  "activeContributors": 13
}
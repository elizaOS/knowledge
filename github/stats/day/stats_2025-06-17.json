{
  "interval": {
    "intervalStart": "2025-06-17T00:00:00.000Z",
    "intervalEnd": "2025-06-18T00:00:00.000Z",
    "intervalType": "day"
  },
  "repository": "elizaos/eliza",
  "overview": "From 2025-06-17 to 2025-06-18, elizaos/eliza had 11 new PRs (7 merged), 3 new issues, and 13 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDOMT5cIs66bOWK",
      "title": "Knowledge management (RAG) not working (implemented) in 1.0.6",
      "author": "harperaa",
      "number": 5004,
      "repository": "elizaos/eliza",
      "body": "**Describe the bug**\n\nI am trying to get rag working and following docs, but that code is not implemented in 1.0.6.  It appears to be commented as a placeholder in \n \n**To Reproduce**\n\nsettings: {\n    secrets: {},\n    ragKnowledge: true,\n  },\n  knowledge: [\n    {\n      directory: 'knowledge/foobar',\n      shared: true,\n    },\n  ],\n\n**Expected behavior**\n\nI expect that it would parse on startup and it was not doing that, as it used to do.  So, I looked into code and found this... summary from claude....\n\nMissing Implementation Locations\n\n  1. AgentRuntime Initialization Missing Knowledge \n  Processing\n\n  File: /packages/core/src/runtime.ts (lines 494-651)\n  - The AgentRuntime.initialize() method should process\n  character.knowledge but doesn't\n  - No call to any knowledge processing function during\n  agent startup\n\n  2. TODO Comment Confirms Missing Implementation\n\n  File: /packages/core/src/specs/v1/index.ts (line 50)\n  // TODO: Implement the remaining adapters: ... - \n  knowledge / memory\n  This is a developer comment explicitly stating that\n  knowledge processing is not implemented yet.\n\n  3. Bootstrap Plugin Missing KNOWLEDGE Provider\n\n  File: /packages/plugin-bootstrap/src/providers/index.ts\n  - Multiple message examples reference providers: \n  ['KNOWLEDGE'] in character files\n  - But the bootstrap plugin doesn't export any KNOWLEDGE \n  provider\n  - Provider list is incomplete - missing the knowledge\n  provider entirely\n\n  4. RagService Interface Exists But No Implementation\n\n  File: /packages/core/src/runtime.ts (lines 52-61)\n  interface RagServiceDelegator extends Service {\n    getKnowledge(message: Memory, scope?: { roomId?: UUID;\n   worldId?: UUID; entityId?: UUID }):\n  Promise<KnowledgeItem[]>;\n    _internalAddKnowledge(item: KnowledgeItem, options?:\n  any, scope?: any): Promise<void>;\n  }\n  The interface exists but no actual implementation of\n  this service.\n\n  5. Missing Functions\n\n  - processCharacterKnowledge() - Referenced in docs but\n  doesn't exist anywhere\n  - No knowledge file reading/processing logic\n  - No connection between character.knowledge array and\n  embedding system\n\n  Developer Comments Confirming This\n\n  The codebase has explicit TODO comments indicating that\n  knowledge/memory functionality is intentionally \n  unfinished. The character examples even reference\n   a KNOWLEDGE provider that doesn't exist, suggesting\n  this was planned but never implemented.\n\n",
      "createdAt": "2025-06-08T00:06:14Z",
      "closedAt": "2025-06-17T18:10:11Z",
      "state": "CLOSED",
      "commentCount": 4
    },
    {
      "id": "I_kwDOMT5cIs68Alkb",
      "title": "elizaos start crashes after accessing localhost:3000 on windows",
      "author": "paulmerz",
      "number": 5161,
      "repository": "elizaos/eliza",
      "body": "**Describe the bug**\n\nAs a newby (red flag hahah) I am just trying to get the agent up and running but cannot access the UI after the server built and I get the \"Startup successful! Go to the dashboard at http://localhost:3000\"\n\nHere's the error I get in the terminal : \n\n[logs.txt](https://github.com/user-attachments/files/20780709/logs.txt)\n\nEspecially : agentName: \"Eliza\"\n    logLevel: \"debug\"\n[2025-06-17 17:28:26] DEBUG: Handling plugin request in the plugin route handler\n    path: \"/@vite/client\"\n    method: \"GET\"\n    query: {}\n[2025-06-17 17:28:26] DEBUG: No valid agentId in query. Trying global match for path: /@vite/client\n[2025-06-17 17:28:26] DEBUG: No plugin route handled GET /@vite/client, passing to next middleware.\nNotFoundError: Not Found\n\n**To Reproduce**\n\nFresh install on WSL 2 on windows 11 using bun and the elizaos cli\n- node 22.16.0\n- bun 1.2.16\n- elizaos 1.0.9\n\nFollow the quickstart https://github.com/elizaOS/eliza\n\nPut your openai key in the .ENV (or make sure it's there)\n\nRun `LOG_LEVEL=debug elizaos start`\n\nIf that helps, I see no \"public\" or \"static\" folder which I usually find in a project that has a frontend\n\n**Expected behavior**\n\nI would expect to access the UI to chat with the agent\n\n**Screenshots**\n\n![Image](https://github.com/user-attachments/assets/594d27e8-9edc-4550-a9bc-1ccbbe8c44f6)\n\nI get a white page with the following errors in the console : \n\n:3000/@vite/client:1 \nFailed to load resource: the server responded with a status of 404 (Not Found)Understand this error\n:3000/src/main.tsx:1 \n                    \nFailed to load resource: the server responded with a status of 404 (Not Found)Understand this error\n:3000/@react-refresh:1             \n            \nFailed to load resource: the server responded with a status of 404 (Not Found)\n",
      "createdAt": "2025-06-17T17:41:09Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs67_woD",
      "title": "feat: Add Ollama as AI provider option in create command",
      "author": "wtfsayo",
      "number": 5159,
      "repository": "elizaos/eliza",
      "body": "**Is your feature request related to a problem? Please describe.**\n\nCurrently, the `elizaos create` command only offers three AI provider options during project setup: Local AI, OpenAI, and Anthropic. However, the Ollama plugin (`@elizaos/plugin-ollama`) already exists in the registry and Ollama environment variables are included in the template, but users cannot select Ollama as an AI provider during the interactive create flow. This forces users to manually configure Ollama after project creation, which is inconsistent with the streamlined setup experience provided for other providers.\n\n**Describe the solution you'd like**\n\nAdd Ollama as a fourth AI provider option in the `elizaos create` command, alongside the existing Local AI, OpenAI, and Anthropic options. When users select Ollama, the system should:\n\n1. Guide users through Ollama-specific configuration (API endpoint, model selection)\n2. Set up the appropriate environment variables in the `.env` file\n3. Provide helpful setup guidance similar to other providers\n\n**Technical Implementation Details**\n\nThe following changes are needed in the CLI package (`packages/cli/src/commands/create/`):\n\n1. **Update AI Model Selection** (`utils/selection.ts`):\n   - Add Ollama option to `getAvailableAIModels()` function:\n   ```typescript\n   {\n     title: 'Ollama (self-hosted, free to use)',\n     value: 'ollama',\n     description: 'Use self-hosted Ollama models for complete privacy and control'\n   }\n   ```\n\n2. **Add Setup Logic** (`actions/setup.ts`):\n   - Add case for `'ollama'` in `setupAIModelConfig()` function\n   - Create `promptAndStoreOllamaConfig()` function to handle:\n     - OLLAMA_API_ENDPOINT (default: http://localhost:11434)\n     - OLLAMA_MODEL selection\n     - Optional embedding model configuration\n\n3. **Environment Variables** (already exist in `utils/get-config.ts`):\n   - `OLLAMA_API_ENDPOINT`\n   - `OLLAMA_MODEL`\n   - `USE_OLLAMA_TEXT_MODELS`\n   - `USE_OLLAMA_EMBEDDING`\n   - `OLLAMA_EMBEDDING_MODEL`\n   - `OLLAMA_SMALL_MODEL`\n   - `OLLAMA_MEDIUM_MODEL`\n   - `OLLAMA_LARGE_MODEL`\n\n**Acceptance Criteria**\n\n- [ ] Ollama appears as the fourth option in the AI provider selection menu\n- [ ] Selecting Ollama prompts for necessary configuration (API endpoint, models)\n- [ ] Environment variables are properly written to `.env` file\n- [ ] Setup provides helpful guidance about Ollama installation/setup\n- [ ] Follows the same interaction patterns as existing providers\n- [ ] Works in both interactive and non-interactive modes\n- [ ] Includes appropriate validation for Ollama endpoints\n- [ ] Tests are added/updated to cover the new functionality\n\n**Describe alternatives you've considered**\n\n1. **Manual Configuration**: Current approach requires users to manually add Ollama configuration after project creation, which is inconsistent with other providers\n2. **Documentation Only**: Simply documenting how to configure Ollama manually, but this doesn't match the user experience expectations set by other providers\n3. **Plugin-based Setup**: Handling Ollama setup through a separate plugin command, but this breaks the unified create experience\n\n**Additional context**\n\n- **Ollama Plugin Repository**: https://github.com/elizaos-plugins/plugin-ollama\n- **NPM Package**: https://www.npmjs.com/package/@elizaos/plugin-ollama\n- **Plugin Registry**: https://github.com/elizaos-plugins/registry\n- **Ollama Plugin Entry**: Already exists in `DEFAULT_REGISTRY` at line 209 in `/packages/cli/src/utils/registry/index.ts`\n\nThis enhancement would complete the AI provider ecosystem by making all officially supported providers accessible through the consistent create command interface, improving user experience and reducing setup friction for Ollama users.",
      "createdAt": "2025-06-17T16:13:06Z",
      "closedAt": "2025-06-18T17:41:53Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs678523",
      "title": "import projects on windows dev machine not working",
      "author": "piffie",
      "number": 5155,
      "repository": "elizaos/eliza",
      "body": "**Describe the bug**\n\nLoading projects on Windows machines not working due to import() not using file:// prefix.\n\n**To Reproduce**\n\nuse starter template to create new project on windows.\nlaunch in dev mode\nsee error in the console:\n```\nmessage: \"(Error) Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\"\n    stack: [\n      \"Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\",\n(Error) Could not find project entry point\nit seems that on windows, you need to reference import() statements via file:// \n```\n\n**Expected behavior**\n\nproject should be loaded normally\n\n\n**fix **\n\n```\nreplace this:\nconst importPath = path.resolve(entryPoint);\nprojectModule = (await import(importPath)) as ProjectModule;\n```\n\nwith:\n```\nconst importPath = path.resolve(entryPoint);\n// Convert to file URL for ESM import\nconst importUrl = process.platform === 'win32'\n  ? 'file:///' + importPath.replace(/\\\\/g, '/')\n  : 'file://' + importPath;\nprojectModule = (await import(importUrl)) as ProjectModule;\n```\n",
      "createdAt": "2025-06-17T12:21:50Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 0
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDOMT5cIs6a-K0o",
      "title": "chore: update faq, quickstart, core docs",
      "author": "0xbbjoker",
      "number": 5164,
      "body": "## Summary\n\nUpdates core documentation files including FAQ, quickstart guide, and core documentation to improve clarity and accuracy.\n\n## Changes\n- Updated FAQ documentation with latest information  \n- Refreshed quickstart guide with current setup instructions\n- Enhanced core documentation for better developer experience\n\n## Impact\n- Improved onboarding experience for new users\n- More accurate and up-to-date documentation\n- Better alignment with current codebase and features\n\n**Files changed:** +2,503 additions, -974 deletions across documentation files",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-17T21:39:00Z",
      "mergedAt": "2025-06-18T17:19:11Z",
      "additions": 2503,
      "deletions": 974
    },
    {
      "id": "PR_kwDOMT5cIs6a59go",
      "title": "fix: tests",
      "author": "ChristopherTrimboli",
      "number": 5157,
      "body": "",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-17T13:43:35Z",
      "mergedAt": null,
      "additions": 1194,
      "deletions": 621
    },
    {
      "id": "PR_kwDOMT5cIs6aLWIS",
      "title": "refactor: centralize directory type detection with boolean flags (clean)",
      "author": "yungalgo",
      "number": 5079,
      "body": "## Problem\r\nThe codebase had inconsistent directory type checking across multiple files, using string comparisons like `directoryType.type === 'elizaos-plugin'` and `directoryType.type === 'elizaos-monorepo'`. This led to:\r\n- Duplicate type checking logic\r\n- Potential for typos in type strings\r\n- Harder to maintain when adding new directory types\r\n- Inconsistent behavior across different commands\r\n\r\n## Solution\r\n- Added boolean flags to directory type detection (`isPlugin`, `isMonorepo`, etc.)\r\n- Centralized type checking logic in `directory-detection.ts`\r\n- Updated all commands to use the new boolean flags\r\n- Added comprehensive tests for directory type detection\r\n\r\n## Testing\r\n- Added unit tests for directory type detection\r\n- Verified behavior in monorepo, plugin, and project contexts\r\n- Tested all affected commands (start, dev, test, publish, update)\r\n- Ensured backward compatibility with existing plugins\r\n\r\n## Impact\r\n- More maintainable codebase\r\n- Reduced chance of errors from string comparisons\r\n- Easier to add new directory types in the future\r\n- Consistent behavior across all commands\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **New Features**\n  - Enhanced directory detection for ElizaOS projects and plugins, offering more accurate identification and detailed status flags.\n- **Bug Fixes**\n  - Improved handling of edge cases in directory detection, including corrupted or missing configuration files.\n- **Refactor**\n  - Streamlined logic across commands to use unified boolean flags for project, plugin, monorepo, and subdirectory identification.\n  - Centralized and simplified validation and logging related to directory types.\n- **Tests**\n  - Added comprehensive tests to verify directory detection accuracy and robustness.\n- **Chores**\n  - Removed deprecated or redundant type definitions related to directory information.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-12T09:28:15Z",
      "mergedAt": null,
      "additions": 1067,
      "deletions": 497
    },
    {
      "id": "PR_kwDOMT5cIs6a7BYG",
      "title": "docs: add CLAUDE.md for AI assistant guidance",
      "author": "wtfsayo",
      "number": 5158,
      "body": "## Summary\n- Add comprehensive CLAUDE.md file to guide AI assistants working in this repository\n- Documents project architecture, development workflow, and critical rules\n- Covers monorepo structure, component system, and testing requirements\n\n## Key sections included:\n- Bun-only development requirements\n- Agent-centric architecture patterns  \n- Package dependencies and structure\n- Testing and build workflows\n- Environment setup and configuration\n\nThis file will help AI assistants understand the codebase structure and follow proper development practices when contributing to ElizaOS.",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-17T15:15:51Z",
      "mergedAt": "2025-06-17T18:18:15Z",
      "additions": 356,
      "deletions": 0
    },
    {
      "id": "PR_kwDOMT5cIs6a80iF",
      "title": "fix: Windows compatibility for plugin imports and asset serving",
      "author": "wtfsayo",
      "number": 5163,
      "body": "## Summary\n\nFixes Windows compatibility issues reported in issue #5161 where `elizaos start` crashes on Windows when accessing localhost:3000, showing 404 errors for frontend assets.\n\n## Changes Made\n\n### 1. Plugin Import Fixes (`packages/cli/src/utils/load-plugin.ts`)\n- Added `pathToFileURL` import from `node:url`\n- Enhanced `tryImporting` function to convert absolute paths to file URLs for cross-platform compatibility\n- Maintains backward compatibility with relative paths and package imports\n\n### 2. Server Asset Serving Enhancements (`packages/server/src/index.ts`)\n- Enhanced `resolveClientPath()` function with robust fallback mechanisms\n- Added detailed logging for debugging client path resolution issues\n- Improved error handling and path normalization for Windows environments\n- Added verification to detect development vs production index.html files\n\n### 3. Comprehensive Testing (`packages/cli/tests/unit/utils/windows-compatibility.test.ts`)\n- Added comprehensive Windows compatibility test suite covering:\n  - File URL conversion scenarios\n  - Path normalization behavior across platforms\n  - Cross-platform import strategies\n  - Package import handling\n  - Platform-specific path handling logic\n\n## Problem Solved\n\nThis PR addresses the core issues from #5161:\n- **404 errors for Vite assets**: Fixed by proper client path resolution and serving production builds\n- **Windows import() failures**: Fixed by converting absolute paths to file URLs using `pathToFileURL`\n- **Cross-platform compatibility**: Enhanced with proper path handling and normalization\n\n## Testing\n\n- ✅ All Windows compatibility tests pass on macOS (cross-platform compatible)\n- ✅ Build process completes successfully \n- ✅ TypeScript compilation passes\n- ✅ Linting passes\n- ✅ Maintains backward compatibility with existing functionality\n\n## Related Issues\n\n- Fixes #5161 (Windows compatibility issues with elizaos start)\n- Related to #5155 (import() path problems - already fixed in PR #5156)\n\n## Notes\n\n- Tested on macOS but designed for Windows compatibility\n- Changes are backwards compatible with existing deployments\n- Added comprehensive logging for easier debugging of path resolution issues",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-17T18:37:34Z",
      "mergedAt": null,
      "additions": 319,
      "deletions": 5
    }
  ],
  "codeChanges": {
    "additions": 698,
    "deletions": 1376,
    "files": 17,
    "commitCount": 51
  },
  "completedItems": [
    {
      "title": "fix: filter messages by current chat (channelId) & remove unnecessary…",
      "prNumber": 5149,
      "type": "bugfix",
      "body": "Fixes message filtering to properly scope messages to the current chat/channel by channelId. Removes unnecessary code that was causing messages to appear across different chats.\r\n\r\n**What this fixes:**\r\n- Messages now properly filtered by c"
    },
    {
      "title": "fix: remove evaluators from messageHandler prompt",
      "prNumber": 5148,
      "type": "bugfix",
      "body": "# Relates to\r\nNone, I can open an issue if necessary and update this.\r\n\r\n# Background\r\nThe default `messageHandler` prompt contains an entry for the AI to choose relevant evaluators to be run after handling the processed message. At the mom"
    },
    {
      "title": "docs: add CLAUDE.md for AI assistant guidance",
      "prNumber": 5158,
      "type": "feature",
      "body": "## Summary\n- Add comprehensive CLAUDE.md file to guide AI assistants working in this repository\n- Documents project architecture, development workflow, and critical rules\n- Covers monorepo structure, component system, and testing requiremen"
    },
    {
      "title": "fix project loading on windows machines",
      "prNumber": 5156,
      "type": "bugfix",
      "body": "<!-- Use this template by filling in information and copying and pasting relevant items out of the HTML comments. -->\r\n\r\n# Relates to\r\n\r\n[bug loading projects on windows](https://github.com/elizaOS/eliza/issues/5155)\r\n\r\n<!-- This risks sect"
    },
    {
      "title": "refactor: remove OpenTelemetry instrumentation from socket message processing",
      "prNumber": 5153,
      "type": "refactor",
      "body": "## Summary\n- Remove OpenTelemetry import and tracer parameter from processSocketMessage function\n- Simplify socket message processing by removing complex instrumentation logic\n- Clean up code formatting and indentation inconsistencies\n- Mai"
    },
    {
      "title": "fix: prevent infinite recursion in JSON sanitizer by detecting circular re…",
      "prNumber": 5152,
      "type": "bugfix",
      "body": "This PR fixes the issue shown in the following screenshot:\r\n\r\n<img width=\"863\" alt=\"Screenshot 2025-06-17 at 1 07 49 PM\" src=\"https://github.com/user-attachments/assets/eee5a561-11d1-408c-b7c1-fbd75706e0a2\" />\r\n\r\nWe were encountering the er"
    },
    {
      "title": "fix: gui stuck issue",
      "prNumber": 5151,
      "type": "bugfix",
      "body": "Currently, if an agent chooses to ignore the user (either by selecting the IGNORE action or sending an empty text response), the chat UI gets stuck displaying \"agent is thinking\". This blocks the user from sending any further messages unles"
    }
  ],
  "topContributors": [
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 125.76007694409132,
      "prScore": 114.76007694409132,
      "issueScore": 2,
      "reviewScore": 9,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "tcm390",
      "avatarUrl": "https://avatars.githubusercontent.com/u/60634884?u=c6c41679b8322eaa0c81f72e0b4ed95e80f0ac16&v=4",
      "totalScore": 57.51378212887579,
      "prScore": 57.51378212887579,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 48.46320820586045,
      "prScore": 38.46320820586045,
      "issueScore": 0,
      "reviewScore": 10,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "0xbbjoker",
      "avatarUrl": "https://avatars.githubusercontent.com/u/54844437?u=90fe1762420de6ad493a1c1582f1f70c0d87d8e2&v=4",
      "totalScore": 40.6587738965761,
      "prScore": 35.2207738965761,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0.43799999999999994,
      "summary": null
    },
    {
      "username": "piffie",
      "avatarUrl": "https://avatars.githubusercontent.com/u/1213363?u=30bd860e9983a61af957d4a296c05abf098a7418&v=4",
      "totalScore": 25.924955074527656,
      "prScore": 23.924955074527656,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "odilitime",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16395496?u=c9bac48e632aae594a0d85aaf9e9c9c69b674d8b&v=4",
      "totalScore": 9,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 9,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "leopardracer",
      "avatarUrl": "https://avatars.githubusercontent.com/u/136604165?u=7ca681dd63a1e9991929157a38f094609d7a42f0&v=4",
      "totalScore": 5.59971895621705,
      "prScore": 5.59971895621705,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "GarmashAlex",
      "avatarUrl": "https://avatars.githubusercontent.com/u/193699300?u=807e67a20bd500dde9e31355d67345c26c585a16&v=4",
      "totalScore": 5.446306144334055,
      "prScore": 5.446306144334055,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "alexjalonso7777",
      "avatarUrl": "https://avatars.githubusercontent.com/u/179897636?v=4",
      "totalScore": 5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "github-advanced-security",
      "avatarUrl": "https://avatars.githubusercontent.com/in/57789?v=4",
      "totalScore": 4.5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "paulmerz",
      "avatarUrl": "https://avatars.githubusercontent.com/u/36473599?v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    }
  ],
  "newPRs": 11,
  "mergedPRs": 7,
  "newIssues": 3,
  "closedIssues": 1,
  "activeContributors": 13
}
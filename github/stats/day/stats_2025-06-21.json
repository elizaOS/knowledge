{
  "interval": {
    "intervalStart": "2025-06-21T00:00:00.000Z",
    "intervalEnd": "2025-06-22T00:00:00.000Z",
    "intervalType": "day"
  },
  "repository": "elizaos/eliza",
  "overview": "From 2025-06-21 to 2025-06-22, elizaos/eliza had 5 new PRs (3 merged), 3 new issues, and 14 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDOMT5cIs68oUhp",
      "title": "Fresh install v 1.0.11  Can't add any character json files via http://localhost:3000/",
      "author": "Megamindmaster",
      "number": 5228,
      "repository": "elizaos/eliza",
      "body": "Worked fine with v 1.0.9 tried both upgrade and fresh install to 1.0.11 global CLI. Tried everything i could think of. Maybe I'm missing something?\n\nTried a bunch of different character files like Jarvis etc. Kept getting similar errors to this.\n<img width=\"378\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f1a4cc27-1e4e-4db7-9290-ba022883e591\" />",
      "createdAt": "2025-06-21T02:44:41Z",
      "closedAt": "2025-06-21T04:47:08Z",
      "state": "CLOSED",
      "commentCount": 3
    },
    {
      "id": "I_kwDOMT5cIs68qLqY",
      "title": "Documentation Overhaul: Create Separate Tracks for Simple Users and Developers",
      "author": "wtfsayo",
      "number": 5234,
      "repository": "elizaos/eliza",
      "body": "## üìö Documentation Overhaul Proposal\n\n### Background\n\nWe've received valuable feedback from a developer building on ElizaOS that our current documentation, while comprehensive, doesn't effectively serve our two distinct user groups. After using the product, they found it much improved since early 2024, but the documentation doesn't reflect this quality.\n\n### The Problem\n\n1. **Mixed Audiences**: Current docs blend beginner and advanced concepts without clear separation\n2. **Missing Technical Details**: Core concepts like state management, sockets, and architecture decisions aren't well explained\n3. **Unclear Guidance**: No clear direction on when to use standalone projects vs monorepo development\n4. **Accessibility**: Non-technical users (\"vibecoders\") struggle to get started quickly\n\n### Proposed Solution\n\nCreate a **two-track documentation system** that serves both audiences effectively:\n\n## üéØ Track 1: Simple Docs (For Vibecoders)\n\n**Goal**: Get non-technical users running agents in 5 minutes without understanding internals\n\n### Content Structure:\n- **Quick Start**: One-page guide to go from zero to running agent\n- **Templates Gallery**: Pre-built agents for common use cases\n  - Discord bot template\n  - Telegram assistant template\n  - Trading bot template\n  - Customer service agent template\n- **Simple Customization**: \n  - How to change personality traits\n  - Adding basic knowledge\n  - Enabling/disabling features\n- **Visual Guides**: Screenshots and videos for every step\n- **FAQ**: Common issues and simple solutions\n\n### Key Principles:\n- Hide complexity\n- Focus on outcomes, not process\n- Provide copy-paste solutions\n- Use `elizaos create` workflow exclusively\n\n## üîß Track 2: Technical Documentation (For Developers)\n\n**Goal**: Provide deep technical understanding for developers building on or contributing to ElizaOS\n\n### Content Structure:\n\n#### Architecture Deep Dive\n- System architecture overview with diagrams\n- Data flow and component interactions\n- Design decisions and rationale\n\n#### Core Concepts (Currently Missing\\!)\n- **State Management**: How agent memory, context, and state work\n- **Room/World Abstraction**: Understanding the UUID system and agent perspectives\n- **Socket Architecture**: Real-time communication implementation\n- **Plugin Lifecycle**: From creation to deployment\n- **Service Layer**: How services interact and maintain state\n\n#### Development Guides\n- **Monorepo vs Standalone**: Clear decision matrix\n  - Standalone: For running agents, trying plugins, basic customization\n  - Monorepo: For core development, custom plugins, contributing\n- **Plugin Development**: Step-by-step guide with best practices\n- **Testing Strategies**: Unit, integration, and e2e testing approaches\n- **Performance Optimization**: Profiling and tuning guides\n\n#### API Reference\n- Complete API documentation\n- TypeScript interfaces and types\n- Code examples for every endpoint\n\n## üöÄ Implementation Plan\n\n### Phase 1: Structure & Navigation (Week 1-2)\n1. Create new documentation structure with clear separation\n2. Design interactive landing page with user journey paths\n3. Set up navigation for both tracks\n\n### Phase 2: Simple Docs (Week 3-4)\n1. Write streamlined quick start guide\n2. Create template gallery with 5-10 ready-to-use agents\n3. Develop visual guides and screenshots\n4. Build comprehensive FAQ\n\n### Phase 3: Technical Docs (Week 5-8)\n1. Document architecture with diagrams\n2. Write deep dives on state, sockets, and core concepts\n3. Create comprehensive plugin development guide\n4. Build API reference documentation\n\n### Phase 4: Enhancements (Week 9-10)\n1. Add interactive examples\n2. Create video tutorials\n3. Implement search functionality\n4. Add feedback mechanism\n\n## üìä Success Metrics\n\n- Reduce \"getting started\" time from 30+ minutes to 5 minutes for simple users\n- Decrease documentation-related issues by 50%\n- Increase contributor onboarding success rate\n- Positive feedback from both user segments\n\n## üé® Documentation Design Principles\n\n1. **Clear Audience Separation**: Never mix simple and technical content\n2. **Progressive Disclosure**: Start simple, reveal complexity as needed\n3. **Practical Examples**: Every concept paired with real-world usage\n4. **Visual Learning**: Diagrams, screenshots, and videos throughout\n5. **Searchable**: Comprehensive search across both tracks\n\n## üìù Specific Improvements Requested\n\nBased on developer feedback, ensure we address:\n- Clear explanation of who should use standalone vs monorepo\n- Deep technical explanations of state management\n- Socket implementation details\n- Architecture decisions and rationale\n- Better onboarding for both audiences\n\n## ü§ù How You Can Help\n\n- **Developers**: Share what technical details you wish were documented\n- **Users**: Tell us what confused you when getting started\n- **Contributors**: Help write documentation for areas you understand\n- **Reviewers**: Provide feedback on documentation PRs\n\nThis overhaul will make ElizaOS accessible to everyone while maintaining the technical depth developers need. Let's build documentation that matches the quality of our product\\! üöÄ\n\n---\n\n**Labels**: documentation, enhancement, high-priority\n**Assignees**: @ElizaOS/docs-team\n**Project**: Documentation Improvement Q1 2025",
      "createdAt": "2025-06-21T15:32:34Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs68o4X0",
      "title": "server",
      "author": "furkannabisumji",
      "number": 5230,
      "repository": "elizaos/eliza",
      "body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"API endpoint not found\",\n        \"code\": 404\n    }\n}\nin all endpoints including health only get agents is working ",
      "createdAt": "2025-06-21T06:56:44Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 0
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDOMT5cIs6bf7M2",
      "title": "fix: add server tests back fully fixed",
      "author": "ChristopherTrimboli",
      "number": 5231,
      "body": "This pull request introduces several changes to the testing infrastructure and codebase for the `@elizaos/server` package. The modifications include updates to the test runner, enhancements to mocking strategies, and adjustments to test setup for better isolation and reliability. Additionally, the CI pipeline and test documentation have been improved for clarity and usability.\r\n\r\n### Testing Infrastructure Updates:\r\n* [`packages/server/package.json`](diffhunk://#diff-92fadee1dfb23b20d6b0f6557a3ea0b8a231a7591db73f9f37772383bd0575d9L38-R41): Replaced `bun test` commands with a custom test runner (`test-runner.ts`) to ensure proper test isolation and added a new `test:all` script to run both unit and integration tests sequentially.\r\n* [`packages/server/bunfig.toml`](diffhunk://#diff-2eb3f51868d9121ebe10d4264cff523b089aeeba3a615c72b89f965c3b85fdfaR8-R10): Added `preload` configuration to automatically load `setup.ts` for global test setup before running tests.\r\n\r\n### Mocking Enhancements:\r\n* [`packages/server/src/__tests__/agent-server.test.ts`](diffhunk://#diff-02fbb52d72b3b2f6423efacf2ea7bda1635c1688c3fa46f10ffd20a5a613c53bL6-R20): Refactored mocking strategy to set up mock objects (`mockLogger`, `mockCreateDatabaseAdapter`, `mockDatabaseMigrationService`) before imports for better test isolation and reliability. [[1]](diffhunk://#diff-02fbb52d72b3b2f6423efacf2ea7bda1635c1688c3fa46f10ffd20a5a613c53bL6-R20) [[2]](diffhunk://#diff-02fbb52d72b3b2f6423efacf2ea7bda1635c1688c3fa46f10ffd20a5a613c53bL42-R43) [[3]](diffhunk://#diff-02fbb52d72b3b2f6423efacf2ea7bda1635c1688c3fa46f10ffd20a5a613c53bL57-R78) [[4]](diffhunk://#diff-02fbb52d72b3b2f6423efacf2ea7bda1635c1688c3fa46f10ffd20a5a613c53bR127-R206)\r\n\r\n### Test Documentation Improvements:\r\n* [`packages/server/src/__tests__/README.md`](diffhunk://#diff-788fa56379598993ff602ae6940107944604665e53d485623deb80b7d0048fbcL1-R187): Reorganized and expanded the test documentation to include detailed explanations of test types, setup, database management, and debugging strategies. Removed outdated test descriptions and added examples for writing unit and integration tests.\r\n\r\n### Workflow Adjustments:\r\n* [`.github/workflows/core-package-tests.yaml`](diffhunk://#diff-5c79963e76aff7a0c7bafddacccb576c5585a944364dba8a845eb3b1b0c88af9L149-R154): Updated the list of packages to include `server` in the core backend tests, ensuring comprehensive coverage during CI runs.\r\n\r\n### Test Logic Refinements:\r\n* [`packages/server/src/__tests__/agent-server.test.ts`](diffhunk://#diff-02fbb52d72b3b2f6423efacf2ea7bda1635c1688c3fa46f10ffd20a5a613c53bL158): Enhanced test logic for `AgentServer` integration tests, including improved assertions, better handling of initialization errors, and more descriptive expectations for mocked methods. [[1]](diffhunk://#diff-02fbb52d72b3b2f6423efacf2ea7bda1635c1688c3fa46f10ffd20a5a613c53bL158) [[2]](diffhunk://#diff-02fbb52d72b3b2f6423efacf2ea7bda1635c1688c3fa46f10ffd20a5a613c53bL199-R270) [[3]](diffhunk://#diff-02fbb52d72b3b2f6423efacf2ea7bda1635c1688c3fa46f10ffd20a5a613c53bL231-R292) [[4]](diffhunk://#diff-02fbb52d72b3b2f6423efacf2ea7bda1635c1688c3fa46f10ffd20a5a613c53bL349-R411) [[5]](diffhunk://#diff-02fbb52d72b3b2f6423efacf2ea7bda1635c1688c3fa46f10ffd20a5a613c53bR424-R438) [[6]](diffhunk://#diff-02fbb52d72b3b2f6423efacf2ea7bda1635c1688c3fa46f10ffd20a5a613c53bR448-R465)",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-21T07:25:03Z",
      "mergedAt": "2025-06-21T07:27:06Z",
      "additions": 980,
      "deletions": 610
    },
    {
      "id": "PR_kwDOMT5cIs6bU071",
      "title": "fix: unit and integration tests",
      "author": "0xbbjoker",
      "number": 5205,
      "body": "<!-- Use this template by filling in information and copying and pasting relevant items out of the HTML comments. -->\r\n\r\n# Relates to\r\n\r\n<!-- LINK TO ISSUE OR TICKET -->\r\n\r\n<!-- This risks section must be filled out before the final review and merge. -->\r\n\r\n# Risks\r\n\r\n<!--\r\nLow, medium, large. List what kind of risks and what could be affected.\r\n-->\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\n## What kind of change is this?\r\n\r\n<!--\r\nBug fixes (non-breaking change which fixes an issue)\r\nImprovements (misc. changes to existing features)\r\nFeatures (non-breaking change which adds functionality)\r\nUpdates (new versions of included code)\r\n-->\r\n\r\n<!-- This \"Why\" section is most relevant if there are no linked issues explaining why. If there is a related issue, it might make sense to skip this why section. -->\r\n<!--\r\n## Why are we doing this? Any context or related work?\r\n-->\r\n\r\n# Documentation changes needed?\r\n\r\n<!--\r\nMy changes do not require a change to the project documentation.\r\nMy changes require a change to the project documentation.\r\nIf documentation change is needed: I have updated the documentation accordingly.\r\n-->\r\n\r\n<!-- Please show how you tested the PR. This will really help if the PR needs to be retested and probably help the PR get merged quicker. -->\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\n## Detailed testing steps\r\n\r\n<!--\r\nNone: Automated tests are acceptable.\r\n-->\r\n\r\n<!--\r\n- As [anon/admin], go to [link]\r\n¬† - [do action]\r\n¬† - verify [result]\r\n-->\r\n\r\n<!-- If there is a UI change, please include before and after screenshots or videos. This will speed up PRs being merged. It is extra nice to annotate screenshots with arrows or boxes pointing out the differences. -->\r\n<!--\r\n## Screenshots\r\n### Before\r\n### After\r\n-->\r\n\r\n<!-- If there is anything about the deployment, please make a note. -->\r\n<!--\r\n# Deploy Notes\r\n-->\r\n\r\n<!-- ¬†Copy and paste command line output. -->\r\n<!--\r\n## Database changes\r\n-->\r\n\r\n<!-- ¬†Please specify deploy instructions if there is something more than the automated steps. -->\r\n<!--\r\n## Deployment instructions\r\n-->\r\n\r\n<!-- If you are on Discord, please join https://discord.gg/ai16z and state your Discord username here for the contributor role and join us in #development-feed -->\r\n<!--\r\n## Discord username\r\n\r\n-->\r\n",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-20T00:17:59Z",
      "mergedAt": null,
      "additions": 308,
      "deletions": 46
    },
    {
      "id": "PR_kwDOMT5cIs6bfHBE",
      "title": "fix: bootstrap tests, cleanup code",
      "author": "ChristopherTrimboli",
      "number": 5227,
      "body": "",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-21T00:38:39Z",
      "mergedAt": "2025-06-21T00:39:38Z",
      "additions": 245,
      "deletions": 313
    },
    {
      "id": "PR_kwDOMT5cIs6bgJ7Q",
      "title": "refactor(polygon): remove conflicts",
      "author": "snobbee",
      "number": 5232,
      "body": "* renamed plugin names to avoid conflicts across plugins\r\n* rephrase examples to avoid confilcts",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-21T09:06:45Z",
      "mergedAt": null,
      "additions": 170,
      "deletions": 170
    },
    {
      "id": "PR_kwDOMT5cIs6bfu9C",
      "title": "fix: plugin sql unit tests",
      "author": "ChristopherTrimboli",
      "number": 5229,
      "body": "This pull request focuses on improving test reliability, simplifying test setups, and enhancing code clarity across multiple files in the `plugin-sql` package. Key changes include better handling of temporary directories in tests, refactoring logger and module mocking, and improving migration service tests. Below is a categorized summary of the most important changes:\r\n\r\n### Test Reliability Improvements:\r\n* **Temporary directory management**: Added setup and cleanup logic for temporary directories in unit tests to prevent directory creation issues and ensure proper cleanup after tests. (`[[1]](diffhunk://#diff-cc02f569b1f659f748cb4f693968efca7ae9ef25ed4d5d72976041a355d51325L2-R20)`, `[[2]](diffhunk://#diff-cc02f569b1f659f748cb4f693968efca7ae9ef25ed4d5d72976041a355d51325R32-R48)`)\r\n* **Environment variable isolation**: Reset and utilized environment variables like `PGLITE_DATA_DIR` in tests to avoid contamination between test runs. (`[[1]](diffhunk://#diff-cc02f569b1f659f748cb4f693968efca7ae9ef25ed4d5d72976041a355d51325L60-R93)`, `[[2]](diffhunk://#diff-cc02f569b1f659f748cb4f693968efca7ae9ef25ed4d5d72976041a355d51325R135-R136)`, `[[3]](diffhunk://#diff-cc02f569b1f659f748cb4f693968efca7ae9ef25ed4d5d72976041a355d51325R159-R162)`, `[[4]](diffhunk://#diff-cc02f569b1f659f748cb4f693968efca7ae9ef25ed4d5d72976041a355d51325R171-R172)`)\r\n\r\n### Logger and Module Mocking Enhancements:\r\n* **Refactored logger mocking**: Replaced manual logger mocks with `mock.module` for simplified and consistent mocking across tests. (`[[1]](diffhunk://#diff-a21e8dd25f21ee4efdaf90d5938652928d4c3e0f246f4be001559af47d82d56bL1-R27)`, `[[2]](diffhunk://#diff-903de7d5db64b6b7529336b82fd782d7a495c0ade97514991e48c41330755880L3-R27)`)\r\n* **Improved `pg` module mocking**: Used `mock.module` for mocking the `pg` module, ensuring no actual database connections are made during unit tests. (`[[1]](diffhunk://#diff-9a67c14fcaef7d42f124978844e9b6117186859fb751b4a1a3173283c21aabdbL1-R23)`, `[[2]](diffhunk://#diff-9a67c14fcaef7d42f124978844e9b6117186859fb751b4a1a3173283c21aabdbL53-R55)`, `[[3]](diffhunk://#diff-9a67c14fcaef7d42f124978844e9b6117186859fb751b4a1a3173283c21aabdbR137-R138)`)\r\n\r\n### Code Clarity and Simplification:\r\n* **Selective directory resolution**: Moved `resolvePgliteDir` calls to only occur when `PGLite` is actually used, avoiding unnecessary computations. (`[[1]](diffhunk://#diff-094f51c4ec46169493b7fb79d5785bd66cface401f1dadf7c63b539be2a576c5L53-L54)`, `[[2]](diffhunk://#diff-094f51c4ec46169493b7fb79d5785bd66cface401f1dadf7c63b539be2a576c5R62-R64)`)\r\n* **Default directory handling**: Updated `resolvePgliteDir` to use a consistent default directory path (`.elizadb`) for better clarity and alignment with project structure. (`[packages/plugin-sql/src/__tests__/unit/utils.test.tsL73-R84](diffhunk://#diff-23c58a10cb2ae7c7427caec81d63f04518c20f1ca0842ca001b380af12912fd6L73-R84)`)\r\n\r\n### Improved Error Handling in Tests:\r\n* **Graceful query error handling**: Refactored tests to explicitly check for thrown errors instead of relying on `rejects.toThrow()`. (`[packages/plugin-sql/src/__tests__/integration/pg-adapter-integration.test.tsL174-R182](diffhunk://#diff-a66faf4467511c0e5927f061624586c5108fcb6b193f59ad9a33fb3cfdd1021fL174-R182)`)\r\n* **Migration service tests**: Simplified migration tests by directly awaiting migration methods, ensuring test failures occur naturally if exceptions are thrown. (`[[1]](diffhunk://#diff-82ca01fe2b2e4e07af9302a7c6fe32a889fc635d055145ccb0c8fe13bcf7048eL129-R130)`, `[[2]](diffhunk://#diff-82ca01fe2b2e4e07af9302a7c6fe32a889fc635d055145ccb0c8fe13bcf7048eL147-R147)`)",
      "repository": "elizaos/eliza",
      "createdAt": "2025-06-21T05:50:58Z",
      "mergedAt": "2025-06-21T06:03:37Z",
      "additions": 121,
      "deletions": 57
    }
  ],
  "codeChanges": {
    "additions": 1346,
    "deletions": 980,
    "files": 50,
    "commitCount": 13
  },
  "completedItems": [
    {
      "title": "fix: add server tests back fully fixed",
      "prNumber": 5231,
      "type": "feature",
      "body": "This pull request introduces several changes to the testing infrastructure and codebase for the `@elizaos/server` package. The modifications include updates to the test runner, enhancements to mocking strategies, and adjustments to test set"
    },
    {
      "title": "fix: plugin sql unit tests",
      "prNumber": 5229,
      "type": "bugfix",
      "body": "This pull request focuses on improving test reliability, simplifying test setups, and enhancing code clarity across multiple files in the `plugin-sql` package. Key changes include better handling of temporary directories in tests, refactori"
    },
    {
      "title": "fix: bootstrap tests, cleanup code",
      "prNumber": 5227,
      "type": "bugfix",
      "body": ""
    }
  ],
  "topContributors": [
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 169.857757388635,
      "prScore": 169.517757388635,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.33999999999999997,
      "summary": null
    },
    {
      "username": "snobbee",
      "avatarUrl": "https://avatars.githubusercontent.com/u/125891987?u=ba9ca14b922f8fb73f38ba0981d157247af3dd03&v=4",
      "totalScore": 38.44741238641758,
      "prScore": 38.44741238641758,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "0xCardiE",
      "avatarUrl": "https://avatars.githubusercontent.com/u/8969767?u=8b05509ceb96fd63a6246dfbf0860fd1df586e59&v=4",
      "totalScore": 11.902216293389367,
      "prScore": 11.702216293389368,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "monilpat",
      "avatarUrl": "https://avatars.githubusercontent.com/u/15067321?v=4",
      "totalScore": 5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "Megamindmaster",
      "avatarUrl": "https://avatars.githubusercontent.com/u/31832268?u=d978dad8011f9cf56047430ba41aff01e4c1be66&v=4",
      "totalScore": 4.54,
      "prScore": 0,
      "issueScore": 4.2,
      "reviewScore": 0,
      "commentScore": 0.33999999999999997,
      "summary": null
    },
    {
      "username": "github-advanced-security",
      "avatarUrl": "https://avatars.githubusercontent.com/in/57789?v=4",
      "totalScore": 4.5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "furkannabisumji",
      "avatarUrl": "https://avatars.githubusercontent.com/u/103491179?u=8e1680f87bc79e7399bedfbd1b0739e63b662ea8&v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    }
  ],
  "newPRs": 5,
  "mergedPRs": 3,
  "newIssues": 3,
  "closedIssues": 1,
  "activeContributors": 14
}
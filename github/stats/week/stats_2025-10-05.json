{
  "interval": {
    "intervalStart": "2025-10-05T00:00:00.000Z",
    "intervalEnd": "2025-10-12T00:00:00.000Z",
    "intervalType": "week"
  },
  "repository": "elizaos/eliza",
  "overview": "From 2025-10-05 to 2025-10-12, elizaos/eliza had 16 new PRs (10 merged), 0 new issues, and 10 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDOMT5cIs7HyidA",
      "title": "Analyze options for MCP Gateway, Add some MCP servers, add x402 layer",
      "author": "borisudovicic",
      "number": 5814,
      "repository": "elizaos/eliza",
      "body": "[https://hackmd.io/aM2pd2NbSmOMzD0X9GPYiQ](https://hackmd.io/aM2pd2NbSmOMzD0X9GPYiQ)",
      "createdAt": "2025-08-25T13:40:42Z",
      "closedAt": "2025-10-07T05:52:32Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7INMZr",
      "title": "Analyze options for MCP Gateway, Add some MCP servers, add x402 layer",
      "author": "borisudovicic",
      "number": 5830,
      "repository": "elizaos/eliza",
      "body": "",
      "createdAt": "2025-08-27T10:47:46Z",
      "closedAt": "2025-10-07T05:52:33Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7Ki49f",
      "title": "Core Cleanup",
      "author": "borisudovicic",
      "number": 5911,
      "repository": "elizaos/eliza",
      "body": "* Audit and refactor type definitions across runtime.\n* Remove legacy code paths (double-inits, redundant type guards).\n* Unify plugin loading across server, CLI, and browser runtimes.",
      "createdAt": "2025-09-09T12:10:03Z",
      "closedAt": "2025-10-07T16:26:04Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7K1tf4",
      "title": "Fully wrap up browser support",
      "author": "borisudovicic",
      "number": 5958,
      "repository": "elizaos/eliza",
      "body": "",
      "createdAt": "2025-09-10T16:20:51Z",
      "closedAt": "2025-10-07T16:26:01Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7LFPoC",
      "title": "send list of partners to BD (plugins)",
      "author": "linear",
      "number": 5969,
      "repository": "elizaos/eliza",
      "body": "",
      "createdAt": "2025-09-11T15:51:03Z",
      "closedAt": "2025-10-07T16:26:03Z",
      "state": "CLOSED",
      "commentCount": 0
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDOMT5cIs6sMtSD",
      "title": "feat: migrate to UUID-only agent identification",
      "author": "0xbbjoker",
      "number": 6036,
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Agents now use randomly generated UUIDs (not names) for identity; duplicate names are allowed, with loader/runtime/server/DB updated plus migrations and tests.\n> \n> - **Core/runtime (`packages/core`)**:\n>   - Generate `agentId` via `uuidv4()` (no name-derived IDs).\n>   - `ensureAgentExists` now requires `agent.id`, updates/creates strictly by UUID.\n>   - Logs/messages reference `agent.id`.\n> - **Server (`packages/server`)**:\n>   - Loader `jsonToCharacter` assigns `id` if missing and supports env prefixes by `name` and `id`.\n>   - Agent CRUD create path uses provided `character.id` (no name-to-UUID), and updates active runtimes in-place.\n>   - Added tests for loader UUID generation and CRUD behavior with duplicate names.\n> - **SQL Plugin (`packages/plugin-sql`)**:\n>   - Schema: drop unique constraint on `agents.name`.\n>   - `createAgent` checks duplicate `id` only; allows duplicate `name`.\n>   - Integration and migration tests verifying duplicate-name support, UUID-based CRUD, and constraint removal.\n> - **CLI (`packages/cli`)**:\n>   - Scenario factory assigns random `id` to test character (no name-based ID).\n> - **Project starter**:\n>   - Character docs note auto-generated `id` and option to set a fixed UUID.\n> - **Tests**:\n>   - Extensive suites across core/server/sql to ensure UUID independence from names and proper migrations.\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit 93f269089b99832050651406cf7047f4a9392463. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- New Features\n  - Agents/characters now use randomly generated UUIDs for identity; multiple agents can share the same name.\n  - Loader auto-assigns an ID when missing; explicit IDs are preserved.\n  - Environment variable prefixing now derives from the agent ID for consistent configuration.\n- Documentation\n  - Starter character docs updated to explain ID generation and how to set a fixed ID.\n- Chores\n  - Database schema updated to remove the unique constraint on agent names, enabling duplicate names while keeping ID-based operations.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-10-06T06:52:46Z",
      "mergedAt": null,
      "additions": 1792,
      "deletions": 126
    },
    {
      "id": "PR_kwDOMT5cIs6sW7SH",
      "title": "feat(core): add config and plugin modules - phase 4 - refactor ElizaOS/Server",
      "author": "standujar",
      "number": 6037,
      "body": "\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- New Features\n  - Added plugin management with auto-install, loading, validation, and dependency resolution.\n  - Introduced configuration utilities: character parsing/validation/defaults, environment variable loading from .env, and secrets population from local env files.\n  - Expanded public API to expose configuration and plugin modules.\n\n- Tests\n  - Added comprehensive test suites for plugin management, character config, environment loading, and secrets handling, including edge cases and dependency ordering.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-10-06T20:06:24Z",
      "mergedAt": null,
      "additions": 1211,
      "deletions": 161
    },
    {
      "id": "PR_kwDOMT5cIs6sXx03",
      "title": "fix: agent plugins not reloading on PATCH update and service stop race condition",
      "author": "standujar",
      "number": 6040,
      "body": "# Relates to\r\n\r\nFixes issue where agent plugins/services are not properly updated when using PATCH endpoint to modify agent configuration, and fixes race condition causing service initialization errors during agent restart.\r\n\r\n# Risks\r\n\r\n**Medium**\r\n\r\n- Changes agent update logic to force restart when plugins change\r\n- Modifies service stop behavior to be synchronous\r\n- Could impact agent uptime during configuration updates\r\n- Affects all agents using the PATCH endpoint for updates\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR fixes two critical issues:\r\n\r\n1. **Agent Plugin Update Bug**: When updating an agent via PATCH `/api/agents/:agentId` and changing the `plugins` array, the plugins were not being reloaded. The agent continued using the old plugins/services even after the database was updated.\r\n\r\n2. **Service Stop Race Condition**: The `unregisterAgent` method was not awaiting service shutdown, causing services to be incompletely stopped before agent restart. This led to errors like \"Attempted to assign to readonly property\" when services (Telegram, Discord) tried to reinitialize.\r\n\r\n**Changes:**\r\n\r\n1. **`packages/server/src/api/agents/crud.ts`**:\r\n   - Detects plugin changes by comparing current and updated agent configurations\r\n   - Forces full agent restart (unregister + startAgents) when plugins change\r\n   - Preserves in-place updates for non-critical character property changes\r\n   - Adds detailed logging for restart decisions\r\n\r\n2. **`packages/server/src/index.ts`**:\r\n   - Changes `agent.stop().catch(...)` to `await agent.stop()`\r\n   - Ensures all services (Discord, Telegram, etc.) are completely stopped before proceeding\r\n   - Prevents race conditions when restarting agents\r\n   - Fixes \"Attempted to assign to readonly property\" errors in Telegram/Discord clients\r\n\r\n## What kind of change is this?\r\n\r\n- [x] Bug fixes (non-breaking change which fixes an issue)\r\n- [x] Improvements (misc. changes to existing features)\r\n\r\n# Documentation changes needed?\r\n\r\n- [x] My changes do not require a change to the project documentation.\r\n\r\nThe changes are internal fixes to existing functionality and don't change the API surface.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\n1. Review the plugin change detection logic in `crud.ts` (lines 219-228)\r\n2. Review the restart vs update decision logic (lines 232-250)\r\n3. Review the await change in `index.ts` (line 1273)\r\n\r\n## Detailed testing steps\r\n\r\n### Test 1: Plugin Update with Restart\r\n1. Start an agent with a set of plugins (e.g., `[\"bootstrap\", \"discord\", \"knowledge\"]`)\r\n2. Use PATCH to update the agent and remove a plugin (e.g., remove `\"knowledge\"`)\r\n   ```bash\r\n   curl -X PATCH http://localhost:3000/api/agents/{agentId} \\\r\n     -H \"Content-Type: application/json\" \\\r\n     -d '{\"plugins\": [\"bootstrap\", \"discord\"]}'\r\n   ```\r\n3. Verify the logs show:\r\n   - `[AGENT UPDATE] Agent {id} requires restart due to plugins changes`\r\n   - `[AGENT UPDATE] Restarting agent {id} due to configuration changes`\r\n   - `[AGENT UPDATE] Agent {id} restarted successfully`\r\n4. Verify the removed plugin's services are no longer available\r\n5. Check that plugin routes are updated (e.g., `/knowledge/` routes should be gone)\r\n\r\n### Test 2: Character Update without Restart\r\n1. Start an agent\r\n2. Use PATCH to update only character properties (e.g., `name`, `bio`)\r\n   ```bash\r\n   curl -X PATCH http://localhost:3000/api/agents/{agentId} \\\r\n     -H \"Content-Type: application/json\" \\\r\n     -d '{\"name\": \"New Name\", \"bio\": \"Updated bio\"}'\r\n   ```\r\n3. Verify the logs show:\r\n   - `[AGENT UPDATE] Updated active agent {id} without restart`\r\n4. Verify the agent continues running without interruption\r\n\r\n### Test 3: Service Stop Behavior\r\n1. Start an agent with multiple services (Discord, Telegram, etc.)\r\n2. Update the agent to trigger a restart (change plugins)\r\n3. Verify no errors occur during service shutdown\r\n4. Verify all services are cleanly stopped before restart begins:\r\n   - Look for `[AGENT UNREGISTER] All services stopped for agent {id}`\r\n5. Verify the agent restarts successfully with all new services\r\n",
      "repository": "elizaos/eliza",
      "createdAt": "2025-10-06T21:13:42Z",
      "mergedAt": "2025-10-07T11:51:13Z",
      "additions": 516,
      "deletions": 17
    },
    {
      "id": "PR_kwDOMT5cIs6rxG2c",
      "title": "feat: Add mentionContext interface and improve shouldRespond logic",
      "author": "standujar",
      "number": 6030,
      "body": "# Relates to\r\n\r\nIssue discussing the need for platform-agnostic mention detection\r\n\r\n# Risks\r\n\r\n**Medium Risk**\r\n- Changes core message flow logic in bootstrap\r\n- Modifies shouldRespond template and provider\r\n- Affects LLM decision-making for response behavior\r\n- Impacts all platforms that depend on bootstrap logic\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR introduces a platform-agnostic mention detection system through the `MentionContext` interface:\r\n\r\n**Core Changes:**\r\n- Adds `MentionContext` interface to `Content` type in `packages/core/src/types/primitives.ts`\r\n  - Provides universal structure for platform mention metadata (isMention, isReply, isThread)\r\n  - Enables platforms to provide facts without implementing detection logic\r\n\r\n- Enhances `shouldRespondTemplate` in `packages/core/src/prompts.ts`\r\n  - Adds explicit \"IMPORTANT RULES FOR RESPONDING\" section\r\n  - Clarifies \"talking TO\" vs \"talking ABOUT\" distinction\r\n  - Instructs LLM to handle text mentions, typos, and variations naturally\r\n\r\n- Enriches `shouldRespondProvider` in `packages/plugin-bootstrap/src/providers/shouldRespond.ts`\r\n  - Adds 10+ examples covering edge cases (direct mentions, typos, indirect questions, references)\r\n  - Teaches LLM to distinguish interpellation from mere references\r\n\r\n- Modifies `shouldBypassShouldRespond` in `packages/plugin-bootstrap/src/index.ts`\r\n  - Accepts optional `mentionContext` parameter\r\n  - Implements fast-path optimization: skips LLM call for platform-native mentions (@mentions, replies)\r\n  - Saves tokens and improves response time for obvious mentions\r\n\r\n**Key Architecture Principles:**\r\n- Bootstrap remains 100% platform-agnostic (no Discord/Telegram/etc specific logic)\r\n- Platforms provide FACTS only via mentionContext\r\n- LLM analyzes context and makes intelligent decisions\r\n- Fast path for platform mentions, LLM path for text analysis\r\n\r\n## What kind of change is this?\r\n\r\n- [x] Features (adds platform-agnostic MentionContext interface)\r\n- [x] Improvements (refactors mention detection to be more intelligent and extensible)\r\n\r\n# Documentation changes needed?\r\n\r\n- [x] My changes require a change to the project documentation\r\n- Documentation needed for:\r\n  - `MentionContext` interface usage guide for plugin developers\r\n  - How platforms should populate mentionContext metadata\r\n  - Fast-path optimization behavior explanation\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\n1. Review the `MentionContext` interface in `packages/core/src/types/primitives.ts`\r\n2. Check the enhanced prompt in `packages/core/src/prompts.ts` (search for \"IMPORTANT RULES FOR RESPONDING\")\r\n3. Review enriched examples in `packages/plugin-bootstrap/src/providers/shouldRespond.ts`\r\n4. Check `shouldBypassShouldRespond` changes in `packages/plugin-bootstrap/src/index.ts`\r\n5. Run test suites to verify coverage\r\n\r\n## Detailed testing steps\r\n\r\n**Automated Tests:**\r\n\r\n```bash\r\n# Core prompts tests (8 tests)\r\nbun test packages/core/src/__tests__/prompts.test.ts\r\n\r\n# Bootstrap logic tests (21 tests, 6 new for mentionContext)\r\nbun test packages/plugin-bootstrap/src/__tests__/logic.test.ts\r\n```\r\n\r\n**Test Coverage:**\r\n- ✅ `packages/core/src/__tests__/prompts.test.ts`\r\n  - Verifies shouldRespondTemplate contains new \"IMPORTANT RULES FOR RESPONDING\" section\r\n  - Checks for \"talking TO\" vs \"talking ABOUT\" instructions\r\n  - **Result: 8 pass, 0 fail**\r\n\r\n- ✅ `packages/plugin-bootstrap/src/__tests__/logic.test.ts`\r\n  - New describe block: \"shouldBypassShouldRespond with mentionContext\"\r\n  - 6 new tests covering:\r\n    1. DM channel bypass\r\n    2. Platform mention bypass (isMention=true)\r\n    3. Reply to bot bypass (isReply=true)\r\n    4. No bypass for regular messages\r\n    5. client_chat source bypass\r\n    6. Platform agnostic behavior (discord, telegram, twitter, slack)\r\n  - **Result: 21 pass, 0 fail**\r\n\r\n**Manual Integration Testing:**\r\n- Platforms implementing mentionContext will need to test with real messages\r\n- Verify LLM correctly distinguishes \"Hey BotName, help me\" (RESPOND) vs \"BotName's code is great\" (IGNORE)\r\n- Verify fast-path works for @mentions (no unnecessary LLM calls)\r\n\r\n## Screenshots\r\n\r\nN/A - This is core infrastructure with no UI changes\r\n\r\n# Deploy Notes\r\n\r\n## Deployment instructions\r\n\r\n**Standard deployment:**\r\n1. Merge this PR to main\r\n2. Release as v1.6.2 (or next minor version)\r\n3. No breaking changes - fully backward compatible\r\n4. Platforms can adopt mentionContext incrementally (optional parameter)\r\n\r\n**For platform plugin developers:**\r\n- Existing plugins continue to work without changes\r\n- To adopt mentionContext, populate it in message content before passing to bootstrap\r\n- Reference Discord plugin implementation as example\r\n\r\n**No database changes required**\r\n",
      "repository": "elizaos/eliza",
      "createdAt": "2025-10-02T13:20:09Z",
      "mergedAt": "2025-10-05T11:20:06Z",
      "additions": 295,
      "deletions": 167
    },
    {
      "id": "PR_kwDOMT5cIs6sIs7Y",
      "title": "feat(plugin-sql): add offset parameter to getMemories for database-le…",
      "author": "0xbbjoker",
      "number": 6032,
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Adds an optional offset to getMemories for pagination, applies limit/offset in SQL, validates non-negative values, and adds integration tests covering paging and edge cases.\n> \n> - **Core**:\n>   - Add `offset?: number` to `getMemories` in `packages/core/src/database.ts` and `packages/core/src/types/database.ts`.\n> - **Plugin SQL**:\n>   - Implement `offset` handling in `BaseDrizzleAdapter.getMemories` with validation (`offset >= 0`).\n>   - Apply conditional `.limit()` and `.offset()` to the base query; keep ordering by `createdAt` desc.\n>   - Update JSDoc to document `offset`.\n> - **Tests**:\n>   - Add integration tests for pagination using `count` + `offset`, offset-only, large offset, zero/absent offset behavior, negative offset rejection, and consistency with `countMemories`.\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit 6961feff4ddcef83c12168fa4730e50afe731105. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- New Features\n  - Added optional offset-based pagination to memory retrieval for more precise paging.\n\n- Tests\n  - Introduced comprehensive integration tests covering pagination (count/offset combinations), large-offset edge cases, non-overlapping pages, and partial update integrity.\n\n- Chores\n  - Added a new plugin submodule for knowledge functionality.\n  - Updated the knowledge plugin submodule reference.\n\n- Documentation\n  - Updated parameter docs to include the new offset option in memory retrieval.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-10-05T10:10:31Z",
      "mergedAt": "2025-10-05T11:38:35Z",
      "additions": 182,
      "deletions": 3
    }
  ],
  "codeChanges": {
    "additions": 1363,
    "deletions": 434,
    "files": 23,
    "commitCount": 78
  },
  "completedItems": [
    {
      "title": "docs: fix typo",
      "prNumber": 6000,
      "type": "bugfix",
      "body": "Occassionally -> Occasionally\r\n\r\n\r\n",
      "files": [
        "packages/cli/src/commands/scenario/docs/README.md"
      ]
    },
    {
      "title": "feat: Add mentionContext interface and improve shouldRespond logic",
      "prNumber": 6030,
      "type": "feature",
      "body": "# Relates to\r\n\r\nIssue discussing the need for platform-agnostic mention detection\r\n\r\n# Risks\r\n\r\n**Medium Risk**\r\n- Changes core message flow logic in bootstrap\r\n- Modifies shouldRespond template and provider\r\n- Affects LLM decision-making f",
      "files": [
        "bun.lock",
        "packages/core/src/__tests__/prompts.test.ts",
        "packages/core/src/prompts.ts",
        "packages/core/src/types/primitives.ts",
        "packages/plugin-bootstrap/src/__tests__/logic.test.ts",
        "packages/plugin-bootstrap/src/index.ts",
        "packages/plugin-bootstrap/src/providers/shouldRespond.ts",
        "packages/plugin-bootstrap/src/providers/index.ts"
      ]
    },
    {
      "title": "feat(plugin-sql): add offset parameter to getMemories for database-le…",
      "prNumber": 6032,
      "type": "feature",
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Adds an optional offset to getMemories for pagination, applies limit/offset in SQL, validates non-negative values, and adds integration tests covering paging and edge cases.\n> \n> - **Core**:\n>   - Add `of",
      "files": [
        "packages/core/src/database.ts",
        "packages/core/src/types/database.ts",
        "packages/plugin-sql/src/__tests__/integration/memory.test.ts",
        "packages/plugin-sql/src/base.ts"
      ]
    },
    {
      "title": "fix: agent plugins not reloading on PATCH update and service stop race condition",
      "prNumber": 6040,
      "type": "bugfix",
      "body": "# Relates to\r\n\r\nFixes issue where agent plugins/services are not properly updated when using PATCH endpoint to modify agent configuration, and fixes race condition causing service initialization errors during agent restart.\r\n\r\n# Risks\r\n\r\n**",
      "files": [
        "bun.lock",
        "packages/server/src/api/agents/crud.ts",
        "packages/server/src/index.ts",
        "packages/server/src/__tests__/agent-plugin-reload.test.ts",
        "packages/server/src/__tests__/agent-server-constructor.test.ts",
        "packages/server/src/__tests__/agent-server-management.test.ts"
      ]
    },
    {
      "title": "support SERVER_PORT",
      "prNumber": 6038,
      "type": "other",
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Add support for SERVER_PORT to configure the HTTP server port (falls back to --port or 3000).\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit 43fe2b28976eb02a14595",
      "files": [
        "packages/cli/src/commands/start/index.ts"
      ]
    },
    {
      "title": "fix: port validate",
      "prNumber": 6046,
      "type": "bugfix",
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Improve port resolution in `start` by validating CLI `--port`, parsing `SERVER_PORT` with `validatePort`, and falling back to `3000` with a warning if invalid.\n> \n> <sup>Written by [Cursor Bugbot](https:/",
      "files": [
        "packages/cli/src/commands/start/index.ts"
      ]
    },
    {
      "title": "fix: expose state cache and fix bootstrap types",
      "prNumber": 6045,
      "type": "bugfix",
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Expose runtime stateCache and refactor bootstrap multistep/type usage to consume it, with minor prompt and provider access fixes.\n> \n> - **Core**:\n>   - Expose `stateCache: Map<string, State>` on `IAgentR",
      "files": [
        "packages/core/src/prompts.ts",
        "packages/core/src/types/runtime.ts",
        "packages/plugin-bootstrap/src/index.ts"
      ]
    },
    {
      "title": "feat(core): improve character schema validation with comprehensive Zod schemas",
      "prNumber": 6044,
      "type": "feature",
      "body": "## Summary\n\nThis PR significantly improves the character schema validation system by adding comprehensive Zod schema definitions with detailed descriptions and better type safety.\n\n## Changes Made\n\n### Schema Improvements (packages/core/src",
      "files": [
        "packages/core/src/__tests__/character-validation.test.ts",
        "packages/core/src/schemas/character.ts"
      ]
    },
    {
      "title": "fix: handle when bool is passed into parseBooleanFromText",
      "prNumber": 6042,
      "type": "bugfix",
      "body": "Sometimes getSetting returns a bool, and sometimes it doesn't (like when you use `'YES', 'Y', 'T', '1', 'ON', 'ENABLE'`)\r\n\r\n<!-- CURSOR_SUMMARY -->\r\n> [!NOTE]\r\n> `parseBooleanFromText` now returns boolean inputs directly instead of treating",
      "files": [
        "packages/core/src/utils.ts"
      ]
    },
    {
      "title": "fix: fix BOOTSTRAP_KEEP_RESP",
      "prNumber": 6041,
      "type": "bugfix",
      "body": "make sure BOOTSTRAP_KEEP_RESP works even if not ignored\n\n<!-- CURSOR_SUMMARY -->\n---\n\n> [!NOTE]\n> Applies `BOOTSTRAP_KEEP_RESP` to both reply and ignore paths to prevent discarding responses when newer messages arrive.\n> \n> - **Message hand",
      "files": [
        "packages/plugin-bootstrap/src/index.ts"
      ]
    }
  ],
  "topContributors": [
    {
      "username": "standujar",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16385918?u=718bdcd1585be8447bdfffb8c11ce249baa7532d&v=4",
      "totalScore": 133.65462865292426,
      "prScore": 123.91462865292425,
      "issueScore": 0,
      "reviewScore": 9,
      "commentScore": 0.74,
      "summary": null
    },
    {
      "username": "0xbbjoker",
      "avatarUrl": "https://avatars.githubusercontent.com/u/54844437?u=90fe1762420de6ad493a1c1582f1f70c0d87d8e2&v=4",
      "totalScore": 106.38691691103718,
      "prScore": 105.50691691103717,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.8799999999999999,
      "summary": null
    },
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 90.31449268984147,
      "prScore": 83.87649268984147,
      "issueScore": 0,
      "reviewScore": 6,
      "commentScore": 0.43799999999999994,
      "summary": null
    },
    {
      "username": "odilitime",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16395496?u=c9bac48e632aae594a0d85aaf9e9c9c69b674d8b&v=4",
      "totalScore": 71.80625912988502,
      "prScore": 66.60625912988502,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "tcm390",
      "avatarUrl": "https://avatars.githubusercontent.com/u/60634884?u=c6c41679b8322eaa0c81f72e0b4ed95e80f0ac16&v=4",
      "totalScore": 56.505057291354944,
      "prScore": 51.505057291354944,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "letmehateu",
      "avatarUrl": "https://avatars.githubusercontent.com/u/133153661?u=2217cec1ebd7bf22a8e4e3ace28b3183720dd444&v=4",
      "totalScore": 10.84871895621705,
      "prScore": 10.648718956217051,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": null
    }
  ],
  "newPRs": 16,
  "mergedPRs": 10,
  "newIssues": 0,
  "closedIssues": 7,
  "activeContributors": 10
}
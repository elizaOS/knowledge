{
  "interval": {
    "intervalStart": "2025-10-12T00:00:00.000Z",
    "intervalEnd": "2025-10-19T00:00:00.000Z",
    "intervalType": "week"
  },
  "repository": "elizaos/eliza",
  "overview": "From 2025-10-12 to 2025-10-19, elizaos/eliza had 7 new PRs (5 merged), 2 new issues, and 9 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDOMT5cIs7Ki91T",
      "title": "Direct API Calls",
      "author": "borisudovicic",
      "number": 5923,
      "repository": "elizaos/eliza",
      "body": "* Implement agent.generate(input) as a Promise-based API.\n* Add variants that include/exclude character personality.",
      "createdAt": "2025-09-09T12:14:52Z",
      "closedAt": "2025-10-14T15:24:02Z",
      "state": "CLOSED",
      "commentCount": 2
    },
    {
      "id": "I_kwDOMT5cIs7RGLr3",
      "title": "[DOCS] Every plugin link in docs leads to a 404",
      "author": "douglasg14b",
      "number": 6061,
      "repository": "elizaos/eliza",
      "body": "https://docs.elizaos.ai/plugin-registry/overview#core-plugins\n\nClicking on plugins goes to: https://docs.elizaos.ai/plugins/bootstrap\n\n<img width=\"1608\" height=\"1013\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/857c53a2-7491-4308-b2e6-1fe40b3b7af8\" />",
      "createdAt": "2025-10-13T00:01:19Z",
      "closedAt": "2025-10-14T13:11:35Z",
      "state": "CLOSED",
      "commentCount": 2
    },
    {
      "id": "I_kwDOMT5cIs7F0i3j",
      "title": "Eigencloud POC",
      "author": "borisudovicic",
      "number": 5768,
      "repository": "elizaos/eliza",
      "body": "This service offers a *deterministic* OpenAI-compliant LLM inference endpoint that can be used via multiple clients. A couple of key points:\n\n* By OpenAI compliancy we specifically mean the messages-based Chat Completions API: [https://platform.openai.com/docs/api-reference/chat/create](https://platform.openai.com/docs/api-reference/chat/create),\n* By ‚Äúdeterministic‚Äù we specifically mean that one request (prompt, parameters, etc) provided to the API multiple times will produce the **same** output.\n  * For eg. setting a different seed but otherwise keeping the request the same will produce a different output.\n\n## curl\n\n```\ncurl -s -X POST http://192.222.58.254:8001/v1/chat/completions \\\n-H \"Content-Type: application/json\" \\\n-d '{\n  \"model\": \"gemma-3-27b-it\",\n  \"max_completion_tokens\": 120,\n  \"seed\": 42,\n  \"messages\": [{\"role\": \"user\", \"content\": \"Write a story about programming\"}]\n}' | jq\n```\n\n### Streaming response\n\n```\ncurl -s -X POST http://192.222.58.254:8001/v1/chat/completions \\\n-H \"Content-Type: application/json\" \\\n-d '{\n  \"model\": \"gemma-3-27b-it\",\n  \"max_completion_tokens\": 120,\n  \"seed\": 42,\n  \"stream\": true,\n  \"messages\": [{\"role\": \"user\", \"content\": \"Write a story about programming\"}]\n}'\n```\n\n## Vercel AI SDK\n\n[https://ai-sdk.dev/docs/introduction](https://ai-sdk.dev/docs/introduction)\n\n```\nimport { generateText } from 'ai';\nimport { createOpenAI } from '@ai-sdk/openai';\n\nconst config = {\n  baseURL: 'http://192.222.58.254:8001/v1',\n  apiKey: 'sk-dummy-custom-key',\n  model: 'gemma-3-27b-it'\n};\n\n// Create a custom OpenAI client instance\nconst customOpenAI = createOpenAI({\n  baseURL: config.baseURL,\n  apiKey: config.apiKey,\n});\n\n// Create the model instance using the custom client\nconst model = customOpenAI(config.model);\n\nasync function chatCompletion() {\n  console.log('\\nüí¨ Testing chat completion...');\n  \n  try {\n    const result = await generateText({\n      model: model,\n      messages: [\n        { role: 'system', content: 'You are a helpful assistant.' },\n        { role: 'user', content: 'What are the benefits of using local AI models?' }\n      ],\n      seed: 42\n    });\n\n    console.log('‚úÖ Chat response:');\n    console.log(result.text);\n  } catch (error) {\n    console.error('‚ùå Error with chat completion:');\n    console.error(error.message);\n  }\n}\n\n// Main execution\nasync function main() {\n  console.log('EigenAI usage via Vercel AI SDK\\n');\n  console.log('=' + '='.repeat(49));\n  \n  console.log(`\\nüîß Configuration:`);\n  console.log(`   Service: EigenAI`);\n  console.log(`   Base URL: ${config.baseURL}`);\n  console.log(`   Model: ${config.model}`);\n  console.log(`   API Key: ${config.apiKey.substring(0, 10)}...`);\n  \n  await chatCompletion();\n}\n\nmain().catch(console.error);\n```",
      "createdAt": "2025-08-13T15:21:30Z",
      "closedAt": "2025-10-15T14:50:04Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7KjCY9",
      "title": "Refactors & Core Alignment",
      "author": "borisudovicic",
      "number": 5933,
      "repository": "elizaos/eliza",
      "body": "* Refactor server code to call ElizaOS global functions instead of custom logic.\n* Decouple bootstrap logic from CLI (bootstrap only in core).\n* Remove CLI ‚Äúserver-start‚Äù embedding.\n* Clean up modular loaders and resolution hacks.\n* Strip dead code paths from server startup.",
      "createdAt": "2025-09-09T12:19:15Z",
      "closedAt": "2025-10-16T07:37:11Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7Rfu3S",
      "title": "Add n1n.ai API as a model provider",
      "author": "n1n-api",
      "number": 6064,
      "repository": "elizaos/eliza",
      "body": "Hi Eliza team,\n\nWe're n1n API, and we offer a robust API that provides access to 400+ large language models (LLMs), as well as multimodal generation capabilities (text, images, video, audio, etc.). Our platform makes it easy to integrate these advanced features into your project, empowering developers with powerful AI tools.\n\nWith n1n API, you can quickly leverage a comprehensive suite of AI models for diverse applications‚Äîeverything from text generation to media synthesis‚Äîthrough simple, easy-to-use endpoints.\n\nAdding n1n API would benefit Eliza users by:\n\n- Providing access to 400+ models through a single API key configuration\n- Supporting all major models (OpenAI, Anthropic, Gemini, Llama, and many more)\n- Offering competitive pricing with unified billing (some are lowest to 1/10 of the official price)\n- Enabling easy model switching for different assistants without managing multiple API keys\n\n### Describe the solution you'd like\n\nIntegrate n1n API as an additional AI model provider in Eliza. n1n API is OpenAI-compatible (base URL: https://n1n.ai/v1/) and offers extended multimodal generation capabilities beyond standard text completion, including image, video, and audio generation endpoints.\n\n### Resources\n\nWebsite: https://n1n.ai/\nAPI Documentation: https://docs.n1n.ai/\nDashboard: https://n1n.ai/console\nSupport: [help@n1n.ai](mailto:help@n1n.ai)\n\nWe are excited to contribute to the Eliza ecosystem and provide users with access to the latest AI models through our robust API platform. We look forward to collaborating with the Eliza maintainers and community to make this integration successful.",
      "createdAt": "2025-10-14T16:54:32Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 0
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDOMT5cIs6tQLtD",
      "title": "elizaos deploy r2 artifacts style",
      "author": "ChristopherTrimboli",
      "number": 6058,
      "body": "## Overview\r\n\r\nThis PR completely migrates the ElizaOS CLI deployment system from traditional Docker image builds to a modern bootstrapper architecture. This change significantly improves deployment speed, reduces resource usage, and eliminates platform size limitations.\r\n\r\n## What Changed\r\n\r\n### üöÄ New Bootstrapper Architecture\r\n\r\n**Added:**\r\n- `deploy-bootstrapper.ts` - Core bootstrapper deployment logic\r\n- `artifact.ts` - Artifact creation and management utilities\r\n- `r2-client.ts` - R2 storage client for future direct operations\r\n- Bootstrapper Dockerfile template and entrypoint script\r\n- Support for deterministic artifact creation with `.gitignore` respect\r\n\r\n**Key Features:**\r\n- Creates lightweight tar.gz artifacts (typically <50MB vs 500MB+ Docker images)\r\n- Uploads artifacts to Cloudflare R2 via secure API\r\n- Uses minimal shared bootstrapper image (~100MB)\r\n- Fetches project code at container startup\r\n- Supports both Bun and npm lockfiles\r\n- Implements SHA256 checksum verification\r\n\r\n### üóëÔ∏è Removed Legacy Docker Code\r\n\r\n**Deleted:**\r\n- `utils/docker.ts` - All Docker build/export utilities (~280 lines)\r\n- `deployWithDocker()` function (~300 lines)\r\n- Docker-specific CLI options (`--use-docker`, `--tag`, `--no-build`)\r\n- Dockerfile generation and management code\r\n\r\n### üì¶ Dependencies\r\n\r\n**Added:**\r\n- `tar` - For creating compressed archives\r\n- `ignore` - For respecting .gitignore rules\r\n- `node-fetch` - For HTTP operations\r\n- `form-data` - For multipart uploads\r\n\r\n## Why This Change?\r\n\r\n### Problems with Old Approach:\r\n- **Size Limits**: Docker images often exceeded 500MB-2GB, hitting platform limits\r\n- **Slow Uploads**: Uploading entire Docker images was bandwidth-intensive\r\n- **Version Conflicts**: Single Docker image could break older projects\r\n- **Resource Waste**: Duplicated base layers for every deployment\r\n\r\n### Benefits of Bootstrapper:\r\n- **10x Smaller Uploads**: Only project code, not entire OS/runtime\r\n- **Faster Deployments**: 30-60s vs 5-10 minutes\r\n- **Version Isolation**: Each project maintains its own dependencies\r\n- **Better Caching**: Shared base image, project-specific dependencies\r\n- **Platform Friendly**: Works within Cloudflare's 50GB limits\r\n\r\n## Technical Implementation\r\n\r\n### Deployment Flow:\r\n1. **Artifact Creation**\r\n   ```typescript\r\n   // Creates deterministic tar.gz with project files\r\n   const artifact = await createArtifact({\r\n     projectPath: cwd,\r\n     outputPath: artifactPath,\r\n     excludePatterns: ['.git', 'node_modules', '.env'],\r\n     deterministic: true\r\n   });\r\n   ```\r\n\r\n2. **Upload to R2**\r\n   ```typescript\r\n   // Uploads via Cloud API with checksum verification\r\n   const uploadResponse = await apiClient.uploadArtifact({\r\n     projectId: projectName,\r\n     version: projectVersion,\r\n     checksum: artifactChecksum,\r\n     size: artifactSize,\r\n     artifactPath\r\n   });\r\n   ```\r\n\r\n3. **Container Deployment**\r\n   ```typescript\r\n   // Deploys bootstrapper with artifact URL\r\n   const containerConfig = {\r\n     image_tag: \"elizaos/bootstrapper:latest\",\r\n     environment_vars: {\r\n       R2_ARTIFACT_URL: artifactData.artifactUrl,\r\n       R2_TOKEN: artifactData.token,\r\n       R2_ARTIFACT_CHECKSUM: artifactChecksum,\r\n       START_CMD: \"bun run start\"\r\n     }\r\n   };\r\n   ```\r\n\r\n### Bootstrapper Runtime:\r\n- Alpine Linux base with Bun pre-installed\r\n- Downloads artifact using one-time scoped token\r\n- Verifies SHA256 checksum\r\n- Extracts project files\r\n- Installs dependencies from lockfile\r\n- Executes START_CMD\r\n\r\n## Breaking Changes\r\n\r\n‚ö†Ô∏è **Removed CLI Options:**\r\n- `--use-docker` - No longer supported\r\n- `--tag` - Not applicable to bootstrapper\r\n- `--no-build` - Build happens in container\r\n- `--dockerfile` - Bootstrapper uses standard image\r\n\r\n**Migration Guide:**\r\n```bash\r\n# Old (no longer works)\r\nelizaos deploy --use-docker --tag my-image:v1\r\n\r\n# New (default behavior)\r\nelizaos deploy\r\n\r\n# With existing artifact\r\nelizaos deploy --skip-artifact --artifact-path ./dist/artifact.tar.gz\r\n```\r\n\r\n## Testing\r\n\r\n### Manual Testing:\r\n- ‚úÖ Deployed sample project with bootstrapper\r\n- ‚úÖ Verified artifact creation and upload\r\n- ‚úÖ Confirmed container starts and runs correctly\r\n- ‚úÖ Tested with both Bun and npm projects\r\n- ‚úÖ Validated checksum verification\r\n- ‚úÖ Tested artifact cleanup (keeps last 3)\r\n\r\n### Performance Comparison:\r\n| Metric | Docker Mode | Bootstrapper |\r\n|--------|------------|--------------|\r\n| Artifact Size | 500MB-2GB | 10-50MB |\r\n| Upload Time | 2-10 min | 10-30 sec |\r\n| Total Deploy Time | 5-15 min | 1-2 min |\r\n| Storage Used | 2GB/deploy | 50MB/deploy |\r\n\r\n   // Uploads via Cloud API with checksum verification\r\n   const uploadResponse = await apiClient.uploadArtifact({\r\n     projectId: projectName,\r\n     version: projectVersion,\r\n     checksum: artifactChecksum,\r\n     size: artifactSize,\r\n     artifactPath\r\n   });nged\r\n\r\n### üöÄ New Artifact Management System\r\n\r\n**Added Endpoints:**\r\n- `POST /api/v1/artifacts/upload` - Request presigned URL and upload artifacts\r\n- `GET /api/v1/artifacts` - List project artifacts\r\n\r\n**Database Changes:**\r\n- New `artifacts` table with organization/project/version tracking\r\n- Unique constraint on version per project\r\n- Indexes for efficient querying\r\n\r\n**Key Features:**\r\n- Presigned S3 URLs for direct R2 uploads\r\n- SHA256 checksum verification\r\n- 10MB artifact size limit (configurable)\r\n- Artifact metadata storage (Eliza version, Node version, etc.)\r\n- One-time scoped token generation for secure retrieval\r\n\r\n### üîÑ Container Route Updates\r\n\r\n**Modified:**\r\n- Added bootstrapper fields to container schema\r\n- Default to bootstrapper mode (`use_bootstrapper: true`)\r\n- Store artifact metadata in container record\r\n- Pass bootstrapper config to Cloudflare deployment\r\n\r\n**Schema Changes:**\r\n```typescript\r\nconst createContainerSchema = z.object({\r\n  name: z.string(),\r\n  port: z.number(),\r\n  environment_vars: z.record(z.string()),\r\n  \r\n  // New bootstrapper fields\r\n  use_bootstrapper: z.boolean().default(true),\r\n  artifact_url: z.string().optional(),\r\n  artifact_checksum: z.string().optional(),\r\n  image_tag: z.string().default(\"elizaos/bootstrapper:latest\")\r\n});\r\n```\r\n\r\n### üóëÔ∏è Deprecated Legacy Endpoints\r\n\r\n**Marked as Deprecated:**\r\n- `POST /api/v1/containers/upload-image` - Docker image upload\r\n- `CloudflareService.uploadImage()` - Docker upload method\r\n\r\nThese remain functional with deprecation warnings for backward compatibility.\r\n\r\n## Technical Implementation\r\n\r\n### Artifact Upload Flow:\r\n\r\n1. **Request Upload URL**\r\n   ```typescript\r\n   // Client requests presigned URL\r\n   POST /api/v1/artifacts/upload\r\n   {\r\n     projectId: \"my-project\",\r\n     version: \"1.0.0\",\r\n     checksum: \"sha256...\",\r\n     size: 1048576\r\n   }\r\n   ```\r\n\r\n2. **Generate Presigned URL**\r\n   ```typescript\r\n   // Server creates S3 presigned URL for R2\r\n   const putCommand = new PutObjectCommand({\r\n     Bucket: process.env.R2_BUCKET_NAME,\r\n     Key: `artifacts/${org}/${project}/${version}/${id}.tar.gz`,\r\n     ContentType: 'application/gzip',\r\n     ContentLength: size,\r\n     ChecksumSHA256: checksum\r\n   });\r\n   \r\n   const uploadUrl = await getSignedUrl(r2Client, putCommand, {\r\n     expiresIn: 600 // 10 minutes\r\n   });\r\n   ```\r\n\r\n3. **Store Metadata**\r\n   ```typescript\r\n   // Save artifact record\r\n   await db.insert(artifacts).values({\r\n     id: artifactId,\r\n     organization_id: user.organization_id,\r\n     project_id: projectId,\r\n     version,\r\n     checksum,\r\n     size,\r\n     r2_key,\r\n     r2_url: publicUrl,\r\n     metadata,\r\n     created_by: user.id\r\n   });\r\n   ```\r\n\r\n### Container Deployment:\r\n\r\n```typescript\r\n// Deploy with bootstrapper configuration\r\nconst deployment = await cloudflare.deployContainer({\r\n  name: config.name,\r\n  imageTag: \"elizaos/bootstrapper:latest\",\r\n  port: config.port,\r\n  environmentVars: {\r\n    ...config.environment_vars,\r\n    R2_ARTIFACT_URL: config.artifact_url,\r\n    R2_TOKEN: generatedToken,\r\n    R2_ARTIFACT_CHECKSUM: config.artifact_checksum\r\n  }\r\n});\r\n```\r\n\r\n## Database Migration\r\n\r\n```sql\r\n-- 0006_add_artifacts_table.sql\r\nCREATE TABLE IF NOT EXISTS artifacts (\r\n  id TEXT PRIMARY KEY,\r\n  organization_id TEXT NOT NULL,\r\n  project_id TEXT NOT NULL,\r\n  version TEXT NOT NULL,\r\n  checksum TEXT NOT NULL,\r\n  size INTEGER NOT NULL,\r\n  r2_key TEXT NOT NULL,\r\n  r2_url TEXT NOT NULL,\r\n  metadata JSONB DEFAULT '{}',\r\n  created_by TEXT NOT NULL,\r\n  created_at TIMESTAMP DEFAULT NOW() NOT NULL\r\n);\r\n\r\nCREATE INDEX idx_artifacts_org_project ON artifacts(organization_id, project_id);\r\nCREATE INDEX idx_artifacts_project_version ON artifacts(project_id, version);\r\nCREATE UNIQUE INDEX uniq_artifact_version ON artifacts(organization_id, project_id, version);\r\n```\r\n\r\n## Environment Variables\r\n\r\n**New Required Variables:**\r\n```bash\r\n# R2 Storage Configuration\r\nR2_ACCOUNT_ID=your_cloudflare_account_id\r\nR2_ACCESS_KEY_ID=your_r2_access_key\r\nR2_SECRET_ACCESS_KEY=your_r2_secret_key\r\nR2_BUCKET_NAME=elizaos-artifacts\r\nR2_PUBLIC_DOMAIN=artifacts.elizacloud.ai  # Optional custom domain\r\n```\r\n\r\n## Security Considerations\r\n\r\n- ‚úÖ Presigned URLs expire after 10 minutes\r\n- ‚úÖ One-time tokens for artifact retrieval\r\n- ‚úÖ SHA256 checksum verification on upload and download\r\n- ‚úÖ Organization-scoped artifact isolation\r\n- ‚úÖ Size limits to prevent abuse (10MB default)\r\n\r\n## Performance Impact\r\n\r\n### Metrics:\r\n| Operation | Old (Docker) | New (Bootstrapper) |\r\n|-----------|-------------|-------------------|\r\n| Upload Size | 500MB-2GB | 10-50MB |\r\n| API Processing | 30-60s | <1s |\r\n| Storage Cost | High | 95% reduction |\r\n| Network Usage | High | 90% reduction |\r\n\r\n### Load Testing:\r\n- Handled 100 concurrent artifact uploads\r\n- Average upload time: 5 seconds\r\n- No performance degradation observed\r\n\r\n## Breaking Changes\r\n\r\n‚ö†Ô∏è **Default Behavior Change:**\r\n- Containers now default to bootstrapper mode\r\n- `use_bootstrapper` defaults to `true` instead of `false`\r\n\r\n**Backward Compatibility:**\r\n- Legacy Docker endpoints remain functional with warnings\r\n- Existing containers continue to work\r\n- Gradual migration path available\r\n\r\n## Testing\r\n\r\n- ‚úÖ Artifact upload with checksum validation\r\n- ‚úÖ Presigned URL generation and expiry\r\n- ‚úÖ Container deployment with bootstrapper\r\n- ‚úÖ Legacy endpoint deprecation warnings\r\n- ‚úÖ Database migration rollback tested\r\n- ‚úÖ R2 connectivity and error handling\r\n",
      "repository": "elizaos/eliza",
      "createdAt": "2025-10-11T15:13:37Z",
      "mergedAt": "2025-10-12T22:19:46Z",
      "additions": 2170,
      "deletions": 135
    },
    {
      "id": "PR_kwDOMT5cIs6uKQsE",
      "title": "refactor(tests): Move character builder logic to core",
      "author": "standujar",
      "number": 6069,
      "body": "\n- Move buildCharacterPlugins() to core (business logic)\n\n- Keep Eliza character to cli\n\n- Remove duplicate code from server\n\n- Add 27 tests on core",
      "repository": "elizaos/eliza",
      "createdAt": "2025-10-16T19:42:50Z",
      "mergedAt": null,
      "additions": 821,
      "deletions": 910
    },
    {
      "id": "PR_kwDOMT5cIs6tbn-u",
      "title": "feat(core): implement generateText() API",
      "author": "tylermcwilliams",
      "number": 6062,
      "body": "## Overview\r\nImplements the `generateText()` Promise-based API for simple text generation as discussed in #5923.\r\n\r\n## Discussion Context\r\nPer conversation with @0xbbjoker in #5923:\r\n- Named `generateText()` (not `generate()`) to clarify it's text-only generation\r\n- Supports optional character personality injection via `includeCharacter` flag  \r\n- Returns structured `{ text: string }` for future extensibility\r\n\r\n## Implementation Details\r\n\r\n### API Surface\r\n```typescript\r\nasync generateText(\r\n  input: string,\r\n  options?: GenerateTextOptions\r\n): Promise<GenerateTextResult>\r\n```\r\n\r\n### Key Features\r\n- **Character personality injection** - Defaults to including character bio/system/style in prompt (opt-out with `includeCharacter: false`)\r\n- **Model selection** - Defaults to `TEXT_LARGE`, supports all text generation model types\r\n- **Parameter pass-through** - Temperature, maxTokens, etc. from `GenerateTextParams`\r\n- **Structured return** - `{ text: string }` format allows future additions without breaking changes\r\n\r\n### Implementation\r\n- Added `GenerateTextOptions` and `GenerateTextResult` types to `model.ts`\r\n- Added `generateText()` method signature to `IAgentRuntime` interface in `runtime.ts`\r\n- Implemented method in `AgentRuntime` class - builds character context from bio/system/style, calls `useModel()` with constructed prompt\r\n- No breaking changes to existing APIs\r\n\r\n## Testing\r\n- ‚úÖ Full example demonstrating usage patterns (`examples/generate-text.ts`)\r\n- ‚úÖ All builds passing locally\r\n\r\n## Example Usage\r\n\r\nSee `examples/generate-text.ts` for a complete working example with Shakespeare character.\r\n\r\n### With Character Personality (Default)\r\n```typescript\r\nconst result = await runtime.generateText(\r\n  \"What do you think about artificial intelligence?\"\r\n);\r\n// Response will be with personality\r\n```\r\n\r\n### Without Character (Utility Mode)\r\n```typescript\r\nconst result = await runtime.generateText(\r\n  \"Translate to Spanish: Hello, how are you?\", \r\n  { includeCharacter: false }\r\n);\r\n// Raw translation without personality\r\n```\r\n\r\n### Custom Parameters\r\n```typescript\r\nconst result = await runtime.generateText(\r\n  \"Write a haiku about coding\",\r\n  { \r\n    temperature: 0.9,\r\n    maxTokens: 100\r\n  }\r\n);\r\n// More creative output with temperature bump\r\n```\r\n\r\n## Related\r\n- Closes #5923\r\n\r\n## Checklist\r\n- [x] Example provided and tested\r\n- [x] Builds without errors\r\n- [x] No breaking changes",
      "repository": "elizaos/eliza",
      "createdAt": "2025-10-13T10:36:49Z",
      "mergedAt": "2025-10-14T15:24:01Z",
      "additions": 398,
      "deletions": 1
    },
    {
      "id": "PR_kwDOMT5cIs6tQqot",
      "title": "feat(cli): Simplify CLI to use server / core",
      "author": "standujar",
      "number": 6060,
      "body": "## üéØ Phase: CLI Cleanup\r\n\r\n**Status**: üü° Draft\r\n**Priority**: MEDIUM - Proper architecture  \r\n**Breaking**: No  \r\n\r\n---\r\n\r\n## üìã Summary\r\n\r\nThis PR removes massive duplication from the CLI by deleting the custom module-loader and using published packages (`@elizaos/server`, `@elizaos/core`) directly.\r\n\r\n### Impact\r\n- üìâ **237 lines deleted** (module-loader.ts + tests)\r\n- üéØ **Zero duplication**: CLI uses published packages only\r\n- ‚úÖ **Proper separation**: CLI = command parsing + file loading\r\n- ‚úÖ **All builds pass**: 14/14 packages build successfully\r\n\r\n---\r\n\r\n## üîß Changes\r\n\r\n### 1. Delete Module Loader ‚ùå (237 lines removed!)\r\n- Deleted `packages/cli/src/utils/module-loader.ts` (236 lines)\r\n- Deleted `packages/cli/src/utils/module-loader.test.ts`\r\n- Updated `packages/cli/src/utils/index.ts` (removed export)\r\n\r\n**Why?** The module loader was a hack to dynamically require plugins. We moved all config/plugin logic to Core, so we don't need it anymore.\r\n\r\n### 2. Simplify CLI Commands ‚úÖ\r\n\r\n**commands/start/index.ts**\r\n```diff\r\n- import { getModuleLoader } from '@/src/utils/module-loader';\r\n+ import { AgentServer, loadCharacterTryPath } from '@elizaos/server';\r\n\r\n- const moduleLoader = getModuleLoader();\r\n- const { AgentServer } = await moduleLoader.load('@elizaos/server');\r\n- const { loadCharacterTryPath } = serverModule;\r\n+ // Direct imports - no dynamic loading needed!\r\n```\r\n\r\n**commands/scenario/src/runtime-factory.ts**\r\n```diff\r\n- import { setDefaultSecretsFromEnv } from '@elizaos/core';\r\n- await setDefaultSecretsFromEnv(character);\r\n+ // ElizaOS.addAgents() now handles secrets automatically\r\n```\r\n\r\n**commands/scenario/src/plugin-parser.ts**\r\n```diff\r\n- const moduleLoader = getModuleLoader();\r\n- const { PluginLoader } = await moduleLoader.load('@elizaos/server');\r\n- const loader = new PluginLoader();\r\n- const loadedPlugin = await loader.loadAndPreparePlugin(plugin.name);\r\n+ // Plugin loading delegated to ElizaOS/AgentServer\r\n+ // Just validate the plugin reference here\r\n```\r\n\r\n---\r\n\r\n## üèóÔ∏è Architecture Now\r\n\r\n```\r\nCLI Layer (thin)\r\n  ‚îú‚îÄ Command parsing (Commander.js)\r\n  ‚îú‚îÄ File loading (characters, .env)\r\n  ‚îî‚îÄ Delegation to @elizaos/server\r\n      ‚îî‚îÄ AgentServer\r\n          ‚îî‚îÄ ElizaOS (from @elizaos/core)\r\n              ‚îî‚îÄ Config + Plugin + Secrets Management\r\n```\r\n\r\n**Clean Separation**:\r\n- **CLI**: Parse commands ‚Üí Load files ‚Üí Call Server\r\n- **Server**: HTTP + WebSocket + Agent orchestration\r\n- **Core**: ElizaOS + Config + Plugins + Secrets\r\n\r\n---\r\n\r\n## ‚úÖ Testing\r\n\r\n### Builds\r\n```bash\r\nbun run build\r\n# ‚úÖ 14/14 packages build successfully\r\n```\r\n\r\n### Manual Testing\r\n- ‚úÖ CLI imports are direct (no module-loader)\r\n- ‚úÖ start command works\r\n- ‚úÖ project-starter templates unaffected\r\n\r\n### Automated Tests\r\n- üü° CLI tests running (some timeout, investigating)\r\n- ‚úÖ Core tests: 541 passing\r\n- ‚úÖ Server tests: 38 passing\r\n\r\n---\r\n\r\n## üìã Tasks Status\r\n\r\n- [x] **Task 1**: Remove Embedded Server ‚úÖ\r\n- [x] **Task 2**: Delete Module Loader ‚úÖ\r\n- [ ] **Task 3**: Use Core Configuration üü° In Progress\r\n- [ ] **Task 4**: Improve Server API üü° In Progress\r\n- [ ] **Task 5**: Update Tests üü° In Progress\r\n\r\n---\r\n\r\n## üîó Related\r\n\r\n- **Depends on**: Config & Plugin in Core ‚úÖ Merged\r\n\r\n---\r\n\r\n## üìù Notes for Reviewers\r\n\r\n### Key Points\r\n1. **No breaking changes** - CLI commands work identically\r\n2. **237 lines deleted** - Massive code reduction\r\n3. **Proper architecture** - CLI is now a thin layer\r\n4. **Dependencies verified** - `@elizaos/server` already in package.json\r\n\r\n### Areas to Review\r\n- [ ] CLI start command still works as expected\r\n- [ ] Direct imports from @elizaos/server are correct\r\n- [ ] No regression in character loading\r\n- [ ] project-starter templates still work",
      "repository": "elizaos/eliza",
      "createdAt": "2025-10-11T16:51:07Z",
      "mergedAt": "2025-10-16T06:09:54Z",
      "additions": 337,
      "deletions": 1073
    },
    {
      "id": "PR_kwDOMT5cIs6t47Ks",
      "title": "feat(cli): add Eigen TEE wrapper",
      "author": "wtfsayo",
      "number": 6065,
      "body": "## Summary\n- add Eigen CLI wrapper to tee command for TEE deployments\n- provide consented installation flow and PATH detection for Eigen binaries\n\n## Testing\n- manual: \n  - bun run eliza/packages/cli/dist/index.js tee eigen (prompts, installs, re-run)\n\n<!-- CURSOR_SUMMARY -->\n---\n\n> [!NOTE]\n> Adds `tee eigen` wrapper that proxies to `eigenx`, with auto-detect/consented install and PATH handling.\n> \n> - **CLI (TEE)**:\n>   - **New `eigen` wrapper** in `packages/cli/src/commands/tee/eigen-wrapper.ts`:\n>     - Proxies args to `eigenx`/`eigenx-dev`, resolves binary via env/known paths, and augments `PATH`.\n>     - Interactive or env-driven consented install via curl if binary missing; robust error handling and logging.\n>     - Pass-through execution with inherited stdio; custom help output and examples.\n>   - **Integration**: Adds `.addCommand(eigenCliCommand)` in `packages/cli/src/commands/tee/index.ts`.}\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit 75980ffcb55a17a77f8c12672448139a0db7ab0b. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-10-15T13:41:16Z",
      "mergedAt": "2025-10-15T17:34:53Z",
      "additions": 246,
      "deletions": 1
    }
  ],
  "codeChanges": {
    "additions": 3709,
    "deletions": 1311,
    "files": 53,
    "commitCount": 54
  },
  "completedItems": [
    {
      "title": "fix(plugins): use correct ZodError.issues API instead of .errors",
      "prNumber": 6035,
      "type": "bugfix",
      "body": "- Changed error.errors to error.issues to match ZodError API\r\n- Fixed error handling in plugin-starter and project-starter\r\n- Added proper error handling for non-ZodError cases\r\n- Ensures consistency with plugin-quick-starter implementation",
      "files": [
        "packages/plugin-quick-starter/src/__tests__/plugin.test.ts",
        "packages/plugin-quick-starter/src/plugin.ts",
        "packages/plugin-starter/src/plugin.ts",
        "packages/project-starter/src/plugin.ts"
      ]
    },
    {
      "title": "feat(cli): Simplify CLI to use server / core",
      "prNumber": 6060,
      "type": "feature",
      "body": "## üéØ Phase: CLI Cleanup\r\n\r\n**Status**: üü° Draft\r\n**Priority**: MEDIUM - Proper architecture  \r\n**Breaking**: No  \r\n\r\n---\r\n\r\n## üìã Summary\r\n\r\nThis PR removes massive duplication from the CLI by deleting the custom module-loader and using pu",
      "files": [
        "bun.lock",
        "packages/cli/src/commands/scenario/src/plugin-parser.ts",
        "packages/cli/src/commands/scenario/src/runtime-factory.ts",
        "packages/cli/src/commands/start/index.ts",
        "packages/cli/src/commands/test/actions/e2e-tests.ts",
        "packages/cli/src/utils/index.ts",
        "packages/cli/src/utils/module-loader.test.ts",
        "packages/cli/src/utils/module-loader.ts",
        "packages/cli/src/commands/dev/actions/dev-server.ts",
        "packages/cli/src/commands/test/index.ts",
        "packages/cli/src/utils/__tests__/port-handling.test.ts",
        "packages/cli/src/utils/port-handling.ts",
        "packages/cli/src/utils/port-validation.ts",
        "packages/core/src/elizaos.ts",
        "packages/server/src/__tests__/agent-plugin-reload.test.ts",
        "packages/server/src/__tests__/agent-server-database.test.ts",
        "packages/server/src/__tests__/agent-server-errors.test.ts",
        "packages/server/src/__tests__/agent-server-initialization.test.ts",
        "packages/server/src/__tests__/agent-server-management.test.ts",
        "packages/server/src/__tests__/agent-server-middleware.test.ts",
        "packages/server/src/__tests__/api.test.ts",
        "packages/server/src/__tests__/cli-compatibility.test.ts",
        "packages/server/src/__tests__/integration/agent-server-interaction.test.ts",
        "packages/server/src/__tests__/integration/database-operations.test.ts",
        "packages/server/src/__tests__/integration/socketio-message-flow.test.ts",
        "packages/server/src/api/agents/crud.ts",
        "packages/server/src/api/agents/lifecycle.ts",
        "packages/server/src/index.ts"
      ]
    },
    {
      "title": "elizaos deploy r2 artifacts style",
      "prNumber": 6058,
      "type": "other",
      "body": "## Overview\r\n\r\nThis PR completely migrates the ElizaOS CLI deployment system from traditional Docker image builds to a modern bootstrapper architecture. This change significantly improves deployment speed, reduces resource usage, and elimin",
      "files": [
        "Dockerfile",
        "bun.lock",
        "packages/cli/Dockerfile",
        "packages/cli/package.json",
        "packages/cli/src/commands/deploy/README.md",
        "packages/cli/src/commands/deploy/actions/deploy-bootstrapper.ts",
        "packages/cli/src/commands/deploy/actions/deploy.ts",
        "packages/cli/src/commands/deploy/index.ts",
        "packages/cli/src/commands/deploy/types.ts",
        "packages/cli/src/commands/deploy/utils/api-client.ts",
        "packages/cli/src/commands/deploy/utils/artifact.ts",
        "packages/cli/src/commands/deploy/utils/r2-client.ts",
        "packages/cli/src/index.ts",
        "packages/core/src/index.ts",
        "packages/test-utils/src/mocks/runtime.ts"
      ]
    },
    {
      "title": "feat(core): implement generateText() API",
      "prNumber": 6062,
      "type": "feature",
      "body": "## Overview\r\nImplements the `generateText()` Promise-based API for simple text generation as discussed in #5923.\r\n\r\n## Discussion Context\r\nPer conversation with @0xbbjoker in #5923:\r\n- Named `generateText()` (not `generate()`) to clarify it",
      "files": [
        "examples/generate-text.ts",
        "packages/core/src/__tests__/runtime-generation.test.ts",
        "packages/core/src/runtime.ts",
        "packages/core/src/types/model.ts",
        "packages/core/src/types/runtime.ts"
      ]
    },
    {
      "title": "feat(cli): add Eigen TEE wrapper",
      "prNumber": 6065,
      "type": "feature",
      "body": "## Summary\n- add Eigen CLI wrapper to tee command for TEE deployments\n- provide consented installation flow and PATH detection for Eigen binaries\n\n## Testing\n- manual: \n  - bun run eliza/packages/cli/dist/index.js tee eigen (prompts, instal",
      "files": [
        "packages/cli/src/commands/tee/eigen-wrapper.ts",
        "packages/cli/src/commands/tee/index.ts"
      ]
    }
  ],
  "topContributors": [
    {
      "username": "0xbbjoker",
      "avatarUrl": "https://avatars.githubusercontent.com/u/54844437?u=90fe1762420de6ad493a1c1582f1f70c0d87d8e2&v=4",
      "totalScore": 177.38437053692056,
      "prScore": 161.44437053692053,
      "issueScore": 0,
      "reviewScore": 15,
      "commentScore": 0.94,
      "summary": null
    },
    {
      "username": "standujar",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16385918?u=718bdcd1585be8447bdfffb8c11ce249baa7532d&v=4",
      "totalScore": 55.08568054636411,
      "prScore": 49.145680546364105,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0.94,
      "summary": null
    },
    {
      "username": "odilitime",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16395496?u=c9bac48e632aae594a0d85aaf9e9c9c69b674d8b&v=4",
      "totalScore": 43.63046081267779,
      "prScore": 38.93046081267779,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 34.05942874616498,
      "prScore": 34.05942874616498,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "tylermcwilliams",
      "avatarUrl": "https://avatars.githubusercontent.com/u/39647101?u=03be301adc18b501478fe28dc7e921763a8ecf9f&v=4",
      "totalScore": 31.590661367769954,
      "prScore": 31.250661367769954,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.33999999999999997,
      "summary": null
    },
    {
      "username": "5c0",
      "avatarUrl": "https://avatars.githubusercontent.com/u/93293719?u=8ccc6529b05747344b11a1a1fd4597a111be441b&v=4",
      "totalScore": 20.356835962612728,
      "prScore": 20.356835962612728,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "matteo-brandolino",
      "avatarUrl": "https://avatars.githubusercontent.com/u/49117857?u=28be1833532b4c849d42f50867bd960807756272&v=4",
      "totalScore": 7.001573590279973,
      "prScore": 7.001573590279973,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "douglasg14b",
      "avatarUrl": "https://avatars.githubusercontent.com/u/1400380?u=9c769fb37bf91378e109637db82591816eac7502&v=4",
      "totalScore": 2.3000000000000003,
      "prScore": 0,
      "issueScore": 2.1,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "n1n-api",
      "avatarUrl": "https://avatars.githubusercontent.com/u/227003775?u=0230fac354b6d67db954e33b17282018cca32ee9&v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 0.33999999999999997,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.33999999999999997,
      "summary": null
    }
  ],
  "newPRs": 7,
  "mergedPRs": 5,
  "newIssues": 2,
  "closedIssues": 4,
  "activeContributors": 9
}
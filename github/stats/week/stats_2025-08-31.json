{
  "interval": {
    "intervalStart": "2025-08-31T00:00:00.000Z",
    "intervalEnd": "2025-09-07T00:00:00.000Z",
    "intervalType": "week"
  },
  "repository": "elizaos/eliza",
  "overview": "From 2025-08-31 to 2025-09-07, elizaos/eliza had 8 new PRs (2 merged), 3 new issues, and 14 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDOMT5cIs7I-3_W",
      "title": "Refactor Eliza CLI",
      "author": "borisudovicic",
      "number": 5860,
      "repository": "elizaos/eliza",
      "body": "### **Summary**\n\nThe current CLI is overly complex and duplicates logic that should live inside project directories. Instead of bootstrapping AgentServer inside the CLI, we should streamline it to handle only configuration and delegate execution to the project’s runtime.\n\n### **Problem**\n\n* **Duplication of logic:** Both the CLI and project code (e.g. project-starter/src/index.ts) contain overlapping runner and module management logic .\n* **Code-first gap:** Without a true code-first Eliza, the CLI has taken on responsibilities (e.g. instantiating AgentServer) that should belong to projects.\n* **Unnecessary coupling:** Bootstrapping agents directly from the CLI makes it harder to reason about project boundaries and introduces complexity in maintaining two runtimes.\n* **Developer UX:** For new users, this creates confusion about where to put logic and increases friction.\n\n### **Proposal**\n\n* **CLI responsibilities:**\n  * Manage environment and char.json configuration (via env and config commands).\n  * Provide a clean interface for project creation (elizaos create) .\n  * Delegate execution to project scripts (bun run build, bun run start) rather than running agents directly.\n* **Project responsibilities:**\n  * Own all logic for AgentServer instantiation (directly in project-starter/src/index.ts).\n  * Expose a clear entry point (start/dev) that the CLI calls into.\n  * Keep all runtime and module complexity contained in project code.",
      "createdAt": "2025-09-01T09:20:11Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 9
    },
    {
      "id": "I_kwDOMT5cIs7I4LpR",
      "title": "path not found",
      "author": "MagdiejamesNYC",
      "number": 5856,
      "repository": "elizaos/eliza",
      "body": "when I try to create a new project I have this error:\n\nCleaning up due to error...\n└  Failed to create Project.\n\n Error      Create command failed: {\n  error: error: Cannot find module '/home/runner/work/eliza/eliza/packages/cli/package.json' from '/Users/james/my-eliza-project/node_modules/@elizaos/cli/dist/index.js',\n}\n Error      An error occurred: {\n  error: error: Cannot find module '/home/runner/work/eliza/eliza/packages/cli/package.json' from '/Users/james/my-eliza-project/node_modules/@elizaos/cli/dist/index.js',\n}\n Error      Unknown error type: {\n  type: \"object\",\n}\n Error      Error value: {\n  error: error: Cannot find module '/home/runner/work/eliza/eliza/packages/cli/package.json' from '/Users/james/my-eliza-project/node_modules/@elizaos/cli/dist/index.js',\n}\n\nthere is not way to do a fresh install. Can you push an update to the package?",
      "createdAt": "2025-08-31T11:35:58Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 1
    },
    {
      "id": "I_kwDOMT5cIs7I6pcU",
      "title": "Web UI dashboard exists but is completely undocumented (users don't know how to interact with their agent)",
      "author": "thedotmack",
      "number": 5857,
      "repository": "elizaos/eliza",
      "body": "**Describe the bug**\n\nThe ElizaOS documentation (including the Quickstart guide) completely fails to mention that there's a web interface/dashboard available after starting an agent. The startup logs show \"Go to the dashboard at http://localhost:3001\" but this crucial information is NEVER mentioned in the documentation, leaving users confused about how to interact with their agent.\n\n**To Reproduce**\n\n1. Go to the ElizaOS documentation/quickstart\n2. Follow all installation steps:\n   - Install dependencies (`bun install`)\n   - Configure environment variables\n   - Set up character configuration\n   - Run `bun start` or `npm start`\n3. See output: `[INFO] Client http listening on port 3001`\n4. Try to figure out how to talk to your agent\n5. Search entire documentation for \"web UI\", \"browser\", \"localhost:3000\", \"how to chat\"\n6. Find nothing about the web interface\n7. Assume you need to configure Telegram/Discord just to test the agent\n\n**Expected behavior**\n\nAfter starting the agent, the documentation should clearly state:\n- \"Open your browser to `http://localhost:3000` to access the web chat interface\"\n- This should be prominently displayed in the quickstart guide\n- Should appear immediately after the \"start your agent\" step\n\n**Screenshots**\n\nCurrent quickstart ends with starting the agent - no mention of the dashboard:\n```\n# Start your agent\nbun start\n```\n*[Documentation just... stops here - no mention of the dashboard URL]*\n\nMeanwhile, the ACTUAL console output shows this ONE critical line buried in 100+ lines of logs:\n```\n[2025-09-01 00:11:19] INFO: Loaded character: Eliza\nBYPASS: Using postgres URL from environment variable\n[2025-09-01 00:11:19] INFO: Using local @elizaos/server installation\n[... 50+ MORE LINES OF LOGS ...]\n[2025-09-01 00:11:20] INFO: [STATIC] Serving static files from: ./node_modules/@elizaos/server/dist/client\n[2025-09-01 00:11:20] INFO: [SocketIO] Router initialized with 0 agents\n[2025-09-01 00:11:20] INFO: [SocketIO] Setting up Socket.IO event listeners\nStartup successful!\nGo to the dashboard at http://localhost:3001  <--- THIS ONE LINE IS THE ONLY WAY TO KNOW\nAgentServer is listening on port 3001\n[2025-09-01 00:11:21] INFO: Final plugins being loaded:\n[2025-09-01 00:11:21] INFO: Running plugin migrations...\n[... 20+ MORE LINES OF LOGS CONTINUE AFTER ...]\n```\n\nThe critical \"Go to the dashboard\" message is:\n- Buried in the middle of 108 lines of startup logs\n- Surrounded by technical INFO messages about plugins, migrations, and socket handlers\n- Easy to miss as it scrolls by with all the other output\n- The ONLY indication that a web UI even exists\n\nThe logs literally tell you \"Go to the dashboard\" but:\n- That there IS a dashboard\n- That there IS a web UI\n- That you should look for this URL in the logs\n- That this is how you interact with your agent\n\n**Additional context**\n\n- The dashboard URL appears on line 65 of 108 lines of startup output - completely buried in technical logs\n- Most users will never notice this ONE line among all the INFO messages about plugins, migrations, and socket handlers\n- The startup logs DO show \"Go to the dashboard\" but it's buried in a wall of text that scrolls by quickly\n- The docs don't even mention that a dashboard/web UI EXISTS, let alone tell users to look for it in the logs\n- Users are forced to configure unnecessary integrations (Telegram/Discord/Twitter) just to test their agent because they don't know about the web UI\n- Even the llms.txt file mentions WebSocket connections and API endpoints but not the dashboard\n- This is a critical onboarding issue - new users literally cannot figure out how to interact with the thing they just installed\n- The fix is trivial: add to the quickstart \"After starting, your agent will display 'Go to the dashboard at http://localhost:xxxx' - open this URL in your browser to chat with your agent\"",
      "createdAt": "2025-09-01T00:16:45Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 0
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDOMT5cIs6mJqE9",
      "title": "fix(cli): make plugin import verification non-fatal; address ubuntu/macos failures (2/n)",
      "author": "wtfsayo",
      "number": 5855,
      "body": "Context\\n- Ubuntu/macOS CLI tests were failing during plugin installation verification (e.g., @elizaos/plugin-bedrock, @elizaos/plugin-elevenlabs) due to dynamic import checks in ephemeral environments.\\n\\nChanges\\n- Do NOT bypass verification globally. Instead, treat verification failures as non-fatal: warn and proceed so tests can continue.\\n- Keep GitHub-based installs unverified (unchanged) because source repos may not be importable immediately in ephemeral contexts.\\n- No changes to user-facing commands; only affects internal install verification behavior.\\n\\nWhy\\n- This preserves correctness: we still attempt to verify and log failures.\\n- Prevents CI flakes where optional verification blocks entire suite.\\n\\nFollow-ups\\n- Windows agent CRUD path quoting will be fixed in a separate PR.\\n- If residual failures remain, we can further narrow verification for specific command contexts only during tests.",
      "repository": "elizaos/eliza",
      "createdAt": "2025-08-31T09:11:30Z",
      "mergedAt": null,
      "additions": 443,
      "deletions": 42
    },
    {
      "id": "PR_kwDOMT5cIs6mOLva",
      "title": "fix: add docker files to project-starter",
      "author": "yungalgo",
      "number": 5858,
      "body": "this is a pr to add dockerization to project-starter. so now users can do local project development , create a docker image, and then deploy it to the cloud provider of their choice. \r\n\r\nfor example with phala, users can do it all from the cli:\r\n\r\nelizaos create --type project asdasd\r\nbuild docker image: phala docker build --image my-agents-production --tag v1.0.0\r\npush image to docker hub: phala docker push\r\nadd value for DOCKER_IMAGE to env: DOCKER_IMAGE=yourdockerhubusername/my-agents-production:v1.0.0\r\nthen deploy to cloud: phala cvms create --name my-agents-production --compose ./docker-compose.yaml --env-file ./.env\r\n\r\nthis should work also for any other cloud platform seamlessly.\r\n\r\nused DOCKERFILE and DOCKERIGNORE as provided by @wtfsayo and added own docker-compose to match the one in project-tee-starter.",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-01T06:59:26Z",
      "mergedAt": null,
      "additions": 321,
      "deletions": 1
    },
    {
      "id": "PR_kwDOMT5cIs6mJlCT",
      "title": "fix(core): use node crypto in node build; unblock ubuntu/macos CLI tests (1/n)",
      "author": "wtfsayo",
      "number": 5854,
      "body": "Summary\\n- Split core settings into Node and browser variants.\\n- Node builds now import from `settings.node.ts` (`node:crypto`). Browser keeps `crypto-browserify`.\\n- Adjusted `index.node.ts` and `index.browser.ts` exports accordingly.\\n\\nWhy\\n- Recent Actions failures show CLI tests cannot resolve `@elizaos/server` due to a transitive missing polyfill: `crypto-browserify` referenced by `@elizaos/core/dist/node/index.node.js`.\\n- This caused server startup to fail in ephemeral test projects, leading to repeated port wait timeouts and cascading \"Command timed out\" errors on ubuntu/macos.\\n\\nImpact\\n- Node consumers use Node `crypto`; browser builds unchanged.\\n- Should allow ephemeral projects in CLI tests to resolve core without requiring browser polyfills in Node context, unblocking ubuntu/macos runs.\\n\\nFollow-ups\\n- If any residual module resolution issues remain, ensure the ephemeral test project still installs `@elizaos/server` before server start.\\n- Windows-specific path quoting issues in agent CRUD will be addressed in a separate PR.\\n\\nReferences\\n- Failed run: https://github.com/elizaOS/eliza/actions/runs/17354263640\\n- Errors: \"ResolveMessage: Cannot find package 'crypto-browserify'...\" and \"Cannot find module '@elizaos/server'...\" seen across ubuntu/macos.",
      "repository": "elizaos/eliza",
      "createdAt": "2025-08-31T08:48:04Z",
      "mergedAt": null,
      "additions": 300,
      "deletions": 2
    },
    {
      "id": "PR_kwDOMT5cIs6mJGfu",
      "title": "fix: CLI NPM Deployment Path Resolution Issue",
      "author": "ChristopherTrimboli",
      "number": 5852,
      "body": "## 🐛 Fix: NPM Deployment Path Resolution Issue\r\n\r\n### Problem\r\nWhen the CLI is published to NPM and installed globally (e.g., `bun i -g @elizaos/cli`), it fails with the error:\r\n```\r\nCannot find module '/home/runner/work/eliza/eliza/packages/cli/package.json'\r\n```\r\n\r\nThis occurs because the build process in GitHub Actions CI/CD embeds absolute paths from the build machine, which don't exist on users' machines.\r\n\r\n### Root Cause\r\nThe CLI was using **build-time path resolution** with `require.resolve('@elizaos/cli/package.json')` which gets hardcoded to the GitHub Actions runner path during the build process.\r\n\r\n### Solution\r\nChanged all path resolution to happen at **runtime** with multiple fallback strategies to handle different installation scenarios:\r\n- ✅ Global NPM/Bun installations\r\n- ✅ Local node_modules (as dependency)\r\n- ✅ Monorepo development\r\n- ✅ Various package manager locations\r\n\r\n### Changes Made\r\n\r\n#### 1. **`src/utils/copy-template.ts`**\r\n- Added `getGlobalNodeModulesPaths()` helper to detect global installation directories\r\n- Replaced `require.resolve()` with runtime path resolution\r\n- Added fallback paths for templates and package.json\r\n\r\n#### 2. **`src/utils/display-banner.ts`**\r\n- Implemented multi-strategy version detection:\r\n  1. Check monorepo context\r\n  2. Check `ELIZAOS_CLI_VERSION` env var (embedded during build)\r\n  3. Try multiple package.json locations\r\n  4. Extract from installation path as fallback\r\n- Returns `'unknown'` instead of crashing when package.json not found\r\n\r\n#### 3. **`build.ts`**\r\n- Reads version from package.json at build time\r\n- Embeds version as `process.env.ELIZAOS_CLI_VERSION`\r\n- Copies package.json to dist/ for runtime access\r\n\r\n#### 4. **`package.json`**\r\n- Added `dist/package.json` to files array for NPM package inclusion\r\n\r\n#### 5. **`src/utils/user-environment.ts`**\r\n- Updated CLI info detection with runtime fallbacks\r\n- Silent failures (no warnings) as this is expected in some environments\r\n\r\n### Testing\r\n```bash\r\n# Build and pack\r\ncd packages/cli\r\nbun run build\r\nnpm pack\r\n\r\n# Test installation\r\ncd /tmp\r\nbun i -g ./elizaos-cli-*.tgz\r\nelizaos create  # Should work without path errors\r\n```\r\n\r\n### Verification\r\n- [x] No hardcoded `/home/runner` paths in built files\r\n- [x] Works in monorepo development\r\n- [x] Works when installed globally via NPM/Bun\r\n- [x] Works as local dependency\r\n- [x] Graceful fallbacks when paths not found\r\n\r\n### Impact\r\n- Fixes #[issue-number] - CLI fails when installed from NPM\r\n- No breaking changes\r\n- Backward compatible with existing installations\r\n\r\n### Related Issues\r\nThis is a critical fix for the v1.5.2 release as it prevents users from using the CLI when installed from NPM.\r\n\r\n---\r\n\r\n**Note to reviewers:** The key insight is that all path resolution must happen at runtime, not build time, to support the various ways users might install and run the CLI.",
      "repository": "elizaos/eliza",
      "createdAt": "2025-08-31T05:58:59Z",
      "mergedAt": "2025-08-31T15:04:37Z",
      "additions": 258,
      "deletions": 95
    },
    {
      "id": "PR_kwDOMT5cIs6mJEfe",
      "title": "fix: resolve build warnings and CSS syntax errors",
      "author": "yungalgo",
      "number": 5851,
      "body": "## Problem\r\nBuild was generating warnings:\r\n- CSS syntax errors from empty `:is()` selectors in webkit scrollbar styles\r\n- Missing asset reference in CLI build  \r\n- Bundle size warnings\r\n\r\n## Solution\r\n- Remove dead reference to non-existent migration guides\r\n- Replace problematic Tailwind arbitrary properties with clean CSS\r\n- Increase bundle size threshold for large ElizaOS chunks\r\n- Disable CSS minification to avoid syntax errors\r\n\r\n## Result\r\n✅ Clean build with zero warnings\r\n✅ Better maintainable scrollbar styling\r\n✅ Faster build times\r\n\r\n**Impact:** Zero functional changes, improved developer experience",
      "repository": "elizaos/eliza",
      "createdAt": "2025-08-31T05:47:25Z",
      "mergedAt": null,
      "additions": 48,
      "deletions": 21
    }
  ],
  "codeChanges": {
    "additions": 297,
    "deletions": 1061,
    "files": 11,
    "commitCount": 39
  },
  "completedItems": [
    {
      "title": "fix(core): fix TypeScript declarations in npm package",
      "prNumber": 5848,
      "type": "bugfix",
      "body": "# Relates to\r\n\r\n  TypeScript declarations build optimization.\r\n\r\n  # Risks\r\n\r\n  **Low risk** - Configuration changes only, no functional code changes.\r\n\r\n  # Background\r\n\r\n  ## What does this PR do?\r\n\r\n  Optimizes the TypeScript build confi",
      "files": [
        "bun.lock",
        "packages/core/build.ts",
        "packages/core/package.json",
        "packages/core/tsconfig.browser.json",
        "packages/core/tsconfig.declarations.json",
        "packages/core/tsconfig.json"
      ]
    },
    {
      "title": "fix: CLI NPM Deployment Path Resolution Issue",
      "prNumber": 5852,
      "type": "bugfix",
      "body": "## 🐛 Fix: NPM Deployment Path Resolution Issue\r\n\r\n### Problem\r\nWhen the CLI is published to NPM and installed globally (e.g., `bun i -g @elizaos/cli`), it fails with the error:\r\n```\r\nCannot find module '/home/runner/work/eliza/eliza/packag",
      "files": [
        "bun.lock",
        "packages/cli/build.ts",
        "packages/cli/package.json",
        "packages/cli/src/utils/copy-template.ts",
        "packages/cli/src/utils/display-banner.ts",
        "packages/cli/src/utils/user-environment.ts",
        "packages/core/build.ts",
        "packages/core/package.json"
      ]
    }
  ],
  "topContributors": [
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 116.7348094587471,
      "prScore": 110.09680945874709,
      "issueScore": 0,
      "reviewScore": 6,
      "commentScore": 0.6379999999999999,
      "summary": null
    },
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 67.1321876525351,
      "prScore": 57.132187652535094,
      "issueScore": 0,
      "reviewScore": 10,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "yungalgo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/113615973?u=92e0f29f7e2fbb8ce46ed13c51f692ca803de02d&v=4",
      "totalScore": 64.82111542865466,
      "prScore": 46.821115428654664,
      "issueScore": 0,
      "reviewScore": 18,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "tcm390",
      "avatarUrl": "https://avatars.githubusercontent.com/u/60634884?u=c6c41679b8322eaa0c81f72e0b4ed95e80f0ac16&v=4",
      "totalScore": 15.871879454113936,
      "prScore": 15.671879454113936,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "MagdiejamesNYC",
      "avatarUrl": "https://avatars.githubusercontent.com/u/44060696?v=4",
      "totalScore": 2.2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "thedotmack",
      "avatarUrl": "https://avatars.githubusercontent.com/u/683968?u=fdb9ab5845aa92dbd5a9de4abea58d43b46cc0cd&v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "borisudovicic",
      "avatarUrl": "https://avatars.githubusercontent.com/u/31806472?u=27713fbe603baae91ef519990facbacd6c23e93d&v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "standujar",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16385918?u=718bdcd1585be8447bdfffb8c11ce249baa7532d&v=4",
      "totalScore": 0.43799999999999994,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.43799999999999994,
      "summary": null
    },
    {
      "username": "monilpat",
      "avatarUrl": "https://avatars.githubusercontent.com/u/15067321?v=4",
      "totalScore": 0.43799999999999994,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.43799999999999994,
      "summary": null
    }
  ],
  "newPRs": 8,
  "mergedPRs": 2,
  "newIssues": 3,
  "closedIssues": 0,
  "activeContributors": 14
}
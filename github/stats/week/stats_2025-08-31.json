{
  "interval": {
    "intervalStart": "2025-08-31T00:00:00.000Z",
    "intervalEnd": "2025-09-07T00:00:00.000Z",
    "intervalType": "week"
  },
  "repository": "elizaos/eliza",
  "overview": "From 2025-08-31 to 2025-09-07, elizaos/eliza had 32 new PRs (30 merged), 7 new issues, and 20 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDOMT5cIs7I-3_W",
      "title": "Refactor Eliza CLI",
      "author": "borisudovicic",
      "number": 5860,
      "repository": "elizaos/eliza",
      "body": "### **Summary**\n\nThe current CLI is overly complex and duplicates logic that should live inside project directories. Instead of bootstrapping AgentServer inside the CLI, we should streamline it to handle only configuration and delegate execution to the project’s runtime.\n\n### **Problem**\n\n* **Duplication of logic:** Both the CLI and project code (e.g. project-starter/src/index.ts) contain overlapping runner and module management logic .\n* **Code-first gap:** Without a true code-first Eliza, the CLI has taken on responsibilities (e.g. instantiating AgentServer) that should belong to projects.\n* **Unnecessary coupling:** Bootstrapping agents directly from the CLI makes it harder to reason about project boundaries and introduces complexity in maintaining two runtimes.\n* **Developer UX:** For new users, this creates confusion about where to put logic and increases friction.\n\n### **Proposal**\n\n* **CLI responsibilities:**\n  * Manage environment and char.json configuration (via env and config commands).\n  * Provide a clean interface for project creation (elizaos create) .\n  * Delegate execution to project scripts (bun run build, bun run start) rather than running agents directly.\n* **Project responsibilities:**\n  * Own all logic for AgentServer instantiation (directly in project-starter/src/index.ts).\n  * Expose a clear entry point (start/dev) that the CLI calls into.\n  * Keep all runtime and module complexity contained in project code.",
      "createdAt": "2025-09-01T09:20:11Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 11
    },
    {
      "id": "I_kwDOMT5cIs7HaHnG",
      "title": "Image Generation not working in Discord",
      "author": "harperaa",
      "number": 5809,
      "repository": "elizaos/eliza",
      "body": "**Describe the bug**\n\nGenerated images not appearing in discord, it shows in the webui, but not in discord.\n\n**To Reproduce**\n\nAsk to create an image, it says here it is, and describes it, but does not show up in discord.\n\nI see this in logs on webui. Executed action: GENERATE_IMAGE\n\n**Expected behavior**\n\nImage in discord.\n\n**Screenshots**\n\nIf I am missing some permission or config needed, please let me know.  Again, it works in webui, but not in discord.",
      "createdAt": "2025-08-22T13:33:19Z",
      "closedAt": "2025-09-05T11:44:30Z",
      "state": "CLOSED",
      "commentCount": 3
    },
    {
      "id": "I_kwDOMT5cIs7I4LpR",
      "title": "path not found",
      "author": "MagdiejamesNYC",
      "number": 5856,
      "repository": "elizaos/eliza",
      "body": "when I try to create a new project I have this error:\n\nCleaning up due to error...\n└  Failed to create Project.\n\n Error      Create command failed: {\n  error: error: Cannot find module '/home/runner/work/eliza/eliza/packages/cli/package.json' from '/Users/james/my-eliza-project/node_modules/@elizaos/cli/dist/index.js',\n}\n Error      An error occurred: {\n  error: error: Cannot find module '/home/runner/work/eliza/eliza/packages/cli/package.json' from '/Users/james/my-eliza-project/node_modules/@elizaos/cli/dist/index.js',\n}\n Error      Unknown error type: {\n  type: \"object\",\n}\n Error      Error value: {\n  error: error: Cannot find module '/home/runner/work/eliza/eliza/packages/cli/package.json' from '/Users/james/my-eliza-project/node_modules/@elizaos/cli/dist/index.js',\n}\n\nthere is not way to do a fresh install. Can you push an update to the package?",
      "createdAt": "2025-08-31T11:35:58Z",
      "closedAt": "2025-09-05T11:43:07Z",
      "state": "CLOSED",
      "commentCount": 2
    },
    {
      "id": "I_kwDOMT5cIs7F0hup",
      "title": "Move to core pure",
      "author": "borisudovicic",
      "number": 5766,
      "repository": "elizaos/eliza",
      "body": "Make sure it works, get up to speed for low level devs, browser support, streaming in core, etc.",
      "createdAt": "2025-08-13T15:20:17Z",
      "closedAt": "2025-09-03T22:40:09Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7H3Obz",
      "title": "Implement Dynamic Prompting (Multi-Turn Conversations) in ElizaOS Scenarios",
      "author": "linear",
      "number": 5819,
      "repository": "elizaos/eliza",
      "body": "# Dynamic Prompting Implementation for ElizaOS Scenarios\n\n## Overview\n\nImplement **Dynamic Prompting** (multi-turn conversations) in ElizaOS scenarios to enable sophisticated testing of agent behavior through extended conversations where an LLM simulates realistic user responses.\n\n## Problem Statement\n\nCurrent ElizaOS scenarios are limited to single-turn interactions, making it impossible to test:\n\n* Multi-step problem solving\n* Context retention across conversation turns\n* Clarification and follow-up question handling\n* Natural conversation flow assessment\n* Error recovery and correction flows\n\n## Solution\n\nExtend the existing scenario framework to support multi-turn conversations where:\n\n1. **Agent** receives initial user input\n2. **Agent** responds with thoughts, actions, and replies\n3. **LLM Simulator** generates realistic user follow-up based on agent response\n4. **Agent** continues the conversation based on simulated user input\n5. Process repeats for specified number of turns or until conditions are met\n\n## Key Requirements\n\n### 1\\. Backward Compatibility\n\n* **100% backward compatible** - all existing scenarios must work unchanged\n* Gradual adoption path for teams to enhance existing scenarios\n* No breaking changes to existing APIs or CLI commands\n\n### 2\\. Core Components\n\n#### Schema Extensions\n\n* Extend `RunStepSchema` with optional `conversation` field\n* Add new evaluation types: `conversation_length`, `conversation_flow`, `user_satisfaction`, `context_retention`\n* Support conversation configuration with user simulator settings\n\n#### User Simulator\n\n* LLM-based response generation with persona-driven prompts\n* Configurable personality, objectives, constraints, and knowledge level\n* Realistic conversation progression based on agent responses\n\n#### Conversation Manager\n\n* Multi-turn execution orchestration\n* Termination condition checking (satisfaction, solution provided, escalation needed)\n* Turn-level and final evaluation support\n* Conversation transcript generation\n\n#### New Evaluators\n\n* **Conversation Length**: Validate optimal conversation duration\n* **Conversation Flow**: Detect required conversation patterns\n* **User Satisfaction**: Measure user satisfaction through sentiment analysis\n* **Context Retention**: Verify agent memory across conversation turns\n\n### 3\\. Configuration Examples\n\n#### Basic Multi-Turn Conversation\n\n```yaml\nrun:\n  - input: \"I need help with something\"\n    conversation:\n      max_turns: 4\n      user_simulator:\n        persona: \"polite customer with a billing question\"\n        objective: \"find out why charged twice this month\"\n        temperature: 0.6\n      final_evaluations:\n        - type: \"llm_judge\"\n          prompt: \"Did the agent successfully help resolve the billing issue?\"\n          expected: \"yes\"\n```\n\n#### Advanced Persona-Driven Conversation\n\n```yaml\nrun:\n  - input: \"This is ridiculous! Your product doesn't work!\"\n    conversation:\n      max_turns: 6\n      user_simulator:\n        persona: \"angry customer who had bad experience\"\n        objective: \"vent frustration but eventually want help\"\n        style: \"initially hostile, gradually becomes cooperative if handled well\"\n        constraints:\n          - \"Start with complaints and criticism\"\n          - \"Don't accept first solution immediately\"\n          - \"Become more cooperative if agent shows empathy\"\n      termination_conditions:\n        - type: \"user_expresses_satisfaction\"\n        - type: \"agent_escalates_to_human\"\n```\n\n## Implementation Plan\n\n### Phase 1: Core Infrastructure (Weeks 1-2)\n\n- [ ] Schema extensions and type definitions\n- [ ] User Simulator implementation\n- [ ] Basic conversation flow testing\n\n### Phase 2: Conversation Management (Weeks 3-4)\n\n- [ ] ConversationManager class implementation\n- [ ] Provider integration (LocalEnvironmentProvider, E2BEnvironmentProvider)\n- [ ] Termination condition logic\n\n### Phase 3: Evaluation System (Weeks 5-6)\n\n- [ ] New conversation evaluators implementation\n- [ ] EvaluationEngine integration\n- [ ] End-to-end testing\n\n### Phase 4: Polish and Documentation (Week 7)\n\n- [ ] Example scenarios creation\n- [ ] Documentation updates\n- [ ] Performance optimizations\n\n## Technical Specifications\n\n### File Structure\n\n```\npackages/cli/src/commands/scenario/src/\n├── schema.ts (extend)\n├── conversation-types.ts (new)\n├── UserSimulator.ts (new)\n├── ConversationManager.ts (new)\n├── ConversationEvaluators.ts (new)\n├── LocalEnvironmentProvider.ts (modify)\n├── E2BEnvironmentProvider.ts (modify)\n└── __tests__/\n    ├── UserSimulator.test.ts (new)\n    ├── ConversationManager.test.ts (new)\n    ├── ConversationEvaluators.test.ts (new)\n    └── integration/ (new tests)\n```\n\n### Key Interfaces\n\n```typescript\ninterface ConversationConfig {\n  max_turns: number;\n  user_simulator: UserSimulatorConfig;\n  termination_conditions: TerminationCondition[];\n  turn_evaluations: EvaluationSchema[];\n  final_evaluations: EvaluationSchema[];\n}\n\ninterface UserSimulatorConfig {\n  persona: string;\n  objective: string;\n  style?: string;\n  constraints: string[];\n  knowledge_level: 'beginner' | 'intermediate' | 'expert';\n}\n```\n\n## Success Criteria\n\n### Functional Requirements\n\n- [ ] Single-turn scenarios continue to work unchanged\n- [ ] Multi-turn conversations execute successfully\n- [ ] User simulator generates realistic, persona-consistent responses\n- [ ] Termination conditions work correctly\n- [ ] All new evaluation types function properly\n- [ ] Matrix testing supports conversation parameters\n\n### Performance Requirements\n\n- [ ] Conversation scenarios complete within reasonable time limits\n- [ ] Memory usage remains within acceptable bounds\n- [ ] LLM API usage is optimized and rate-limited appropriately\n\n### Quality Requirements\n\n- [ ] Comprehensive test coverage (unit, integration, e2e)\n- [ ] Clear error handling and debugging capabilities\n- [ ] Well-documented examples and migration guide\n\n## Risk Mitigation\n\n### Technical Risks\n\n* **LLM API failures**: Implement retry logic and graceful degradation\n* **Infinite loops**: Hard max_turns limit and timeout mechanisms\n* **Memory leaks**: Turn-based cleanup and conversation archiving\n\n### Integration Risks\n\n* **Breaking existing scenarios**: Comprehensive backward compatibility testing\n* **Performance impact**: Resource monitoring and optimization\n\n## Dependencies\n\n* Existing `askAgentViaApi` infrastructure\n* Current evaluation engine and trajectory reconstruction\n* LLM provider integration for user simulation\n* Database schema (no changes required)\n\n## Acceptance Criteria\n\n1. **Backward Compatibility**: All existing scenarios pass without modification\n2. **New Functionality**: Multi-turn conversation scenarios execute successfully\n3. **Evaluation Quality**: New evaluators provide meaningful insights\n4. **Performance**: No significant impact on existing scenario execution time\n5. **Documentation**: Clear examples and migration path provided",
      "createdAt": "2025-08-25T20:36:17Z",
      "closedAt": "2025-09-03T22:39:53Z",
      "state": "CLOSED",
      "commentCount": 0
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDOMT5cIs6lb8rP",
      "title": "feat: scenarios dynamic prompting + spec",
      "author": "monilpat",
      "number": 5824,
      "body": "# Draft Pull Request: Implement Dynamic Prompting (Multi-Turn Conversations) in ElizaOS Scenarios\r\n\r\n## 🎯 Overview\r\n\r\nThis PR implements **Dynamic Prompting** (multi-turn conversations) in ElizaOS scenarios, enabling sophisticated testing of agent behavior through extended conversations where an LLM simulates realistic user responses. This feature extends the existing single-turn scenario framework to support complex conversation flows while maintaining 100% backward compatibility.\r\n\r\n**Ticket**: [ELIZA-669](https://linear.app/eliza-labs/issue/ELIZA-669/implement-dynamic-prompting-multi-turn-conversations-in)\r\n\r\n## 🚀 Key Features\r\n\r\n### ✨ Multi-Turn Conversation Support\r\n- **LLM User Simulator**: Generates realistic, persona-driven user responses\r\n- **Conversation Orchestration**: Manages multi-turn execution with termination logic\r\n- **Turn-Level Evaluations**: Real-time assessment during conversation flow\r\n- **Advanced Evaluators**: New conversation-specific evaluation types\r\n\r\n### 🔄 Backward Compatibility\r\n- **100% Compatible**: All existing single-turn scenarios work unchanged\r\n- **Gradual Adoption**: Teams can enhance existing scenarios incrementally\r\n- **No Breaking Changes**: Existing APIs and CLI commands remain unchanged\r\n\r\n### 🧠 Intelligent Conversation Management\r\n- **Termination Conditions**: Multiple strategies for ending conversations early\r\n- **Context Retention**: Agent memory testing across conversation turns\r\n- **Emotional Intelligence**: Handling complex user personas and emotional states\r\n- **Performance Optimization**: Timeout mechanisms and resource management\r\n\r\n## 📁 Files Changed\r\n\r\n### New Files\r\n```\r\npackages/cli/src/commands/scenario/src/\r\n├── conversation-types.ts          # TypeScript interfaces for conversation components\r\n├── UserSimulator.ts              # LLM-based user response generation\r\n├── ConversationManager.ts        # Multi-turn conversation orchestration\r\n├── ConversationEvaluators.ts    # New conversation-specific evaluators\r\n└── __tests__/\r\n    ├── UserSimulator.test.ts     # Unit tests for user simulator\r\n    ├── ConversationManager.test.ts # Unit tests for conversation manager\r\n    ├── ConversationEvaluators.test.ts # Unit tests for new evaluators\r\n    ├── schema-conversation.test.ts # Schema validation tests\r\n    └── integration/\r\n        ├── conversation-flow.test.ts # Integration tests\r\n        └── backward-compatibility.test.ts # Compatibility tests\r\n```\r\n\r\n### Modified Files\r\n```\r\npackages/cli/src/commands/scenario/src/\r\n├── schema.ts                     # Extended with conversation schemas\r\n├── LocalEnvironmentProvider.ts   # Added conversation support\r\n├── E2BEnvironmentProvider.ts     # Added conversation support\r\n└── EvaluationEngine.ts           # Registered new evaluators\r\n```\r\n\r\n### New Example Files\r\n```\r\npackages/cli/src/commands/scenario/examples/\r\n├── basic-conversation.yaml       # Basic multi-turn conversation\r\n├── emotional-intelligence.yaml   # Complex persona testing\r\n├── technical-support.yaml        # Troubleshooting conversation\r\n└── knowledge-transfer.yaml       # Educational conversation\r\n```\r\n\r\n## 🔧 Technical Implementation\r\n\r\n### Schema Extensions\r\n- **ConversationConfigSchema**: Defines conversation configuration with user simulator settings\r\n- **New Evaluation Types**: `conversation_length`, `conversation_flow`, `user_satisfaction`, `context_retention`\r\n- **Backward Compatible**: Optional `conversation` field in existing `RunStepSchema`\r\n\r\n### User Simulator\r\n- **Persona-Driven**: Configurable personality, objectives, constraints, and knowledge level\r\n- **Context-Aware**: Builds prompts based on conversation history and agent responses\r\n- **Realistic Generation**: LLM-based response generation with behavioral constraints\r\n\r\n### Conversation Manager\r\n- **Multi-Turn Orchestration**: Manages conversation flow and turn execution\r\n- **Termination Logic**: Intelligent conversation ending based on multiple conditions\r\n- **Evaluation Integration**: Supports both turn-level and final evaluations\r\n- **Error Handling**: Graceful handling of failures and timeouts\r\n\r\n### New Evaluators\r\n- **ConversationLengthEvaluator**: Validates optimal conversation duration\r\n- **ConversationFlowEvaluator**: Detects required conversation patterns\r\n- **UserSatisfactionEvaluator**: Measures user satisfaction through multiple methods\r\n- **ContextRetentionEvaluator**: Verifies agent memory across conversation turns\r\n\r\n## 📋 Configuration Examples\r\n\r\n### Basic Multi-Turn Conversation\r\n```yaml\r\nrun:\r\n  - input: \"Hi, I need help with something\"\r\n    conversation:\r\n      max_turns: 4\r\n      user_simulator:\r\n        persona: \"polite customer with a billing question\"\r\n        objective: \"find out why charged twice this month\"\r\n        temperature: 0.6\r\n      final_evaluations:\r\n        - type: \"llm_judge\"\r\n          prompt: \"Did the agent successfully help resolve the billing issue?\"\r\n          expected: \"yes\"\r\n```\r\n\r\n### Advanced Emotional Intelligence Testing\r\n```yaml\r\nrun:\r\n  - input: \"This is ridiculous! Your product doesn't work!\"\r\n    conversation:\r\n      max_turns: 6\r\n      user_simulator:\r\n        persona: \"angry customer who had bad experience\"\r\n        objective: \"vent frustration but eventually want help\"\r\n        style: \"initially hostile, gradually becomes cooperative if handled well\"\r\n        constraints:\r\n          - \"Start with complaints and criticism\"\r\n          - \"Become more cooperative if agent shows empathy\"\r\n      termination_conditions:\r\n        - type: \"user_expresses_satisfaction\"\r\n        - type: \"agent_escalates_to_human\"\r\n      final_evaluations:\r\n        - type: \"user_satisfaction\"\r\n          satisfaction_threshold: 0.6\r\n        - type: \"conversation_flow\"\r\n          required_patterns: [\"empathy_then_solution\", \"clarification_cycle\"]\r\n```\r\n\r\n## 🧪 Testing Strategy\r\n\r\n### Unit Tests\r\n- **UserSimulator**: Tests persona-driven response generation and constraint handling\r\n- **ConversationManager**: Tests turn execution, termination logic, and error handling\r\n- **ConversationEvaluators**: Tests all new evaluation types with various scenarios\r\n- **Schema Validation**: Tests conversation schema validation and backward compatibility\r\n\r\n### Integration Tests\r\n- **Conversation Flow**: End-to-end conversation execution with realistic scenarios\r\n- **Provider Integration**: Tests both local and cloud environment providers\r\n- **Evaluation Integration**: Tests new evaluators with existing evaluation engine\r\n- **Backward Compatibility**: Ensures existing scenarios work unchanged\r\n\r\n### Performance Tests\r\n- **Resource Usage**: Memory and CPU usage validation for long conversations\r\n- **LLM API Optimization**: Token usage and rate limiting verification\r\n- **Timeout Handling**: Tests timeout mechanisms and graceful degradation\r\n\r\n## 📊 Performance Impact\r\n\r\n### Resource Usage\r\n- **Memory**: Additional ~50MB per conversation (configurable limits)\r\n- **CPU**: Minimal impact, primarily during LLM API calls\r\n- **Network**: Additional LLM API calls for user simulation (optimized with caching)\r\n\r\n### Execution Time\r\n- **Single-Turn Scenarios**: No impact (unchanged execution path)\r\n- **Multi-Turn Scenarios**: ~30-60 seconds per turn (configurable timeouts)\r\n- **Matrix Testing**: Parallel execution with rate limiting\r\n\r\n### LLM API Usage\r\n- **User Simulation**: ~200 tokens per turn (configurable)\r\n- **Evaluation**: ~100 tokens per evaluation (existing pattern)\r\n- **Rate Limiting**: Built-in throttling and retry logic\r\n\r\n## 🔒 Security & Reliability\r\n\r\n### Error Handling\r\n- **LLM API Failures**: Retry logic with exponential backoff\r\n- **Timeout Mechanisms**: Configurable timeouts per turn and total conversation\r\n- **Graceful Degradation**: Fallback to simpler simulation strategies\r\n- **Resource Limits**: Memory and execution time limits to prevent runaway conversations\r\n\r\n### Data Privacy\r\n- **No Persistent Storage**: Conversation data not stored beyond execution\r\n- **Transcript Export**: Optional full conversation export for debugging\r\n- **Logging Control**: Configurable debug logging levels\r\n\r\n## 🚦 Migration Guide\r\n\r\n### For Existing Scenarios\r\n**No changes required!** All existing scenarios continue to work unchanged:\r\n\r\n```yaml\r\n# Existing scenario - works exactly as before\r\nrun:\r\n  - input: \"Hello agent\"\r\n    evaluations:\r\n      - type: \"string_contains\"\r\n        value: \"hello\"\r\n```\r\n\r\n### For Enhanced Scenarios\r\nGradually add conversation features to existing scenarios:\r\n\r\n```yaml\r\n# Enhanced scenario - adds conversation while keeping existing evaluations\r\nrun:\r\n  - input: \"Hello agent\"\r\n    conversation:\r\n      max_turns: 2\r\n      user_simulator:\r\n        persona: \"friendly user\"\r\n        objective: \"have brief chat\"\r\n    evaluations:  # Keep existing evaluations for compatibility\r\n      - type: \"string_contains\"\r\n        value: \"hello\"\r\n```\r\n\r\n### For New Conversation-First Scenarios\r\nCreate scenarios designed for multi-turn testing:\r\n\r\n```yaml\r\n# New conversation-first scenario\r\nrun:\r\n  - input: \"I have a complex problem\"\r\n    conversation:\r\n      max_turns: 8\r\n      user_simulator:\r\n        persona: \"confused user with technical issue\"\r\n        objective: \"get step-by-step help\"\r\n      final_evaluations:\r\n        - type: \"user_satisfaction\"\r\n          satisfaction_threshold: 0.7\r\n        - type: \"conversation_length\"\r\n          optimal_turns: 5\r\n```\r\n\r\n## 📈 Future Enhancements\r\n\r\n### Planned Features\r\n- **Advanced Personas**: More sophisticated user personality modeling\r\n- **Multi-Agent Conversations**: Support for multiple agents in conversation\r\n- **Emotional Intelligence**: Enhanced emotional state tracking and response\r\n- **Conversation Analytics**: Advanced conversation quality metrics\r\n- **Custom Evaluators**: Framework for custom conversation evaluators\r\n\r\n### Performance Optimizations\r\n- **Response Caching**: Cache common user simulation responses\r\n- **Parallel Processing**: Concurrent evaluation execution\r\n- **Streaming Transcripts**: Real-time conversation monitoring\r\n- **Resource Pooling**: Shared LLM connection pools\r\n\r\n## ✅ Acceptance Criteria\r\n\r\n### Functional Requirements\r\n- [x] **Backward Compatibility**: All existing single-turn scenarios execute without modification\r\n- [x] **Multi-turn Execution**: Conversation scenarios execute successfully with realistic user simulation\r\n- [x] **User Simulation**: LLM generates persona-consistent, contextually appropriate responses\r\n- [x] **Termination Logic**: Conversation ends appropriately based on configured conditions\r\n- [x] **Evaluation System**: All new evaluation types provide meaningful insights\r\n- [x] **Matrix Testing**: Matrix scenarios support conversation parameters and execute correctly\r\n- [x] **Error Handling**: Graceful handling of LLM failures, timeouts, and edge cases\r\n\r\n### Performance Requirements\r\n- [x] **Execution Time**: Conversation scenarios complete within reasonable time limits (max 5 minutes for 8-turn conversation)\r\n- [x] **Memory Usage**: Memory usage remains within acceptable bounds (max 2GB for complex scenarios)\r\n- [x] **LLM API Usage**: Optimized token usage and rate limiting (max 1000 tokens per user simulation)\r\n- [x] **Resource Efficiency**: No memory leaks or resource accumulation across multiple scenarios\r\n\r\n### Quality Requirements\r\n- [x] **Test Coverage**: Comprehensive test coverage (unit: 90%, integration: 80%, e2e: 70%)\r\n- [x] **Error Handling**: Clear error messages and debugging capabilities\r\n- [x] **Documentation**: Well-documented examples and migration guide\r\n- [x] **Logging**: Comprehensive logging for debugging and monitoring\r\n- [x] **Metrics**: Performance metrics and conversation quality measurements\r\n\r\n## 🔍 Testing Instructions\r\n\r\n### Manual Testing\r\n1. **Backward Compatibility**: Run existing scenario suite to ensure no regressions\r\n2. **Basic Conversation**: Test simple multi-turn conversation scenarios\r\n3. **Complex Personas**: Test emotional intelligence and difficult user scenarios\r\n4. **Matrix Testing**: Test conversation parameters in matrix scenarios\r\n5. **Error Scenarios**: Test timeout, LLM failure, and resource limit scenarios\r\n\r\n### Automated Testing\r\n```bash\r\n# Run all tests\r\nbun test\r\n\r\n# Run conversation-specific tests\r\nbun test --grep \"conversation\"\r\n\r\n# Run backward compatibility tests\r\nbun test --grep \"backward\"\r\n\r\n# Run performance tests\r\nbun test --grep \"performance\"\r\n```\r\n\r\n## 📚 Documentation\r\n\r\n### Updated Documentation\r\n- **Dynamic Prompting Guide**: Comprehensive implementation guide\r\n- **Engineering Design**: Detailed technical design document\r\n- **Configuration Examples**: Real-world scenario examples\r\n- **Migration Guide**: Step-by-step migration instructions\r\n\r\n### New Documentation\r\n- **Conversation Best Practices**: Guidelines for effective conversation scenarios\r\n- **Persona Design Guide**: How to create realistic user personas\r\n- **Evaluation Strategies**: Advanced evaluation techniques for conversations\r\n- **Performance Tuning**: Optimization guidelines for conversation scenarios\r\n\r\n## 🤝 Review Checklist\r\n\r\n### Code Quality\r\n- [ ] **TypeScript**: All code properly typed with no `any` types\r\n- [ ] **Error Handling**: Comprehensive error handling and edge case coverage\r\n- [ ] **Logging**: Appropriate logging levels and debug information\r\n- [ ] **Documentation**: Inline code documentation and JSDoc comments\r\n- [ ] **Naming**: Clear, descriptive variable and function names\r\n\r\n### Architecture\r\n- [ ] **Separation of Concerns**: Clear boundaries between components\r\n- [ ] **Dependency Management**: Proper dependency injection and loose coupling\r\n- [ ] **Extensibility**: Framework supports future enhancements\r\n- [ ] **Performance**: Efficient resource usage and optimization\r\n- [ ] **Security**: Proper input validation and data handling\r\n\r\n### Testing\r\n- [ ] **Unit Tests**: Comprehensive unit test coverage for all components\r\n- [ ] **Integration Tests**: End-to-end testing of conversation flows\r\n- [ ] **Backward Compatibility**: Existing scenarios work unchanged\r\n- [ ] **Performance Tests**: Resource usage and timeout validation\r\n- [ ] **Error Scenarios**: Failure mode testing and recovery\r\n\r\n### Documentation\r\n- [ ] **User Guide**: Clear instructions for using conversation features\r\n- [ ] **Migration Guide**: Step-by-step migration for existing scenarios\r\n- [ ] **API Documentation**: Complete API reference for new components\r\n- [ ] **Examples**: Comprehensive example scenarios\r\n- [ ] **Troubleshooting**: Common issues and solutions\r\n\r\n## 🎉 Impact\r\n\r\nThis implementation significantly enhances ElizaOS scenario testing capabilities by enabling:\r\n\r\n1. **Realistic Agent Testing**: Multi-turn conversations that test real-world interaction patterns\r\n2. **Complex Behavior Assessment**: Evaluation of agent memory, emotional intelligence, and problem-solving\r\n3. **Comprehensive Coverage**: Testing scenarios previously impossible with single-turn interactions\r\n4. **Production Readiness**: Agent validation for complex customer support and assistance scenarios\r\n\r\nThe feature maintains full backward compatibility while providing a powerful new testing paradigm for sophisticated agent behavior evaluation.",
      "repository": "elizaos/eliza",
      "createdAt": "2025-08-26T15:22:47Z",
      "mergedAt": "2025-09-05T17:27:43Z",
      "additions": 7470,
      "deletions": 274
    },
    {
      "id": "PR_kwDOMT5cIs6meEtU",
      "title": "refactor: centralize business logic in server package",
      "author": "standujar",
      "number": 5864,
      "body": "# Relates to\r\n\r\n  #5860 Refactor Eliza CLI\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                           \r\n   # Risks                                                                                                                                                                                                                                                                               \r\n                                                                                                                                                                                                                                                                                         \r\n   **Low to Medium**                                                                                                                                                                                                                                                                     \r\n   - **Low**: All existing functionality maintained with backward compatibility                                                                                                                                                                                                          \r\n   - **Medium**: Large architectural change affecting core components, thoroughly tested                                                                                                                                                                                                 \r\n                                                                                                                                                                                                                                                                                         \r\n   # Background                                                                                                                                                                                                                                                                          \r\n                                                                                                                                                                                                                                                                                         \r\n   ## What does this PR do?                                                                                                                                                                                                                                                              \r\n                                                                                                                                                                                                                                                                                         \r\n   This PR refactors the ElizaOS architecture by moving all business logic from the CLI package to the server package. The CLI becomes a thin orchestration layer that delegates to the server package, eliminating code duplication and creating a cleaner separation of concerns.      \r\n                                                                                                                                                                                                                                                                                         \r\n   **Key changes:**                                                                                                                                                                                                                                                                      \r\n   - Moved 870+ lines of business logic from CLI to server package                                                                                                                                                                                                                       \r\n   - Created new `ElizaOS` orchestration class and managers (Agent, Plugin, Config) in server package                                                                                                                                                                                    \r\n   - Simplified CLI to ~170 lines of pure delegation code                                                                                                                                                                                                                                \r\n   - Removed 1,612 lines of redundant code while adding 1,211 lines of well-organized managers                                                                                                                                                                                           \r\n   - Maintained 100% backward compatibility for all existing use cases                                                                                                                                                                                                                   \r\n                                                                                                                                                                                                                                                                                         \r\n   **Files deleted from CLI:**                                                                                                                                                                                                                                                           \r\n   - `commands/start/actions/agent-start.ts` (134 lines)                                                                                                                                                                                                                                 \r\n   - `commands/start/actions/server-start.ts` (118 lines)                                                                                                                                                                                                                                \r\n   - `commands/start/utils/config-utils.ts` (73 lines)                                                                                                                                                                                                                                   \r\n   - `commands/start/utils/dependency-resolver.ts` (56 lines)                                                                                                                                                                                                                            \r\n   - `commands/start/utils/loader.ts` (120 lines)                                                                                                                                                                                                                                        \r\n   - `commands/start/utils/plugin-utils.ts` (99 lines)                                                                                                                                                                                                                                   \r\n                                                                                                                                                                                                                                                                                         \r\n   **New files in server:**                                                                                                                                                                                                                                                              \r\n   - `orchestration/ElizaOS.ts` - Main orchestration (166 lines)                                                                                                                                                                                                                         \r\n   - `managers/AgentManager.ts` - Agent lifecycle (171 lines)                                                                                                                                                                                                                            \r\n   - `managers/PluginLoader.ts` - Plugin management (140 lines)                                                                                                                                                                                                                          \r\n   - `managers/ConfigManager.ts` - Config handling (123 lines)                                                                                                                                                                                                                           \r\n   - `characters/default.ts` - Default Eliza character (271 lines)                                                                                                                                                                                                                       \r\n                                                                                                                                                                                                                                                                                         \r\n   ## What kind of change is this?                                                                                                                                                                                                                                                       \r\n                                                                                                                                                                                                                                                                                         \r\n   **Improvements** (misc. changes to existing features) - Major architectural refactoring without breaking changes                                                                                                                                                                      \r\n                                                                                                                                                                                                                                                                                         \r\n   # Documentation changes needed?                                                                                                                                                                                                                                                       \r\n                                                                                                                                                                                                                                                                                         \r\n   My changes do not require a change to the project documentation.                                                                                                                                                                                                                      \r\n   - The public API remains the same                                                                                                                                                                                                                                                     \r\n   - All commands work identically                                                                                                                                                                                                                                                       \r\n   - Internal architecture changes only                                                                                                                                                                                                                                                  \r\n                                                                                                                                                                                                                                                                                         \r\n   # Testing                                                                                                                                                                                                                                                                             \r\n                                                                                                                                                                                                                                                                                         \r\n   ## Where should a reviewer start?                                                                                                                                                                                                                                                     \r\n                                                                                                                                                                                                                                                                                         \r\n   1. Review the new architecture in `packages/server/src/`:                                                                                                                                                                                                                             \r\n      - `orchestration/ElizaOS.ts` - Main orchestration class                                                                                                                                                                                                                            \r\n      - `managers/AgentManager.ts` - Agent lifecycle management                                                                                                                                                                                                                          \r\n      - `managers/PluginLoader.ts` - Plugin loading and dependency resolution                                                                                                                                                                                                            \r\n      - `managers/ConfigManager.ts` - Configuration management                                                                                                                                                                                                                           \r\n                                                                                                                                                                                                                                                                                         \r\n   2. Check the simplified CLI in `packages/cli/src/commands/start/index.ts`                                                                                                                                                                                                             \r\n                                                                                                                                                                                                                                                                                         \r\n   ## Detailed testing steps                                                                                                                                                                                                                                                             \r\n                                                                                                                                                                                                                                                                                         \r\n   ```bash                                                                                                                                                                                                                                                                               \r\n   # Test 1: CLI with character files (standalone mode)                                                                                                                                                                                                                                  \r\n   cd eliza                                                                                                                                                                                                                                                                              \r\n   bun run build                                                                                                                                                                                                                                                                         \r\n   bunx elizaos start --character characters/cartman.json                                                                                                                                                                                                                                \r\n   # Verify: Agent starts successfully                                                                                                                                                                                                                                                   \r\n                                                                                                                                                                                                                                                                                         \r\n   # Test 2: CLI within a project                                                                                                                                                                                                                                                        \r\n   bunx elizaos create test-project --yes                                                                                                                                                                                                                                                \r\n   cd test-project                                                                                                                                                                                                                                                                       \r\n   bunx elizaos start                                                                                                                                                                                                                                                                    \r\n   # Verify: Project agents load and start                                                                                                                                                                                                                                               \r\n                                                                                                                                                                                                                                                                                         \r\n   # Test 3: Test command still works                                                                                                                                                                                                                                                    \r\n   bunx elizaos test                                                                                                                                                                                                                                                                     \r\n   # Verify: Tests run successfully                                                                                                                                                                                                                                                      \r\nr\n   # Test 5: Build and test                                                                                                                                                                                                                                                              \r\n   bun run build                                                                                                                                                                                                                                                                         \r\n   bun test                                                                                                                                                                                                                                                                              \r\n   # Verify: All tests passing test still passing                                                                                                                                                                                                                                                        \r\n   ```                                                                                                                                                                                                                                                                                   \r\n                                                                                                                                                                                                                                                                                         \r\n   **Results:**                                                                                                                                                                                                                                                                          \r\n   - ✅ Created and tested a new project outside monorepo                                                                                                                                                                                                                                 \r\n   - ✅ Verified CLI works with --character flag                                                                                                                                                                                                                                          \r\n   - ✅ Confirmed projects created with `elizaos create` work correctly                                                                                                                                                                                                                   \r\n   - ✅ All test and scenario commands functioning                                                                                                                                                                                                                                        \r\n   - ✅ Added comprehensive unit tests for new managers\"\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- New Features\n  - Introduced unified server orchestration via ElizaOS, enabling simpler startup and agent management.\n  - Added a server-provided default character with environment-aware plugin loading.\n  - Ensured Ollama is always available as a fallback plugin.\n  - Added dotenv support for loading .env at startup.\n- Refactor\n  - CLI start flow now delegates to the server for bootstrap, agent lifecycle, and character loading.\n  - Plugin parsing updated to functional APIs; centralized plugin loading and dependency resolution.\n- Chores\n  - Updated CLI dependencies, including adding the OpenAI plugin.\n- Tests\n  - Significant test suite updates aligning with the new orchestration and loaders.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-02T14:28:47Z",
      "mergedAt": null,
      "additions": 2238,
      "deletions": 1825
    },
    {
      "id": "PR_kwDOMT5cIs6mf7xp",
      "title": "feat: Show action called and result in chat UI",
      "author": "tcm390",
      "number": 5865,
      "body": "related: https://github.com/elizaOS/eliza/issues/5831\r\n\r\nresult:\r\n\r\n\r\nhttps://github.com/user-attachments/assets/632831d2-819d-4ba6-96e1-57206c08b6fc\r\n\r\n\r\n\r\n# Real-time Action Execution UI with Enhanced Tool Visualization\r\n\r\n## 🎯 Overview\r\n\r\nThis PR introduces a comprehensive **Real-time Action Execution UI System** that provides transparency and visibility into agent action execution. Users can now see actions as they happen, with detailed input/output data, status tracking, and error handling - all updated in real-time.\r\n\r\n## ✨ Features\r\n\r\n### 🔧 Interactive Tool Component\r\n- **Collapsible Tool Cards**: Each action is displayed as an expandable card showing execution details\r\n- **Real-time Status Updates**: Visual indicators for Processing → Ready → Completed → Error states\r\n- **Input/Output Display**: Formatted view of action parameters and results\r\n- **Error Handling**: Clear error messages and stack traces when actions fail\r\n\r\n### 📡 Live Action Tracking\r\n- **WebSocket Integration**: Real-time updates as actions progress through their lifecycle\r\n- **Event-Driven Architecture**: Comprehensive event system for action start/completion\r\n- **Status Broadcasting**: All connected clients receive live action status updates\r\n\r\n### 💾 Enhanced Data Persistence\r\n- **Action Message Storage**: Dedicated storage for action execution data\r\n- **Message Updates**: Ability to update existing messages with new action results\r\n- **Lifecycle Tracking**: Complete audit trail of action execution from start to finish\r\n\r\n## 🏗️ Technical Implementation\r\n\r\n### Frontend Changes\r\n\r\n#### New Components\r\n- **`actionTool.tsx`**: Core tool visualization component with:\r\n  - Collapsible interface with state-based styling\r\n  - Input/output data formatting and display\r\n  - Error handling and status indicators\r\n  - Accessibility features and keyboard navigation\r\n\r\n#### Enhanced Chat Interface\r\n- **Action Message Detection**: Automatically identifies action messages and renders them with tool UI\r\n- **Data Transformation**: Converts action messages to tool format with proper state mapping\r\n- **Seamless Integration**: Tool cards integrate naturally into the chat flow\r\n\r\n### Backend Changes\r\n\r\n#### Runtime Enhancements\r\n- **Action Lifecycle Events**: Enhanced `ACTION_STARTED` and `ACTION_COMPLETED` events with detailed payloads\r\n- **Callback System**: Added storage callback mechanism to capture action responses\r\n- **Event Emission**: Comprehensive event emission at action start and completion\r\n\r\n#### Database Layer\r\n- **New Methods**: \r\n  - `getMessageById()`: Retrieve specific messages by ID\r\n  - `updateMessage()`: Update existing messages with new data\r\n- **Message ID Handling**: Support for pre-defined message IDs in action tracking\r\n\r\n#### API Endpoints\r\n- **`POST /api/messaging/action`**: Create new action messages\r\n- **`PATCH /api/messaging/action/:id`**: Update existing action messages\r\n- **Enhanced Validation**: Comprehensive input validation and error handling\r\n\r\n#### Message Bus Service\r\n- **`notifyActionStart()`**: Broadcasts action initiation to clients\r\n- **`notifyActionUpdate()`**: Broadcasts action completion/updates to clients\r\n- **Real-time Sync**: Ensures all clients stay synchronized with action states\r\n\r\n## 🔄 User Flow\r\n\r\n```mermaid\r\nsequenceDiagram\r\n    participant U as User\r\n    participant C as Client UI\r\n    participant S as Server\r\n    participant R as Runtime\r\n    participant A as Agent Action\r\n    \r\n    U->>C: Sends message\r\n    C->>S: HTTP request\r\n    S->>R: Process message\r\n    R->>A: Execute action\r\n    R->>S: ACTION_STARTED event\r\n    S->>C: WebSocket: action started\r\n    C->>C: Show \"Processing\" tool card\r\n    A->>R: Action completes\r\n    R->>S: ACTION_COMPLETED event\r\n    S->>C: WebSocket: action completed\r\n    C->>C: Update tool card to \"Completed\"\r\n    C->>U: Show final results\r\n```\r\n\r\n## 📋 Code Changes Summary\r\n\r\n### Files Modified\r\n- `packages/client/src/components/chat.tsx` - Enhanced chat interface with action detection\r\n- `packages/client/src/hooks/use-socket-chat.ts` - Added rawMessage handling\r\n- `packages/client/src/lib/api-type-mappers.ts` - Enhanced message mapping with action data\r\n- `packages/core/src/runtime.ts` - Enhanced action lifecycle with event emission\r\n- `packages/core/src/types/events.ts` - Updated action event payload structure\r\n- `packages/plugin-bootstrap/src/index.ts` - Enhanced event handlers for action tracking\r\n- `packages/plugin-sql/src/base.ts` - Added message CRUD operations\r\n- `packages/server/src/index.ts` - Added message update method\r\n- `packages/server/src/api/messaging/core.ts` - New action endpoints\r\n- `packages/server/src/services/message.ts` - Enhanced message bus with action notifications\r\n\r\n### Files Added\r\n- `packages/client/src/components/actionTool.tsx` - New tool visualization component\r\n\r\n## 🧪 Testing\r\n\r\n### Manual Testing Scenarios\r\n1. **Action Execution**: Send a message that triggers an action and verify:\r\n   - Tool card appears with \"Processing\" state\r\n   - Updates to \"Completed\" when action finishes\r\n   - Shows correct input/output data\r\n   \r\n2. **Error Handling**: Trigger an action that fails and verify:\r\n   - Tool card shows \"Error\" state\r\n   - Error message is displayed clearly\r\n   - No UI crashes or broken states\r\n\r\n3. **Multiple Actions**: Test scenarios with multiple actions and verify:\r\n   - Each action gets its own tool card\r\n   - States update independently\r\n   - No race conditions or state conflicts\r\n\r\n### Integration Testing\r\n- WebSocket connection stability during action execution\r\n- Database consistency for action message storage\r\n- Event system reliability under load\r\n\r\n## 🔍 Screenshots\r\n\r\n### Action Processing State\r\n```\r\n┌─────────────────────────────────────┐\r\n│ 🔄 SEND_MESSAGE        Processing   │\r\n│ ▼ Show Details                      │\r\n└─────────────────────────────────────┘\r\n```\r\n\r\n### Action Completed State\r\n```\r\n┌─────────────────────────────────────┐\r\n│ ✅ SEND_MESSAGE        Completed    │\r\n│ ▼ Input:                           │\r\n│   action: \"SEND_MESSAGE\"           │\r\n│   text: \"Hello world\"              │\r\n│                                    │\r\n│ ▼ Output:                          │\r\n│   result: \"Message sent successfully\" │\r\n│   messageId: \"msg_123\"             │\r\n└─────────────────────────────────────┘\r\n```\r\n\r\n## 🚨 Breaking Changes\r\n\r\n**None** - This is a purely additive feature that enhances existing functionality without breaking current behavior.\r\n\r\n## 🎯 Benefits\r\n\r\n### For Users\r\n- **Transparency**: Clear visibility into what the agent is doing\r\n- **Feedback**: Immediate indication of action progress and completion\r\n- **Debugging**: Easy access to action inputs, outputs, and errors\r\n\r\n### For Developers\r\n- **Debugging**: Comprehensive action execution logging and visualization\r\n- **Monitoring**: Real-time insight into agent behavior and performance\r\n- **Development**: Enhanced development experience with detailed action tracking\r\n\r\n### For the Platform\r\n- **User Experience**: Significantly improved UX with real-time feedback\r\n- **Reliability**: Better error handling and user communication\r\n- **Extensibility**: Foundation for future action-related features\r\n\r\n## 🔮 Future Enhancements\r\n\r\nThis foundation enables future features like:\r\n- Action execution analytics and metrics\r\n- Custom action UI components for specific tools\r\n- Action replay and debugging tools\r\n- Performance monitoring and optimization insights\r\n\r\n## ✅ Checklist\r\n\r\n- [x] Frontend tool visualization component implemented\r\n- [x] Backend action lifecycle tracking added\r\n- [x] Database layer enhanced with message CRUD operations\r\n- [x] API endpoints for action management created\r\n- [x] WebSocket integration for real-time updates\r\n- [x] Event system enhanced for action tracking\r\n- [x] Error handling implemented throughout the stack\r\n- [x] Manual testing completed\r\n- [x] Code follows ElizaOS architectural patterns\r\n- [x] No breaking changes introduced\r\n\r\n## 🚀 Ready for Review\r\n\r\nThis PR is ready for review and testing. The implementation follows ElizaOS architectural principles, maintains backward compatibility, and provides a solid foundation for enhanced agent interaction visibility.",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-02T17:02:38Z",
      "mergedAt": "2025-09-02T21:07:19Z",
      "additions": 796,
      "deletions": 68
    },
    {
      "id": "PR_kwDOMT5cIs6m-zhX",
      "title": "feat: dev cli fix, logging cleanup, file watching optz.",
      "author": "ChristopherTrimboli",
      "number": 5881,
      "body": "This pull request introduces several improvements to development workflow and logging, with a major focus on enhancing the developer experience for monorepo and project setups that include a client UI. The most significant change is the addition of robust support for automatically starting and managing a Vite client development server alongside the backend server, including graceful shutdown and improved status reporting. Other changes include more targeted file watching for rebuilds, cleaner and less noisy logging, and expanded watcher configuration for better reliability.\r\n\r\n**Client Dev Server Integration:**\r\n\r\n* Added logic to detect the presence of a client package and automatically start a Vite development server for the client UI in monorepo or project setups. This includes handling process management, output streaming, and graceful shutdown of the client dev server. (`packages/cli/src/commands/dev/actions/dev-server.ts`) [[1]](diffhunk://#diff-889e97856af209d02514c0f8b48694ef9b085cc4527ac25326e15c309a0788edR8-R207) [[2]](diffhunk://#diff-889e97856af209d02514c0f8b48694ef9b085cc4527ac25326e15c309a0788edR292-R309) [[3]](diffhunk://#diff-889e97856af209d02514c0f8b48694ef9b085cc4527ac25326e15c309a0788edR334-R398)\r\n\r\n**Developer Experience & Logging:**\r\n\r\n<img width=\"649\" height=\"335\" alt=\"Screenshot From 2025-09-04 22-29-17\" src=\"https://github.com/user-attachments/assets/11be91cf-ba2c-4433-8f74-1a7b18894344\" />\r\n\r\n* Improved console output throughout the build and dev processes to be more concise and readable, removing references to parallel execution and reducing noise in asset copying and build steps. (`build-utils.ts`, `packages/cli/build.ts`, `packages/core/build.ts`) [[1]](diffhunk://#diff-a69aed1cd2ab488fd0350da3228e93094a9cbe3f8cf4b12fdf1ee9bbf2df3c7cL161-R161) [[2]](diffhunk://#diff-a69aed1cd2ab488fd0350da3228e93094a9cbe3f8cf4b12fdf1ee9bbf2df3c7cL202) [[3]](diffhunk://#diff-a69aed1cd2ab488fd0350da3228e93094a9cbe3f8cf4b12fdf1ee9bbf2df3c7cL221-R222) [[4]](diffhunk://#diff-a69aed1cd2ab488fd0350da3228e93094a9cbe3f8cf4b12fdf1ee9bbf2df3c7cL477-L485) [[5]](diffhunk://#diff-a69aed1cd2ab488fd0350da3228e93094a9cbe3f8cf4b12fdf1ee9bbf2df3c7cL496-R510) [[6]](diffhunk://#diff-38a7bfc3de9135d0af986757713f0fc589a906dd9be2f715932e303ae8bc7e4cL13-R13) [[7]](diffhunk://#diff-38a7bfc3de9135d0af986757713f0fc589a906dd9be2f715932e303ae8bc7e4cL41-R41) [[8]](diffhunk://#diff-38a7bfc3de9135d0af986757713f0fc589a906dd9be2f715932e303ae8bc7e4cL68-R68) [[9]](diffhunk://#diff-38a7bfc3de9135d0af986757713f0fc589a906dd9be2f715932e303ae8bc7e4cL116-R116) [[10]](diffhunk://#diff-d7ef5dd9fcf3ebdeeeb230b1ba9d7e64b93732b0a056c5b4de8c19f62ee33be2L96-R96)\r\n\r\n**File Watching Reliability:**\r\n\r\n* Expanded ignored file patterns in the default watcher configuration to avoid unnecessary rebuilds and improve performance. Added support for `awaitWriteFinish` to prevent rebuilds on partial file writes. (`packages/cli/src/commands/dev/types.ts`, `packages/cli/src/commands/dev/utils/file-watcher.ts`) [[1]](diffhunk://#diff-6023f4b19b52307d6dd173b0a6aee33857b9746a8bf84c862a13f44918134fbfR39-R42) [[2]](diffhunk://#diff-933184909707c3cb021eb27c82b442bebd11fe1b2c5559dba54e4f08b3dc6516L10-R37)\r\n\r\n* Changed file watcher to only monitor relevant TypeScript/JavaScript files in `src` (or root) and improved logging for watched files, making rebuild triggers more accurate and less noisy. (`packages/cli/src/commands/dev/utils/file-watcher.ts`)\r\n\r\n**Developer Feedback & Graceful Shutdown:**\r\n\r\n* Enhanced dev mode startup to display clear status for both backend and client servers, including URLs for API and UI. Added graceful shutdown handling for both servers on process termination signals. (`packages/cli/src/commands/dev/actions/dev-server.ts`)",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-05T05:03:13Z",
      "mergedAt": "2025-09-05T17:26:16Z",
      "additions": 543,
      "deletions": 150
    },
    {
      "id": "PR_kwDOMT5cIs6mJqE9",
      "title": "fix(cli): make plugin import verification non-fatal; address ubuntu/macos failures (2/n)",
      "author": "wtfsayo",
      "number": 5855,
      "body": "Context\\n- Ubuntu/macOS CLI tests were failing during plugin installation verification (e.g., @elizaos/plugin-bedrock, @elizaos/plugin-elevenlabs) due to dynamic import checks in ephemeral environments.\\n\\nChanges\\n- Do NOT bypass verification globally. Instead, treat verification failures as non-fatal: warn and proceed so tests can continue.\\n- Keep GitHub-based installs unverified (unchanged) because source repos may not be importable immediately in ephemeral contexts.\\n- No changes to user-facing commands; only affects internal install verification behavior.\\n\\nWhy\\n- This preserves correctness: we still attempt to verify and log failures.\\n- Prevents CI flakes where optional verification blocks entire suite.\\n\\nFollow-ups\\n- Windows agent CRUD path quoting will be fixed in a separate PR.\\n- If residual failures remain, we can further narrow verification for specific command contexts only during tests.",
      "repository": "elizaos/eliza",
      "createdAt": "2025-08-31T09:11:30Z",
      "mergedAt": null,
      "additions": 443,
      "deletions": 42
    }
  ],
  "codeChanges": {
    "additions": 16810,
    "deletions": 3319,
    "files": 151,
    "commitCount": 233
  },
  "completedItems": [
    {
      "title": "feat: scenarios dynamic prompting + spec",
      "prNumber": 5824,
      "type": "feature",
      "body": "# Draft Pull Request: Implement Dynamic Prompting (Multi-Turn Conversations) in ElizaOS Scenarios\r\n\r\n## 🎯 Overview\r\n\r\nThis PR implements **Dynamic Prompting** (multi-turn conversations) in ElizaOS scenarios, enabling sophisticated testing ",
      "files": [
        "ELIZA-669-Dynamic-Prompting-Ticket.md",
        "ELIZA-669-Implementation-Code.md",
        "bun.lock",
        "packages/cli/src/commands/scenario/DYNAMIC_PROMPTING_ENG_DESIGN.md",
        "packages/cli/src/commands/scenario/DYNAMIC_PROMPTING_GUIDE.md",
        "packages/cli/src/commands/scenario/IMPLEMENTATION_VALIDATION_REPORT.md",
        "packages/cli/src/commands/scenario/SCENARIO_REPORT_SPEC.md",
        "packages/cli/src/commands/scenario/examples/basic-conversation.scenario.yaml",
        "packages/cli/src/commands/scenario/examples/conversation-matrix.matrix.yaml",
        "packages/cli/src/commands/scenario/examples/customer-support-conversation.scenario.yaml",
        "packages/cli/src/commands/scenario/examples/emotional-intelligence.scenario.yaml",
        "packages/cli/src/commands/scenario/examples/knowledge-transfer.scenario.yaml",
        "packages/cli/src/commands/scenario/examples/legacy-compatibility.scenario.yaml",
        "packages/cli/src/commands/scenario/examples/minimal-test.scenario.yaml",
        "packages/cli/src/commands/scenario/examples/simple-test.scenario.yaml",
        "packages/cli/src/commands/scenario/examples/technical-troubleshooting.scenario.yaml",
        "packages/cli/src/commands/scenario/examples/working-test.scenario.yaml",
        "packages/cli/src/commands/scenario/index.ts",
        "packages/cli/src/commands/scenario/src/ConversationEvaluators.ts",
        "packages/cli/src/commands/scenario/src/ConversationManager.ts",
        "packages/cli/src/commands/scenario/src/EvaluationEngine.ts",
        "packages/cli/src/commands/scenario/src/LocalEnvironmentProvider.ts",
        "packages/cli/src/commands/scenario/src/UserSimulator.ts",
        "packages/cli/src/commands/scenario/src/__tests__/ConversationEvaluators.test.ts",
        "packages/cli/src/commands/scenario/src/__tests__/ConversationManager.test.ts",
        "packages/cli/src/commands/scenario/src/__tests__/UserSimulator.test.ts",
        "packages/cli/src/commands/scenario/src/__tests__/backwards-compatibility.test.ts",
        "packages/cli/src/commands/scenario/src/__tests__/e2e-integration.test.ts",
        "packages/cli/src/commands/scenario/src/__tests__/schema-backwards-compatibility.test.ts",
        "packages/cli/src/commands/scenario/src/conversation-types.ts",
        "packages/cli/src/commands/scenario/src/runtime-factory.ts",
        "packages/cli/src/commands/scenario/src/schema.ts",
        "packages/cli/package.json",
        "packages/cli/packages/cli/src/commands/scenario/_logs_/run-run-2025-08-29-001-07-41-43.json",
        "packages/cli/packages/cli/src/commands/scenario/_logs_/run-run-2025-08-29-001-07-42-28.json",
        "packages/cli/packages/cli/src/commands/scenario/_logs_/run-run-2025-08-29-001-07-43-17.json",
        "packages/cli/packages/cli/src/commands/scenario/_logs_/run-run-2025-08-29-001-07-47-27.json",
        "packages/cli/packages/cli/src/commands/scenario/_logs_/run-run-2025-08-29-001-07-51-09.json",
        "packages/cli/packages/cli/src/commands/scenario/_logs_/run-run-2025-08-29-001-07-52-30.json",
        ".cursor",
        ".gitignore",
        "packages/cli/src/commands/report/generate.ts",
        "packages/cli/src/commands/scenario/docs/README.md",
        "packages/cli/src/commands/scenario/docs/scenario-runner-spec.md",
        "packages/cli/src/commands/scenario/docs/scenarios.md",
        "packages/cli/src/commands/scenario/examples/test-github-issues.scenario.yaml",
        "packages/cli/src/commands/scenario/src/E2BEnvironmentProvider.ts",
        "packages/cli/src/commands/scenario/src/EnhancedEvaluationEngine.ts",
        "packages/cli/src/commands/scenario/src/TrajectoryReconstructor.ts",
        "packages/cli/src/commands/scenario/src/matrix-orchestrator.ts",
        "packages/cli/src/commands/scenario/docs/file-format-spec.md",
        "packages/cli/src/commands/scenario/examples/analyze-past-trade.scenario.yaml",
        "packages/cli/src/commands/scenario/examples/answer-roadmap-questions.scenario.yaml",
        "packages/cli/src/commands/scenario/examples/check-coinbase-balance.scenario.yaml",
        "packages/cli/src/commands/scenario/examples/debug-llm-judge.scenario.yaml",
        "packages/cli/src/commands/scenario/examples/enhanced-demo.scenario.yaml",
        "packages/cli/src/commands/scenario/examples/llm-judge-test.scenario.yaml",
        "packages/cli/src/commands/scenario/examples/llm-judge-with-capabilities.scenario.yaml",
        "packages/cli/src/commands/scenario/examples/test-basic.scenario.yaml",
        "packages/cli/src/commands/scenario/examples/trajectory-demo.scenario.yaml"
      ]
    },
    {
      "title": "fix: logger debug level & style",
      "prNumber": 5849,
      "type": "bugfix",
      "body": "# Relates to\r\n\r\n<!-- Fixed logger debug level not working and improved terminal readability -->\r\n\r\n# Risks\r\n\r\nLow. This change only affects logging output presentation and fixes a bug with debug level logging. No functional changes to core ",
      "files": [
        "packages/core/src/logger.ts",
        "packages/core/src/runtime.ts",
        "packages/cli/tests/commands/agent.test.ts",
        "packages/cli/tests/commands/plugins.test.ts",
        "packages/core/src/__tests__/runtime.test.ts"
      ]
    },
    {
      "title": "fix(core): fix TypeScript declarations in npm package",
      "prNumber": 5848,
      "type": "bugfix",
      "body": "# Relates to\r\n\r\n  TypeScript declarations build optimization.\r\n\r\n  # Risks\r\n\r\n  **Low risk** - Configuration changes only, no functional code changes.\r\n\r\n  # Background\r\n\r\n  ## What does this PR do?\r\n\r\n  Optimizes the TypeScript build confi",
      "files": [
        "bun.lock",
        "packages/core/build.ts",
        "packages/core/package.json",
        "packages/core/tsconfig.browser.json",
        "packages/core/tsconfig.declarations.json",
        "packages/core/tsconfig.json"
      ]
    },
    {
      "title": "fix: CLI NPM Deployment Path Resolution Issue",
      "prNumber": 5852,
      "type": "bugfix",
      "body": "## 🐛 Fix: NPM Deployment Path Resolution Issue\r\n\r\n### Problem\r\nWhen the CLI is published to NPM and installed globally (e.g., `bun i -g @elizaos/cli`), it fails with the error:\r\n```\r\nCannot find module '/home/runner/work/eliza/eliza/packag",
      "files": [
        "bun.lock",
        "packages/cli/build.ts",
        "packages/cli/package.json",
        "packages/cli/src/utils/copy-template.ts",
        "packages/cli/src/utils/display-banner.ts",
        "packages/cli/src/utils/user-environment.ts",
        "packages/core/build.ts",
        "packages/core/package.json"
      ]
    },
    {
      "title": "fix: resolve build warnings and CSS syntax errors",
      "prNumber": 5851,
      "type": "bugfix",
      "body": "## Problem\r\nBuild was generating warnings:\r\n- CSS syntax errors from empty `:is()` selectors in webkit scrollbar styles\r\n- Missing asset reference in CLI build  \r\n- Bundle size warnings\r\n\r\n## Solution\r\n- Remove dead reference to non-existen",
      "files": [
        "packages/cli/build.ts",
        "packages/client/src/components/secret-panel.tsx",
        "packages/client/src/index.css",
        "packages/client/vite.config.ts",
        "bun.lock",
        "packages/client/cypress.config.cjs",
        "packages/client/cypress/e2e/03-spa-routing.cy.ts",
        "packages/client/cypress/support/component.ts",
        "packages/client/cypress/support/e2e.ts",
        "packages/client/package.json",
        "packages/client/scripts/test-e2e-with-server.sh",
        "packages/client/vite.config.cypress.ts"
      ]
    },
    {
      "title": "fix(discord): Enable image generation in Discord channels",
      "prNumber": 5861,
      "type": "bugfix",
      "body": "related: https://github.com/elizaOS/eliza/issues/5809\r\n\r\nresult:\r\n\r\n\r\n<img width=\"917\" height=\"668\" alt=\"Screenshot 2025-09-02 at 12 15 04 AM\" src=\"https://github.com/user-attachments/assets/c90d8494-eeec-4353-b633-91e4fc824c5d\" />\r\n\r\n\r\n# F",
      "files": [
        "packages/plugin-bootstrap/src/actions/imageGeneration.ts",
        "packages/plugin-bootstrap/src/index.ts"
      ]
    },
    {
      "title": "fix: minor docker improvements project-tee-starter",
      "prNumber": 5859,
      "type": "bugfix",
      "body": "these are just some minor improvements to the docker-related stuff in project-tee-starter to match what's in project-starter. specifically:\r\n\r\n1. add DOCKER_IMAGE to .env.example -- it should be there as its req for docker deployments\r\n2. h",
      "files": [
        "packages/project-tee-starter/.env.example",
        "packages/project-tee-starter/docker-compose.yaml"
      ]
    },
    {
      "title": "fix: add docker files to project-starter",
      "prNumber": 5858,
      "type": "bugfix",
      "body": "this is a pr to add dockerization to project-starter. so now users can do local project development , create a docker image, and then deploy it to the cloud provider of their choice. \r\n\r\nfor example with phala, users can do it all from the ",
      "files": [
        "packages/project-starter/.dockerignore",
        "packages/project-starter/.env.example",
        "packages/project-starter/Dockerfile",
        "packages/project-starter/docker-compose.yaml",
        "packages/project-tee-starter/.env.example",
        "packages/project-tee-starter/docker-compose.yaml"
      ]
    },
    {
      "title": "feat: Embeds CLI version into build output",
      "prNumber": 5869,
      "type": "feature",
      "body": "## 🐛 Fix: NPM CLI Package Runtime Path Resolution Issue\n\n### Problem\nThe published NPM package `@elizaos/cli@1.4.3-alpha.0` was failing with the following error when users tried to run `elizaos create` or `elizaos start`:\n\n```\nError: Canno",
      "files": [
        "bun.lock",
        "packages/cli/.gitignore",
        "packages/cli/build.ts",
        "packages/cli/src/scripts/generate-version.ts",
        "packages/cli/src/utils/copy-template.ts",
        "packages/cli/src/utils/display-banner.ts",
        "packages/cli/src/utils/user-environment.ts"
      ]
    },
    {
      "title": "docs: fix broken path",
      "prNumber": 5866,
      "type": "bugfix",
      "body": "fixed broken path in readme",
      "files": [
        "packages/project-tee-starter/README.md"
      ]
    },
    {
      "title": "feat: Show action called and result in chat UI",
      "prNumber": 5865,
      "type": "feature",
      "body": "related: https://github.com/elizaOS/eliza/issues/5831\r\n\r\nresult:\r\n\r\n\r\nhttps://github.com/user-attachments/assets/632831d2-819d-4ba6-96e1-57206c08b6fc\r\n\r\n\r\n\r\n# Real-time Action Execution UI with Enhanced Tool Visualization\r\n\r\n## 🎯 Overview\r",
      "files": [
        "packages/client/src/components/actionTool.tsx",
        "packages/client/src/components/chat.tsx",
        "packages/client/src/hooks/use-socket-chat.ts",
        "packages/client/src/lib/api-type-mappers.ts",
        "packages/core/src/runtime.ts",
        "packages/core/src/types/events.ts",
        "packages/plugin-bootstrap/src/index.ts",
        "packages/plugin-sql/src/base.ts",
        "packages/server/src/api/messaging/core.ts",
        "packages/server/src/index.ts",
        "packages/server/src/services/message.ts"
      ]
    },
    {
      "title": "feat: Adds alpha NPM release workflow",
      "prNumber": 5863,
      "type": "feature",
      "body": "# 🚀 NPM Alpha Release Workflow - Updated Configuration\r\n\r\n## Summary\r\n\r\nThis PR updates the NPM alpha release workflow to improve deployment reliability, enforce better quality control, and ensure consistent tooling throughout the CI/CD pi",
      "files": [
        ".github/workflows/npm-alpha.yml",
        "package.json"
      ]
    },
    {
      "title": "feat: Unifies release workflow for NPM packages",
      "prNumber": 5877,
      "type": "feature",
      "body": "## 📋 PR: Unify NPM Release Workflows with Alpha Pattern\n\n### Summary\nThis PR aligns all NPM release workflows with the successful pattern established in the `npm-alpha.yml` workflow, creating a unified and maintainable release pipeline.\n\n#",
      "files": [
        ".github/workflows/npm-alpha.yml",
        ".github/workflows/pre-release.yml",
        ".github/workflows/release.yaml",
        "package.json"
      ]
    },
    {
      "title": "fix(cli): fix port detection for automatic fallback",
      "prNumber": 5876,
      "type": "bugfix",
      "body": " # Risks\r\n\r\n  Low risk. This fix improves error handling and prevents the CLI from crashing when default port is occupied.\r\n\r\n  # Background\r\n\r\n  ## What does this PR do?\r\n\r\n  This PR fixes the port detection mechanism in the ElizaOS CLI to",
      "files": [
        "packages/cli/src/commands/start/actions/server-start.ts",
        "packages/cli/src/utils/__tests__/port-handling.test.ts",
        "packages/cli/src/utils/port-handling.ts"
      ]
    },
    {
      "title": "fix: simplify alpha CLI tests to run basic smoke tests",
      "prNumber": 5875,
      "type": "bugfix",
      "body": "## Problem\n\nThe alpha CLI tests workflow was overly complex and fragile:\n- Running full TypeScript test suites that may not be compatible with the published alpha package\n- Complex setup with shims and cross-env dependencies\n- Tests were to",
      "files": [
        ".github/workflows/alpha-cli-tests.yml"
      ]
    },
    {
      "title": "feat: Update bun to latest version 1.2.21 across monorepo",
      "prNumber": 5874,
      "type": "feature",
      "body": "## 🚀 Update Bun to Latest Version 1.2.21\n\n### Problem\nThe ElizaOS monorepo was using inconsistent and outdated versions of Bun across different packages and GitHub workflows:\n- Root package.json: bun@1.2.15, @types/bun: 'latest'\n- CLI pack",
      "files": [
        ".devcontainer/devcontainer.json",
        ".github/workflows/alpha-cli-tests.yml",
        ".github/workflows/cli-tests.yml",
        ".github/workflows/client-cypress-tests.yml",
        ".github/workflows/jsdoc-automation.yml",
        ".github/workflows/npm-alpha.yml",
        ".github/workflows/tauri-ci.yml",
        ".github/workflows/update-news.yml",
        "package.json",
        "packages/api-client/package.json",
        "packages/cli/package.json",
        "packages/core/package.json",
        "packages/plugin-bootstrap/package.json"
      ]
    },
    {
      "title": "feat: Add alpha CLI tests workflow with NPM dependency",
      "prNumber": 5873,
      "type": "feature",
      "body": "## Summary\n\nThis PR introduces a new GitHub Actions workflow to test the published alpha version of the CLI package, ensuring the npm-published version works correctly across different platforms.\n\n## Problem\n\nPreviously, there was no automa",
      "files": [
        ".devcontainer/devcontainer.json",
        ".github/workflows/alpha-cli-tests.yml",
        ".github/workflows/cli-prod-validation.yml",
        ".github/workflows/cli-tests.yml",
        ".github/workflows/client-cypress-tests.yml",
        ".github/workflows/daily-code-quality-analysis.yml",
        ".github/workflows/jsdoc-automation.yml",
        ".github/workflows/npm-alpha.yml",
        ".github/workflows/tauri-ci.yml",
        ".github/workflows/update-news.yml",
        "package.json",
        "packages/api-client/package.json",
        "packages/cli/package.json",
        "packages/core/package.json",
        "packages/plugin-bootstrap/package.json"
      ]
    },
    {
      "title": "fix: crypto-browserify dependency issue",
      "prNumber": 5872,
      "type": "bugfix",
      "body": "## Problem\nThe @elizaos/core package was failing with the error:\n\n\n## Root Cause\nThe  file was importing  from  for encryption/decryption operations, but  was only listed as an external dependency in the build configuration (), not as a pro",
      "files": [
        "bun.lock",
        "packages/core/build.ts",
        "packages/core/package.json",
        "packages/core/src/__tests__/runtime.test.ts"
      ]
    },
    {
      "title": "chore: Bump to 1.5.5-alpha.1",
      "prNumber": 5871,
      "type": "other",
      "body": "This PR bumps the version across the entire monorepo from 1.4.3-alpha.6 to 1.5.5-alpha.1.\n\n## Changes Made\n\n### Version Updates\n- Updated version in  from 1.4.3-alpha.6 to 1.5.5-alpha.1\n- Updated version in all package.json files across the",
      "files": [
        "lerna.json",
        "packages/api-client/package.json",
        "packages/cli/package.json",
        "packages/config/package.json",
        "packages/core/package.json",
        "packages/plugin-bootstrap/package.json",
        "packages/plugin-dummy-services/package.json",
        "packages/plugin-sql/package.json",
        "packages/server/package.json",
        "packages/test-utils/package.json"
      ]
    },
    {
      "title": "fix: Unhandled Promise in Action Update",
      "prNumber": 5870,
      "type": "bugfix",
      "body": "related: https://github.com/elizaOS/eliza/pull/5865#discussion_r2317180747",
      "files": [
        "packages/plugin-bootstrap/src/index.ts"
      ]
    },
    {
      "title": "refactor: Move standalone files to examples directory",
      "prNumber": 5880,
      "type": "refactor",
      "body": "## Problem\n\nThe root directory of the project contained two standalone example files ( and ) that were cluttering the root directory structure. These files are example implementations rather than core project files and should be properly or",
      "files": [
        ".gitignore",
        "examples/standalone-cli-chat.ts",
        "examples/standalone.ts"
      ]
    },
    {
      "title": "feat: Add standalone CLI chat interface with improved UX",
      "prNumber": 5879,
      "type": "feature",
      "body": "## Changes\n- Add new standalone CLI chat interface (`standalone-cli-chat.ts`)\n- Enhanced interactive chat experience with improved UX\n- Version alignment to 1.5.8-alpha.1 across all packages\n- Updated TypeScript configuration\n\n## Features A",
      "files": [
        "standalone-cli-chat.ts"
      ]
    },
    {
      "title": "fix: Add DOM types to TypeScript configuration",
      "prNumber": 5878,
      "type": "bugfix",
      "body": "## Problem\n\nThe build was failing with TypeScript compilation errors in `packages/core/src/utils/server-health.ts`:\n\n```\nsrc/utils/server-health.ts(41,22): error TS2339: Property 'abort' does not exist on type 'AbortController'.\nsrc/utils/s",
      "files": [
        "tsconfig.json"
      ]
    },
    {
      "title": "fix: LOG_JSON_FORMAT not working",
      "prNumber": 5885,
      "type": "bugfix",
      "body": "# Risks\r\n- Low: Minimal code added, extensive testing, backwards compatible, no interface changes.\r\n\r\n# Background\r\n- When LOG_JSON_FORMAT=true, you will get the following error when trying to use logger:\r\n```\r\n💩💩💩 $ elizaos dev\r\nwarn: A",
      "files": [
        "packages/core/src/__tests__/logger-browser-node.test.ts",
        "packages/core/src/__tests__/logger.test.ts",
        "packages/core/src/logger.ts"
      ]
    },
    {
      "title": "fix: Prevent excessive SECRET_SALT error logging",
      "prNumber": 5884,
      "type": "bugfix",
      "body": "## Problem\n\nThe application was logging 'SECRET_SALT is not set or using default value' error multiple times during startup, causing excessive log noise. This happens because:\n\n1. The `getSalt()` function logs an error every time it's calle",
      "files": [
        "packages/core/src/__tests__/settings.test.ts",
        "packages/core/src/settings.ts"
      ]
    },
    {
      "title": "fix: add SERVER_HOST support to dev command",
      "prNumber": 5883,
      "type": "bugfix",
      "body": "# Risks                                                                                                                                                                                                                                         ",
      "files": [
        "packages/cli/src/commands/dev/actions/dev-server.ts",
        "packages/cli/src/commands/scenario/src/runtime-factory.ts",
        "packages/cli/src/commands/test/actions/e2e-tests.ts"
      ]
    },
    {
      "title": "fix: Scope npmPackage field for registry entries",
      "prNumber": 5882,
      "type": "bugfix",
      "body": "(related to issue #5813)\r\n\r\na bug got introduced resulting in incorrect construction of the npmPackages value. This is causing a malformed addition to the registry when users do elizaos publish, specifically, it is constructing the npmPacka",
      "files": [
        "packages/cli/src/commands/publish/actions/npm-publish.ts",
        "packages/cli/src/utils/publisher.ts",
        "packages/cli/tests/commands/publish.test.ts"
      ]
    },
    {
      "title": "feat: dev cli fix, logging cleanup, file watching optz.",
      "prNumber": 5881,
      "type": "feature",
      "body": "This pull request introduces several improvements to development workflow and logging, with a major focus on enhancing the developer experience for monorepo and project setups that include a client UI. The most significant change is the add",
      "files": [
        "build-utils.ts",
        "bun.lock",
        "packages/cli/build.ts",
        "packages/cli/src/commands/dev/actions/dev-server.ts",
        "packages/cli/src/commands/dev/types.ts",
        "packages/cli/src/commands/dev/utils/file-watcher.ts",
        "packages/core/build.ts",
        "packages/plugin-quick-starter/build.ts",
        "packages/plugin-starter/build.ts",
        "packages/project-starter/build.ts",
        "packages/project-tee-starter/build.ts",
        "packages/server/build.ts",
        "scripts/dev-watch.js"
      ]
    },
    {
      "title": "fix: use user's request for image generation instead of agent profile",
      "prNumber": 5888,
      "type": "bugfix",
      "body": "# Relates to\r\n\r\n  Fix for image generation action generating agent images instead of user-requested images\r\n\r\n  # Risks\r\n\r\n  Low - Only changes the prompt template for image generation, no breaking changes to API or functionality\r\n\r\n  # Bac",
      "files": [
        ".prettierignore",
        "packages/plugin-bootstrap/src/actions/imageGeneration.ts"
      ]
    },
    {
      "title": "fix: (cli) resolve ts compilation errors during build in scenario command",
      "prNumber": 5887,
      "type": "bugfix",
      "body": "## Problem\r\nThe CLI build was failing TypeScript declaration generation due to compilation errors in the scenario command files:\r\n- Unused `runtime` parameter in ConversationLengthEvaluator\r\n- Type indexing issue in ConversationFlowEvaluato",
      "files": [
        "packages/cli/src/commands/scenario/src/ConversationEvaluators.ts",
        "packages/cli/src/commands/scenario/src/ConversationManager.ts",
        "packages/cli/src/commands/scenario/src/TrajectoryReconstructor.ts",
        "packages/cli/src/commands/scenario/src/UserSimulator.ts"
      ]
    }
  ],
  "topContributors": [
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 451.0031109953088,
      "prScore": 433.7851109953088,
      "issueScore": 0,
      "reviewScore": 15.5,
      "commentScore": 1.718,
      "summary": null
    },
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 259.41122003324074,
      "prScore": 248.81122003324072,
      "issueScore": 0,
      "reviewScore": 10,
      "commentScore": 0.6000000000000001,
      "summary": null
    },
    {
      "username": "standujar",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16385918?u=718bdcd1585be8447bdfffb8c11ce249baa7532d&v=4",
      "totalScore": 178.80501854708933,
      "prScore": 153.79101854708935,
      "issueScore": 0,
      "reviewScore": 23.5,
      "commentScore": 1.5139999999999998,
      "summary": null
    },
    {
      "username": "yungalgo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/113615973?u=92e0f29f7e2fbb8ce46ed13c51f692ca803de02d&v=4",
      "totalScore": 171.2912067200171,
      "prScore": 144.0912067200171,
      "issueScore": 0,
      "reviewScore": 27,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "tcm390",
      "avatarUrl": "https://avatars.githubusercontent.com/u/60634884?u=c6c41679b8322eaa0c81f72e0b4ed95e80f0ac16&v=4",
      "totalScore": 100.71224594499039,
      "prScore": 100.51224594499038,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "wookosh",
      "avatarUrl": "https://avatars.githubusercontent.com/u/120273332?u=493e01d0863a55ed139425760447079b96ef931d&v=4",
      "totalScore": 42.40160788330364,
      "prScore": 42.40160788330364,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "jonathanprozzi",
      "avatarUrl": "https://avatars.githubusercontent.com/u/9438776?u=25b5a5b22cfe26724ee1ebd869c378fc65196987&v=4",
      "totalScore": 37.40307004804858,
      "prScore": 37.06307004804858,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.33999999999999997,
      "summary": null
    },
    {
      "username": "0xbbjoker",
      "avatarUrl": "https://avatars.githubusercontent.com/u/54844437?u=90fe1762420de6ad493a1c1582f1f70c0d87d8e2&v=4",
      "totalScore": 33.971147180559946,
      "prScore": 13.631147180559946,
      "issueScore": 0,
      "reviewScore": 20,
      "commentScore": 0.33999999999999997,
      "summary": null
    },
    {
      "username": "MozirDmitriy",
      "avatarUrl": "https://avatars.githubusercontent.com/u/193700874?v=4",
      "totalScore": 20.630306144334053,
      "prScore": 20.630306144334053,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "monilpat",
      "avatarUrl": "https://avatars.githubusercontent.com/u/15067321?v=4",
      "totalScore": 19.314,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 18,
      "commentScore": 1.3139999999999998,
      "summary": null
    },
    {
      "username": "claude",
      "avatarUrl": "https://avatars.githubusercontent.com/in/1236702?v=4",
      "totalScore": 9.876,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 9,
      "commentScore": 0.8759999999999999,
      "summary": null
    },
    {
      "username": "1BDO",
      "avatarUrl": "https://avatars.githubusercontent.com/u/210645034?v=4",
      "totalScore": 7.699147180559946,
      "prScore": 7.159147180559946,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.54,
      "summary": null
    },
    {
      "username": "borisudovicic",
      "avatarUrl": "https://avatars.githubusercontent.com/u/31806472?u=27713fbe603baae91ef519990facbacd6c23e93d&v=4",
      "totalScore": 6,
      "prScore": 0,
      "issueScore": 6,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "DarrenZal",
      "avatarUrl": "https://avatars.githubusercontent.com/u/3492713?u=f8a48af1a6c53497aff9a9b440d74dfa25669f22&v=4",
      "totalScore": 4,
      "prScore": 0,
      "issueScore": 4,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "MagdiejamesNYC",
      "avatarUrl": "https://avatars.githubusercontent.com/u/44060696?v=4",
      "totalScore": 2.2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "thedotmack",
      "avatarUrl": "https://avatars.githubusercontent.com/u/683968?u=fdb9ab5845aa92dbd5a9de4abea58d43b46cc0cd&v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "objp2",
      "avatarUrl": "https://avatars.githubusercontent.com/u/189950592?v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    }
  ],
  "newPRs": 32,
  "mergedPRs": 30,
  "newIssues": 7,
  "closedIssues": 5,
  "activeContributors": 20
}
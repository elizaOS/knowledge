{
  "interval": {
    "intervalStart": "2025-09-14T00:00:00.000Z",
    "intervalEnd": "2025-09-21T00:00:00.000Z",
    "intervalType": "week"
  },
  "repository": "elizaos/eliza",
  "overview": "From 2025-09-14 to 2025-09-21, elizaos/eliza had 9 new PRs (7 merged), 2 new issues, and 10 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDOMT5cIs7K1ixs",
      "title": "Prepare ETH Tokyo Workshop",
      "author": "linear",
      "number": 5955,
      "repository": "elizaos/eliza",
      "body": "",
      "createdAt": "2025-09-10T16:04:27Z",
      "closedAt": "2025-09-14T06:47:15Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7LhMWr",
      "title": "bake build.eliza page into docs",
      "author": "linear",
      "number": 5974,
      "repository": "elizaos/eliza",
      "body": "",
      "createdAt": "2025-09-14T02:45:43Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7LsZTR",
      "title": "Clean Core Build Proof",
      "author": "borisudovicic",
      "number": 5976,
      "repository": "elizaos/eliza",
      "body": "* Remove all hacks/forks from core.\n* Deliver a fully working, clean build of /core (pure JS/TS).\n* Validate in CI/CD and ensure compatibility across Node, Bun, and browser builds.",
      "createdAt": "2025-09-15T10:52:53Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 0
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDOMT5cIs6nQigd",
      "title": "fix: transform local file paths to API URLs for web client image display",
      "author": "standujar",
      "number": 5890,
      "body": "# Relates to\r\n\r\n  Fix image display issues in web client for generated images from OpenRouter plugin\r\n\r\n  # Risks\r\n\r\n  **Low** - Changes are isolated to server-side path transformation logic. No breaking changes to existing APIs or plugins.\r\n\r\n  # Background\r\n\r\n  ## What does this PR do?\r\n\r\n  This PR implements a comprehensive solution for displaying images generated by AI models (OpenRouter, OpenAI, etc.) in the ElizaOS web client. Previously, images worked in Discord/Telegram but returned 404 errors in the web interface\r\n  because the client received local file paths instead of HTTP URLs.\r\n\r\n  The solution includes:\r\n  1. **Configurable data directories** via environment variables for flexibility\r\n  2. **Server-side path transformation** to convert local paths to API URLs\r\n  3. **Fix for Express sendFile** to properly serve media files\r\n  4. **Consistent attachment handling** across all messaging endpoints\r\n\r\n  ## What kind of change is this?\r\n\r\n  - ✅ **Bug fixes** (fixes 404 errors for generated images in web client)\r\n  - ✅ **Improvements** (adds configurable data directories via environment variables)\r\n  - ✅ **Features** (adds automatic path-to-URL transformation for attachments)\r\n\r\n  # Documentation changes needed?\r\n\r\n  - ✅ My changes require a change to the project documentation.\r\n  - ✅ I have updated the documentation accordingly (.env.example updated with new environment variables)\r\n\r\n  # Testing\r\n\r\n  ## Where should a reviewer start?\r\n\r\n  1. Review `packages/server/src/utils/media-transformer.ts` - Core transformation logic\r\n  2. Check `packages/core/src/utils/paths.ts` - Configurable path utilities\r\n  3. Verify changes in messaging endpoints for attachment transformation\r\n\r\n  ## Detailed testing steps\r\n\r\n  1. **Setup OpenRouter with image generation model:**\r\n     ```bash\r\n     # In .env, configure:\r\n     OPENROUTER_API_KEY=your_key\r\n     OPENROUTER_IMAGE_GENERATION_MODEL=google/gemini-2.5-flash-image-preview\r\n     ```\r\n\r\n  2. **Test image generation in web client**:\r\n    - Start the server: bun run start\r\n    - Open web client at http://localhost:3000\r\n    - Send message: \"Generate an image of a cat on fire\"\r\n    - Verify image displays correctly (no 404 error)\r\n  3. **Test backwards compatibility**:\r\n    - Verify Discord/Telegram plugins still receive and display images correctly\r\n    - Check that existing file uploads still work\r\n  4. **Test environment variable configuration**:\r\n \r\n ## Set custom data directory\r\n  ```bash\r\n  ELIZA_DATA_DIR=/custom/path bun run start\r\n  ```\r\nVerify images are saved to and served from custom location\r\n\r\n ## Before\r\n\r\n  - Web client shows broken image icon\r\n  - Network tab shows 404 for /Users/.../image.png\r\n\r\n  ## After\r\n\r\n  - Images display correctly in web client\r\n  - Network tab shows successful 200 for /media/generated/agentId/image.png\r\n\r\n  # Key Changes:\r\n\r\n  Core Package\r\n\r\n  - paths.ts: New utility for configurable data directories with env var support\r\n  - paths.test.ts: Comprehensive tests for path utilities\r\n  - index.node.ts: Export path utilities for server usage\r\n\r\n  Server Package\r\n\r\n  - media-transformer.ts: Transform local file paths to API URLs\r\n  - messaging/*.ts: Apply transformation before sending to clients\r\n  - index.ts: Fix Express sendFile for absolute paths with fallback\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- New Features\n  - Configurable data and upload directories via environment variables.\n  - Automatic transformation of attachment file paths to API URLs in APIs and real-time broadcasts.\n  - More reliable SPA fallback and media serving for generated and uploaded files.\n\n- Bug Fixes\n  - Safer, type-specific upload directories with strengthened path validation.\n\n- Refactor\n  - Centralized path resolution across server features; legacy path handling removed.\n\n- Documentation\n  - .env example expanded with data directory configuration options.\n\n- Tests\n  - Added comprehensive tests for data directory and path resolution behavior.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-07T15:15:55Z",
      "mergedAt": "2025-09-15T18:33:04Z",
      "additions": 741,
      "deletions": 88
    },
    {
      "id": "PR_kwDOMT5cIs6o5XkV",
      "title": "fix(cli): comprehensive Windows CI test improvements and dev command enhancements",
      "author": "wtfsayo",
      "number": 5982,
      "body": "## Overview\n\nThis PR addresses Windows CI flakiness by implementing comprehensive improvements to the dev command tests and fixing process management issues that were causing test failures on Windows in CI environments.\n\n## Root Cause Analysis\n\nThe original issues were multi-faceted:\n1. **Process Management**: Windows handles process termination differently than Unix systems, leading to hanging processes\n2. **Port Conflicts**: Tests weren't properly cleaning up ports between runs\n3. **Stream Handling**: Overlapping stdout/stderr reads were causing race conditions\n4. **Test Environment**: Missing proper test mode flags and non-interactive settings\n\n## Changes Made\n\n### 1. Enhanced Process Management (`packages/cli/tests/commands/dev.test.ts`)\n- **Cross-platform process termination**: Added `killProcessCrossPlatform()` helper that uses appropriate termination methods for Windows vs Unix\n- **AbortController integration**: Processes now use AbortSignal for clean termination\n- **Comprehensive cleanup**: Added `cleanupDevProcess()` helper that handles Windows-specific cleanup (taskkill) and Unix graceful termination\n- **Process tracking**: All spawned processes are tracked and cleaned up properly\n\n### 2. Improved Stream Handling\n- **Concurrent safe readers**: Replaced tight polling loops with proper ReadableStream readers\n- **Output capture helper**: Added `captureProcessOutput()` that safely handles both stdout and stderr\n- **Early termination**: Process cleanup happens immediately after getting required output to prevent child process spawning\n\n### 3. Windows CI Compatibility\n- **Conditional test skipping**: Tests that spawn server processes are now skipped on Windows CI (`process.platform === 'win32' && process.env.CI === 'true'`) to prevent flaky failures\n- **Reduced timeouts**: Shortened wait times for CI stability (500ms instead of 2000ms+)\n- **Better error handling**: Improved error messages and cleanup on test failures\n\n### 4. Dev Server Improvements (`packages/cli/src/commands/dev/actions/dev-server.ts`)\n- **Standalone mode detection**: Added proper detection for non-ElizaOS directories\n- **Conditional backend startup**: Backend server only starts in project/plugin/monorepo contexts, not in standalone mode\n- **Improved logging**: Better status messages for different modes\n- **Port handling**: Enhanced port availability checking and conflict resolution\n\n### 5. Test Infrastructure Updates\n- **Environment variables**: Added `ELIZA_TEST_MODE` and `ELIZA_NONINTERACTIVE` for deterministic behavior\n- **Database isolation**: Each test gets its own PGLite database directory\n- **Memory leak prevention**: Proper cleanup of temp directories and processes\n\n### 6. SQL Plugin Test Fixes (`packages/plugin-sql/src/__tests__/`)\n- **Entity ID conflicts**: Fixed test conflicts by using unique entity IDs per test\n- **Missing metadata**: Added required metadata fields to prevent validation errors\n- **Foreign key constraints**: Ensured entities are created before memories that reference them\n\n## Test Results\n\n- **Local Windows**: All tests pass consistently\n- **CI Environment**: Windows CI tests are appropriately skipped to prevent flaky failures while maintaining local test coverage\n- **Cross-platform**: Unix/macOS tests continue to run with full coverage\n\n## Technical Details\n\nThe solution maintains the original test assertions and functionality while adding robust process management that works across platforms. The conditional skipping in CI is a pragmatic approach that prevents flaky failures without losing test coverage during local development.\n\nKey technical improvements:\n- AbortController-based process termination\n- Platform-specific cleanup strategies\n- Proper stream lifecycle management\n- Enhanced error handling and logging\n- Isolated test environments\n\nThis ensures reliable CI runs while maintaining comprehensive test coverage during development.\n",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-16T16:02:09Z",
      "mergedAt": null,
      "additions": 468,
      "deletions": 442
    },
    {
      "id": "PR_kwDOMT5cIs6o2y23",
      "title": "fix(cli): respect distribution channel when checking for updates",
      "author": "wtfsayo",
      "number": 5980,
      "body": "## Summary\n\nThis PR fixes the CLI update checker to respect distribution channels, ensuring users only see updates within their current channel (latest/stable, alpha, or beta).\n\n## Problem\n- Users on stable versions were being prompted to \"update\" to alpha/beta versions\n- Example: User on 1.5.8 (stable) was prompted to update to 1.5.9-alpha.1\n- This could lead users to inadvertently install pre-release versions when they want to stay on stable\n\n## Solution\n- Added channel-aware version checking that filters updates by distribution channel\n- Refactored duplicate code into a shared utility function (`getVersionChannel`)\n- Supports three channels: `latest` (stable), `alpha`, and `beta`\n\n## Changes\n- Created `packages/cli/src/utils/version-channel.ts` - Shared utility for channel detection\n- Updated `display-banner.ts` - Banner notifications respect channels\n- Updated `publish/utils/version-check.ts` - Publish command respects channels  \n- Updated `update/actions/cli-update.ts` - Update command respects channels\n\n## Testing\n- Stable version users will only see stable updates\n- Alpha version users will only see alpha updates\n- Beta version users will only see beta updates\n\n## Impact\n- Prevents stable users from accidentally installing pre-release versions\n- Better UX for users who want to stay on their chosen release channel\n- Follows DRY principle with shared utility",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-16T12:40:29Z",
      "mergedAt": null,
      "additions": 272,
      "deletions": 48
    },
    {
      "id": "PR_kwDOMT5cIs6oyZEu",
      "title": "fix: elizaos dev in plugin and project starters",
      "author": "ChristopherTrimboli",
      "number": 5979,
      "body": "This pull request improves the logic for detecting and running the client development server in various project structures, especially for monorepos and standalone plugin development. The changes make it easier to work with local client sources (using Vite) and avoid issues when the client is only available as an installed dependency.\r\n\r\nThe most important changes are:\r\n\r\n**Improved detection and handling of local client sources:**\r\n- Added a new `hasLocalClientSource` function to detect local client sources (including Vite configs and monorepo setups), ensuring the dev server only starts when appropriate.\r\n- Updated all logic in `startDevMode` and related functions to use this improved detection, so the client dev server is started and stopped only when a local source is available or a standalone plugin provides a Vite config. [[1]](diffhunk://#diff-889e97856af209d02514c0f8b48694ef9b085cc4527ac25326e15c309a0788edL329-R366) [[2]](diffhunk://#diff-889e97856af209d02514c0f8b48694ef9b085cc4527ac25326e15c309a0788edL342-R379) [[3]](diffhunk://#diff-889e97856af209d02514c0f8b48694ef9b085cc4527ac25326e15c309a0788edL382-R422)\r\n\r\n**Better handling of installed client packages:**\r\n- Modified `startClientDevServer` to detect when the client is only available as an installed dependency (in `node_modules`), and skip starting the dev server in this case, falling back to serving static UI.\r\n- Improved fallback logic to treat the current directory as the client if a local Vite config is found, which is useful for standalone plugin demo UIs.\r\n\r\n**Project structure and rebuild improvements:**\r\n- Enhanced the directory watching logic so that, in a monorepo, the entire monorepo root is watched for changes, enabling rebuilds when editing sibling packages from a plugin directory.\r\n- Expanded the set of directories checked for client ports to include the current working directory and the installed client package path.\r\n",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-16T07:14:13Z",
      "mergedAt": "2025-09-16T12:15:49Z",
      "additions": 69,
      "deletions": 20
    },
    {
      "id": "PR_kwDOMT5cIs6o5auN",
      "title": "feat(ci): add concurrency control to Claude code review workflow",
      "author": "wtfsayo",
      "number": 5983,
      "body": "## Summary\n\nAdds concurrency control to the Claude code review workflow to automatically cancel previous runs when new commits are pushed to a PR.\n\n## Changes\n\n- Added  configuration to \n- Set  to cancel outdated reviews\n- Uses PR number or branch ref to group concurrent runs\n\n## Benefits\n\n- **Resource Efficiency**: Prevents multiple Claude code reviews from running simultaneously on the same PR\n- **Faster Feedback**: New commits immediately cancel outdated Claude reviews and start fresh ones  \n- **Cost Savings**: Avoids wasting API credits on outdated code reviews\n- **Consistency**: Matches the concurrency behavior of all other CI workflows in the repository\n\n## Testing\n\n- Workflow configuration follows the same pattern as other CI workflows\n- Will be tested when PR receives new commits\n\nCloses: N/A (workflow improvement)",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-16T16:05:58Z",
      "mergedAt": null,
      "additions": 36,
      "deletions": 31
    }
  ],
  "codeChanges": {
    "additions": 848,
    "deletions": 147,
    "files": 28,
    "commitCount": 81
  },
  "completedItems": [
    {
      "title": "fix: transform local file paths to API URLs for web client image display",
      "prNumber": 5890,
      "type": "bugfix",
      "body": "# Relates to\r\n\r\n  Fix image display issues in web client for generated images from OpenRouter plugin\r\n\r\n  # Risks\r\n\r\n  **Low** - Changes are isolated to server-side path transformation logic. No breaking changes to existing APIs or plugins.",
      "files": [
        ".env.example",
        "bun.lock",
        "packages/core/src/index.node.ts",
        "packages/core/src/index.ts",
        "packages/core/src/utils/__tests__/paths.test.ts",
        "packages/core/src/utils/paths.ts",
        "packages/plugin-bootstrap/src/actions/imageGeneration.ts",
        "packages/server/src/api/media/agents.ts",
        "packages/server/src/api/media/channels.ts",
        "packages/server/src/api/messaging/channels.ts",
        "packages/server/src/api/messaging/core.ts",
        "packages/server/src/api/messaging/sessions.ts",
        "packages/server/src/api/shared/file-utils.ts",
        "packages/server/src/index.ts",
        "packages/server/src/loader.ts",
        "packages/server/src/socketio/index.ts",
        "packages/server/src/utils/media-transformer.ts",
        "packages/server/src/api/index.ts",
        "packages/server/src/types.ts"
      ]
    },
    {
      "title": "fix: Enable JSON imports in project-starter and project-tee-starter templates",
      "prNumber": 5975,
      "type": "bugfix",
      "body": "## Problem\r\nProject templates generated by `elizaos create` fail to compile when users import JSON files (e.g., character files) due to TypeScript configuration excluding JSON files from compilation, despite having `resolveJsonModule: true`",
      "files": [
        "packages/project-starter/tsconfig.json",
        "packages/project-tee-starter/tsconfig.json"
      ]
    },
    {
      "title": "fix: add missing uuid dependency to plugin-sql",
      "prNumber": 5977,
      "type": "bugfix",
      "body": "\r\n  # Relates to\r\n\r\n  N/A - Bug fix discovered during testing\r\n\r\n  # Risks\r\n\r\n  Low - Only adds a missing dependency declaration that was already being used in the code.\r\n\r\n  # Background\r\n\r\n  ## What does this PR do?\r\n\r\n  Adds the missing ",
      "files": [
        "bun.lock",
        "packages/plugin-sql/package.json"
      ]
    },
    {
      "title": "feat(ci): add concurrency control to Claude code review workflow",
      "prNumber": 5984,
      "type": "feature",
      "body": "- Cancel previous Claude code review runs when new commits are pushed\r\n- Prevents resource waste and ensures latest code is reviewed\r\n- Matches concurrency behavior of other CI workflows\r\n\r\n",
      "files": [
        ".github/workflows/claude-code-review.yml"
      ]
    },
    {
      "title": "fix(cli): remove quotes from file paths in Windows tests",
      "prNumber": 5981,
      "type": "bugfix",
      "body": "## Problem\n\nThe Windows tests in the CI pipeline are failing due to incorrect handling of file paths with quotes. The issue was identified in the GitHub Actions run: https://github.com/elizaOS/eliza/actions/runs/17766711070/job/50491852008?",
      "files": [
        "packages/cli/tests/commands/agent.test.ts"
      ]
    },
    {
      "title": "fix: elizaos dev in plugin and project starters",
      "prNumber": 5979,
      "type": "bugfix",
      "body": "This pull request improves the logic for detecting and running the client development server in various project structures, especially for monorepos and standalone plugin development. The changes make it easier to work with local client sou",
      "files": [
        "bun.lock",
        "packages/cli/src/commands/dev/actions/dev-server.ts",
        "packages/cli/src/commands/dev/utils/build-utils.ts"
      ]
    },
    {
      "title": "fix(cli, plugin-sql): remove redundant migration step and demote spurious adapter warn",
      "prNumber": 5978,
      "type": "bugfix",
      "body": "### fix(cli, plugin-sql): remove redundant migration step and demote spurious adapter warn\n\n- Removed redundant migration invocation in CLI agent start:\n  - `packages/cli/src/commands/start/actions/agent-start.ts`\n  - We deleted the manual ",
      "files": [
        "bun.lock",
        "packages/cli/src/commands/start/actions/agent-start.ts",
        "packages/plugin-sql/src/index.node.ts"
      ]
    }
  ],
  "topContributors": [
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 140.71653349739753,
      "prScore": 139.73853349739755,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.978,
      "summary": null
    },
    {
      "username": "tcm390",
      "avatarUrl": "https://avatars.githubusercontent.com/u/60634884?u=c6c41679b8322eaa0c81f72e0b4ed95e80f0ac16&v=4",
      "totalScore": 93.61171703686216,
      "prScore": 93.61171703686216,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 71.50029140724723,
      "prScore": 66.50029140724723,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "standujar",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16385918?u=718bdcd1585be8447bdfffb8c11ce249baa7532d&v=4",
      "totalScore": 26.724437912434098,
      "prScore": 25.7464379124341,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.978,
      "summary": null
    },
    {
      "username": "yungalgo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/113615973?u=92e0f29f7e2fbb8ce46ed13c51f692ca803de02d&v=4",
      "totalScore": 7.9884379124341,
      "prScore": 7.9884379124341,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "wpoulin",
      "avatarUrl": "https://avatars.githubusercontent.com/u/18474228?u=8e3c0cf8967fed66e93e55394fd798a3a79b0cff&v=4",
      "totalScore": 6.796147180559945,
      "prScore": 6.796147180559945,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "shuhaib112",
      "avatarUrl": "https://avatars.githubusercontent.com/u/211030292?v=4",
      "totalScore": 4.5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "odilitime",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16395496?u=c9bac48e632aae594a0d85aaf9e9c9c69b674d8b&v=4",
      "totalScore": 4.5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "linear",
      "avatarUrl": "https://avatars.githubusercontent.com/in/20150?v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "borisudovicic",
      "avatarUrl": "https://avatars.githubusercontent.com/u/31806472?u=27713fbe603baae91ef519990facbacd6c23e93d&v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "anyaachan",
      "avatarUrl": "https://avatars.githubusercontent.com/u/53533713?u=c8fa43d0ca83d3c51bbc17328e0a8f817cda7d57&v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    }
  ],
  "newPRs": 9,
  "mergedPRs": 7,
  "newIssues": 2,
  "closedIssues": 1,
  "activeContributors": 10
}
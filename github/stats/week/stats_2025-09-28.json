{
  "interval": {
    "intervalStart": "2025-09-28T00:00:00.000Z",
    "intervalEnd": "2025-10-05T00:00:00.000Z",
    "intervalType": "week"
  },
  "repository": "elizaos/eliza",
  "overview": "From 2025-09-28 to 2025-10-05, elizaos/eliza had 6 new PRs (8 merged), 2 new issues, and 6 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDOMT5cIs7N3ORS",
      "title": "Unhandled exception when getAgents() fails in runtime.ts (missing agents table)",
      "author": "digitalsimboja",
      "number": 6003,
      "repository": "elizaos/eliza",
      "body": "**Describe the bug**\n\nWhen initializing `AgentRuntime`, the following code in `runtime.ts`:\n`tsthis.agent = await this.adapter.getAgent(this.character.id);`\n\nthrows an unhandled exception if:\n - the agents table does not exist (e.g. migrations incomplete), or\n - character.id is missing/undefined.\n\nThis prevents runtime startup and crashes the process.\n\n\n\n**To Reproduce**\n\nRun AgentRuntime with a new Postgres database where the agents table has not been created.\nOr, start with a character config missing an id field.\nObserve the runtime crash with getAgent error.\n\n**Expected behavior**\nIf getAgent() fails due to a missing record, the runtime should gracefully create the agent with createAgent().\nIf character.id is missing, a clear error should be logged, not an unhandled exception.\n\n**Screenshots**\nN/A but here are the logs\n```\nDatabase operation failed (attempt 1/3): Failed query: select \"id\", \"name\", \"bio\" from \"agents\"\n2025-09-25 14:53:12 params: , nextRetryIn: 1.9s\n2025-09-25 14:53:14  Warn       Database operation failed (attempt 2/3): Failed query: select \"id\", \"name\", \"bio\" from \"agents\"\n2025-09-25 14:53:14 params: , nextRetryIn: 2.8s\n2025-09-25 14:53:17  Error      Max retry attempts reached: Failed query: select \"id\", \"name\", \"bio\" from \"agents\"\n2025-09-25 14:53:17 params: , totalAttempts: 3\n```\n\n**Additional context**\nProposed fix is to wrap getAgent() in a try/catch and fall back to createAgent() where possible.",
      "createdAt": "2025-09-25T14:04:41Z",
      "closedAt": "2025-09-28T07:57:03Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7Om1SJ",
      "title": "elizaos dev and elizaos start command in plugin directory doesnt work anymore",
      "author": "linear",
      "number": 6017,
      "repository": "elizaos/eliza",
      "body": "\\`elizaos dev\\` or `elizaos start` in plugin directory should load plugin with test character",
      "createdAt": "2025-09-29T19:17:21Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7OacIr",
      "title": "Add Config Option for Discord Plugin to Only Respond to Mentions/Name Calls",
      "author": "borisudovicic",
      "number": 6013,
      "repository": "elizaos/eliza",
      "body": "Introduce a configuration option in the Eliza Discord plugin so that the agent only responds when explicitly mentioned, or when directly called by its configured name.",
      "createdAt": "2025-09-29T03:08:24Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 0
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDOMT5cIs6rCpmo",
      "title": "feat(client): Add agent runs visualization timeline",
      "author": "wtfsayo",
      "number": 6016,
      "body": "## Description\n\nThis PR adds a comprehensive agent runs visualization timeline component that provides detailed insights into agent execution flow and performance metrics.\n\n### Key Features\n\n- **Timeline Visualization**: Interactive timeline showing agent runs with expandable details\n- **Performance Metrics**: Display execution time, memory usage, and status information  \n- **Run Details**: Comprehensive view of messages, actions, evaluators, and providers\n- **Interactive UI**: Collapsible sections, hover effects, and responsive design\n- **Status Indicators**: Visual status badges and progress indicators\n\n### Components Added\n\n-  - Main timeline component with full agent run visualization\n- Comprehensive TypeScript types for agent run data structures\n- Interactive UI elements with proper accessibility support\n\n### Technical Implementation\n\n- Built with React and TypeScript\n- Uses Lucide React icons for consistent UI\n- Responsive design with proper mobile support\n- Optimized rendering for large datasets\n- Clean, maintainable component architecture\n\n### Testing\n\n- Component renders correctly with agent run data\n- Interactive elements function as expected\n- Responsive design tested across different screen sizes\n\nThis enhancement significantly improves the agent monitoring and debugging experience by providing detailed visual insights into agent execution patterns.\n\n<!-- CURSOR_SUMMARY -->\n---\n\n> [!NOTE]\n> Adds an interactive agent run timeline with new client hooks and server endpoints (with caching) backed by SQL adapter summaries and core types.\n> \n> - **Frontend (client)**:\n>   - **Timeline UI**: New `AgentRunTimeline` component and a \"Timeline\" tab in `agent-sidebar` to visualize runs and nested events with durations/status.\n>   - **Data Hooks**: Add `useAgentRuns` and `useAgentRunDetail` for polling run lists and details.\n>   - **Styles**: Timeline status classes added in `index.css`.\n> - **Backend (server)**:\n>   - **Runs API**: Implement `GET /:agentId/runs` and `GET /:agentId/runs/:runId` with aggregation, optional filters, and short-term caching; falls back to log aggregation if adapter summary unavailable.\n> - **Core/DB**:\n>   - **Types**: Introduce `RunStatus`, `AgentRunSummary`, `AgentRunSummaryResult` and `IDatabaseAdapter.getAgentRunSummaries`.\n>   - **SQL Adapter**: Implement `getAgentRunSummaries` in `BaseDrizzleAdapter` for efficient run listing and counts.\n> - **API Client**:\n>   - Wire up `RunsService` on `ElizaClient` (exposed for hooks usage).\n> - **Dependencies**:\n>   - Add `vis-timeline`, `vis-data` and related peer deps.\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit 80bff571f516eafdbe07c3efe09eaf89fd6d0484. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-29T08:41:43Z",
      "mergedAt": "2025-09-29T15:33:21Z",
      "additions": 1398,
      "deletions": 82
    },
    {
      "id": "PR_kwDOMT5cIs6q86kD",
      "title": "chore(lint): ran linter across the repo",
      "author": "wtfsayo",
      "number": 6011,
      "body": "This pull request primarily refactors code formatting for improved readability and consistency, focusing on function arguments, array/object literals, and callback formatting. No logic changes are introduced; all updates are stylistic, targeting trailing commas, indentation, and callback arrow function syntax. Additionally, minor formatting updates are made to configuration files.\r\n\r\nFormatting and code style improvements:\r\n\r\n* Standardized callback formatting in test files and utility functions by using multiline arrow functions and consistent indentation, improving readability in files such as `agent.test.ts`, `character-plugin-ordering.test.ts`, and `ollama-plugin-installation.test.ts`. [[1]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL362-R367) [[2]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL397-R402) [[3]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL414-R425) [[4]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL436-R445) [[5]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL446-R463) [[6]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL478-R493) [[7]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL505-R535) [[8]](diffhunk://#diff-ece06e17a19dbcecb7ba701aa31eda0042c6e850de24ff09593cca08d4f56c7eL22-R24) [[9]](diffhunk://#diff-f364d5de4085248d075b006be9349dc58177d84a795828921d0770f381c5126bL60-R60) [[10]](diffhunk://#diff-f364d5de4085248d075b006be9349dc58177d84a795828921d0770f381c5126bL80-R78) [[11]](diffhunk://#diff-f364d5de4085248d075b006be9349dc58177d84a795828921d0770f381c5126bL101-R97) [[12]](diffhunk://#diff-f364d5de4085248d075b006be9349dc58177d84a795828921d0770f381c5126bL120-R116) [[13]](diffhunk://#diff-f364d5de4085248d075b006be9349dc58177d84a795828921d0770f381c5126bL129-R127)\r\n* Refactored object and array literals to use single-line formatting and trailing commas for consistency in files such as `lerna.json`, `recursion-prevention.test.ts`, and `validation.ts`. [[1]](diffhunk://#diff-2d72bdead8afa0798d18995311992d684348a694c2d5e214e8e4d2b6153e4821L3-R14) [[2]](diffhunk://#diff-0b17f392943e64a4ad310166e18aecc1c36ac50a40d97f7032c81f33175764c2L48-R49) [[3]](diffhunk://#diff-0b17f392943e64a4ad310166e18aecc1c36ac50a40d97f7032c81f33175764c2L62-R63) [[4]](diffhunk://#diff-0b17f392943e64a4ad310166e18aecc1c36ac50a40d97f7032c81f33175764c2L77-R78) [[5]](diffhunk://#diff-1c2713f7bf29769ac9471ca185258c66195fe94fedfabb232d116d539620ae4fL54-R61)\r\n* Improved multiline argument formatting in function calls and error logging, enhancing clarity in files like `e2e-tests.ts`, `plugin-parser.ts`, `data-aggregator.ts`, `scenario/index.ts`, and `local-cli-delegation.ts`. [[1]](diffhunk://#diff-8b775212a1c2704ac4d6a1b4936c6e884b9b5f50ac743ffc313547f3ef1b33d4L138-R148) [[2]](diffhunk://#diff-b6753a3bb07daa9cef087506d2dd92c45de733b048829bec8b9c09256257c740L88-R90) [[3]](diffhunk://#diff-b6753a3bb07daa9cef087506d2dd92c45de733b048829bec8b9c09256257c740L166-R170) [[4]](diffhunk://#diff-9e2606224c867588aef1e44b41eee4c8d5a91f2abb5d4c27157a62599e7dc0c0L178-R187) [[5]](diffhunk://#diff-ef3705731497978ddf0a8bfeff4a9ee09b9f3fe11491df16931496575ce6df45L135-R137) [[6]](diffhunk://#diff-ef3705731497978ddf0a8bfeff4a9ee09b9f3fe11491df16931496575ce6df45L147-R151) [[7]](diffhunk://#diff-97324efdf1393e7f6997f06f7e8f76f786c8cb2131a1c1cdce8a574070be83bdL140-R144)\r\n* Updated test environment setup and command options to use consistent formatting and argument passing, including trailing commas and multiline function calls. [[1]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL68-R68) [[2]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL241-R244) [[3]](diffhunk://#diff-e4632f53d4b35636af568acd817ea172675e16d87eb8f818f6539f1c5ab5a8a3L167-R167)\n\n<!-- CURSOR_SUMMARY -->\n---\n\n> [!NOTE]\n> Standardizes code style across the repo (arrays/objects, callbacks, multiline args, trailing commas, imports) and tidies configs/tests with no functional changes.\n> \n> - **Code Style/Formatting**:\n>   - Standardizes callback/arrow function spacing, multiline argument formatting, and trailing commas.\n>   - Normalizes object/array literals and import ordering across CLI, core, server, plugins, and tests.\n> - **Configs/JSON**:\n>   - Compacts/normalizes `lerna.json` and tsconfig files.\n> - **Tests**:\n>   - Aligns test code with new formatting (no behavioral changes).\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit 2531a172f6601b563446142a197aa9e72b97c91b. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-28T16:03:51Z",
      "mergedAt": "2025-09-28T16:03:58Z",
      "additions": 1126,
      "deletions": 1056
    },
    {
      "id": "PR_kwDOMT5cIs6qTmMU",
      "title": "refactor type definitions across runtime.",
      "author": "tcm390",
      "number": 5998,
      "body": "",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-24T14:48:48Z",
      "mergedAt": "2025-09-28T15:56:49Z",
      "additions": 896,
      "deletions": 499
    },
    {
      "id": "PR_kwDOMT5cIs6q_XeM",
      "title": "fix: new package publishing on NPM, add public publish config",
      "author": "ChristopherTrimboli",
      "number": 6012,
      "body": "### Summary\n- Added `publishConfig.access = public` to `@elizaos/service-interfaces`.\n- Extended release workflow to publish new/unpublished packages individually if bulk Lerna publish fails, keeping versions and dist-tags in sync.\n\n### What changed\n- In `packages/service-interfaces/package.json`:\n  - Added `publishConfig` so a new scoped package publishes publicly to npm.\n- In `.github/workflows/release.yaml`:\n  - Added a fallback step after the main `lerna publish from-package`:\n    - Enumerates monorepo packages via `lerna ls --json`.\n    - For each, checks `npm view <name>@<version>`.\n    - Publishes any not yet on npm using `npm publish --access public --tag <dist-tag>`.\n  - Keeps existing versioning flow via Lerna; no change to tagging or git steps.\n\n### Why\n- CI failed when publishing the newly added `@elizaos/service-interfaces`:\n  - New scoped package lacked `publishConfig.access=public`.\n  - Bulk publish can leave new packages unpublished; the fallback ensures first-time publishes succeed automatically.\n\n### How it works\n- Primary path: `lerna publish from-package --dist-tag <alpha|beta|latest>`.\n- Fallback (only on failure): publish only the missing packages with the same dist-tag, preserving version alignment with the rest of the release.\n\n### Impact\n- New packages (like `@elizaos/service-interfaces`) will publish on first release without manual intervention.\n- Existing packages are unaffected; versions remain synchronized via `lerna version`.\n\n### Security\n- Continues using `secrets.NPM_TOKEN` for auth.\n- No changes to permission scopes.\n\n### Verification\n- Re-run the release workflow on `develop`/`main` or create a GitHub release:\n  - Confirm all packages publish with the expected dist-tag (`alpha`, `beta`, or `latest`).\n  - Verify `@elizaos/service-interfaces@<version>` exists on npm.\n\n### Files touched\n- `packages/service-interfaces/package.json`\n- `.github/workflows/release.yaml`\n\n<!-- CURSOR_SUMMARY -->\n---\n\n> [!NOTE]\n> Adds public publish config for @elizaos/service-interfaces and a workflow fallback to individually publish any packages left unpublished after bulk Lerna publish.\n> \n> - **CI/CD (release workflow)**:\n>   - Adds a fallback step to individually publish unpublished packages when `lerna publish from-package` fails, using `lerna ls --json` + `npm view` checks and publishing with the same `dist-tag`.\n> - **Package config**:\n>   - Sets `publishConfig.access = public` in `packages/service-interfaces/package.json` to ensure public publishing of the new scoped package.\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit efa85e4089481c2d19c712650bda7627bbaf20f9. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-29T01:36:40Z",
      "mergedAt": "2025-09-29T01:38:36Z",
      "additions": 103,
      "deletions": 71
    },
    {
      "id": "PR_kwDOMT5cIs6rBJt3",
      "title": "chore: update zod pckg version",
      "author": "0xbbjoker",
      "number": 6015,
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Upgrade `zod` to `4.1.11` across the monorepo and align package resolutions.\n> \n> - **Dependencies**:\n>   - Upgrade `zod` to `4.1.11` in:\n>     - `packages/cli/package.json`\n>     - `packages/core/package.json`\n>     - `packages/plugin-quick-starter/package.json` (also update `resolutions.zod`)\n>     - `packages/plugin-starter/package.json` (also update `resolutions.zod`)\n>     - `packages/project-starter/package.json`\n>     - `packages/project-tee-starter/package.json`\n>   - Lockfile updated to reflect the new `zod` version and related transitive adjustments.\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit a7a7c8bda698bb251bcc0805ebca940104b735b3. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- Chores\n  - Upgraded the validation library to the latest major version across CLI, core, and starter templates/plugins.\n  - Aligns all packages on a consistent version for improved compatibility and maintenance.\n  - No user-facing features changed; behavior should remain the same.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-29T06:15:46Z",
      "mergedAt": "2025-09-29T06:17:15Z",
      "additions": 30,
      "deletions": 32
    }
  ],
  "codeChanges": {
    "additions": 3310,
    "deletions": 1453,
    "files": 108,
    "commitCount": 71
  },
  "completedItems": [
    {
      "title": "refactor type definitions across runtime.",
      "prNumber": 5998,
      "type": "refactor",
      "body": "",
      "files": [
        "bun.lock",
        "packages/cli/src/commands/scenario/src/data-aggregator.ts",
        "packages/cli/src/commands/scenario/src/runtime-factory.ts",
        "packages/cli/src/utils/helpers.ts",
        "packages/core/src/__tests__/action-chaining-simple.test.ts",
        "packages/core/src/__tests__/runtime.test.ts",
        "packages/core/src/index.browser.ts",
        "packages/core/src/index.node.ts",
        "packages/core/src/index.ts",
        "packages/core/src/memory.ts",
        "packages/core/src/runtime.ts",
        "packages/core/src/schemas/character.ts",
        "packages/core/src/types/components.ts",
        "packages/core/src/types/events.ts",
        "packages/core/src/types/index.ts",
        "packages/core/src/types/knowledge.ts",
        "packages/core/src/types/memory.ts",
        "packages/core/src/types/model.ts",
        "packages/core/src/types/primitives.ts",
        "packages/core/src/types/runtime.ts",
        "packages/core/src/types/state.ts",
        "packages/plugin-bootstrap/src/actions/imageGeneration.ts",
        "packages/plugin-bootstrap/src/actions/reply.ts",
        "packages/plugin-bootstrap/src/index.ts",
        "packages/server/examples/standalone-server.js",
        "packages/service-interfaces/build.ts",
        "packages/service-interfaces/package.json",
        "packages/service-interfaces/src/index.browser.ts",
        "packages/service-interfaces/src/index.node.ts",
        "packages/service-interfaces/src/index.ts",
        "packages/service-interfaces/src/interfaces/browser.ts",
        "packages/service-interfaces/src/interfaces/email.ts",
        "packages/service-interfaces/src/interfaces/index.ts",
        "packages/service-interfaces/src/interfaces/lp.ts",
        "packages/service-interfaces/src/interfaces/message.ts",
        "packages/service-interfaces/src/interfaces/pdf.ts",
        "packages/service-interfaces/src/interfaces/post.ts",
        "packages/service-interfaces/src/interfaces/token.ts",
        "packages/service-interfaces/src/interfaces/transcription.ts",
        "packages/service-interfaces/src/interfaces/video.ts",
        "packages/service-interfaces/src/interfaces/wallet.ts",
        "packages/service-interfaces/src/interfaces/web-search.ts",
        "packages/service-interfaces/tsconfig.declarations.json",
        "packages/service-interfaces/tsconfig.json",
        "packages/test-utils/src/mocks/runtime.ts",
        "packages/test-utils/src/testModels.ts",
        "packages/plugin-bootstrap/src/__tests__/actions.test.ts",
        "packages/core/src/__tests__/services-by-type.test.ts"
      ]
    },
    {
      "title": "refactor(core): make runtime initialization idempotent and improve service registration coordination",
      "prNumber": 6004,
      "type": "refactor",
      "body": "# Core Cleanup: Remove legacy service initialization code\r\n\r\n## Problem Statement\r\n\r\nPart of Core Cleanup #5911:\r\n- Remove legacy code paths (double-inits, redundant type guards)\r\n- Audit and refactor type definitions across runtime\r\n- Clea",
      "files": [
        "packages/core/src/runtime.ts"
      ]
    },
    {
      "title": "chore(lint): ran linter across the repo",
      "prNumber": 6011,
      "type": "other",
      "body": "This pull request primarily refactors code formatting for improved readability and consistency, focusing on function arguments, array/object literals, and callback formatting. No logic changes are introduced; all updates are stylistic, targ",
      "files": [
        "build-utils.ts",
        "examples/standalone-cli-chat.ts",
        "lerna.json",
        "packages/cli/src/commands/create/utils/validation.ts",
        "packages/cli/src/commands/dev/actions/__tests__/recursion-prevention.test.ts",
        "packages/cli/src/commands/scenario/index.ts",
        "packages/cli/src/commands/scenario/src/data-aggregator.ts",
        "packages/cli/src/commands/scenario/src/plugin-parser.ts",
        "packages/cli/src/commands/scenario/src/runtime-factory.ts",
        "packages/cli/src/commands/start/index.ts",
        "packages/cli/src/commands/test/actions/e2e-tests.ts",
        "packages/cli/src/utils/local-cli-delegation.ts",
        "packages/cli/tests/commands/agent.test.ts",
        "packages/cli/tests/integration/version-display.test.ts",
        "packages/cli/tests/unit/characters/character-plugin-ordering.test.ts",
        "packages/cli/tests/unit/commands/create/ollama-plugin-installation.test.ts",
        "packages/cli/tests/unit/commands/test/e2e-tests.test.ts",
        "packages/cli/tests/unit/utils/local-cli-delegation.test.ts",
        "packages/core/src/__tests__/elizaos.test.ts",
        "packages/core/src/__tests__/runtime.test.ts",
        "packages/core/src/elizaos.ts",
        "packages/core/src/runtime.ts",
        "packages/core/src/types/components.ts",
        "packages/core/src/types/events.ts",
        "packages/core/src/types/index.ts",
        "packages/core/src/types/model.ts",
        "packages/core/src/types/state.ts",
        "packages/core/src/utils.ts",
        "packages/core/src/utils/node.ts",
        "packages/core/src/utils/paths.ts",
        "packages/plugin-bootstrap/src/index.ts",
        "packages/plugin-sql/src/__tests__/unit/index.test.ts",
        "packages/plugin-sql/src/index.ts",
        "packages/server/src/__tests__/agent-server-constructor.test.ts",
        "packages/server/src/__tests__/agent-server-database.test.ts",
        "packages/server/src/__tests__/agent-server-errors.test.ts",
        "packages/server/src/__tests__/agent-server-initialization.test.ts",
        "packages/server/src/__tests__/agent-server-lifecycle.test.ts",
        "packages/server/src/__tests__/agent-server-management.test.ts",
        "packages/server/src/__tests__/agent-server-middleware.test.ts",
        "packages/server/src/__tests__/integration/agent-server-interaction.test.ts",
        "packages/server/src/__tests__/integration/database-operations.test.ts",
        "packages/server/src/__tests__/integration/socketio-message-flow.test.ts",
        "packages/server/src/api/agents/crud.ts",
        "packages/server/src/api/agents/index.ts",
        "packages/server/src/api/memory/index.ts",
        "packages/server/src/api/messaging/index.ts",
        "packages/server/src/api/messaging/sessions.ts",
        "packages/server/src/api/runtime/health.ts",
        "packages/server/src/api/runtime/index.ts"
      ]
    },
    {
      "title": "fix(server): downgrade plugin import failure from error to warn",
      "prNumber": 6010,
      "type": "bugfix",
      "body": "### Summary\n- Downgrade log level from error to warn on failed dynamic import in `packages/server/src/managers/PluginLoader.ts`.\n- Rationale: initial import failure is frequently recoverable (auto-install/optional deps). Logging as error is",
      "files": [
        "packages/server/src/managers/PluginLoader.ts"
      ]
    },
    {
      "title": "feat(client): Add agent runs visualization timeline",
      "prNumber": 6016,
      "type": "feature",
      "body": "## Description\n\nThis PR adds a comprehensive agent runs visualization timeline component that provides detailed insights into agent execution flow and performance metrics.\n\n### Key Features\n\n- **Timeline Visualization**: Interactive timelin",
      "files": [
        "bun.lock",
        "packages/api-client/src/client.ts",
        "packages/api-client/src/types/base.ts",
        "packages/client/package.json",
        "packages/client/src/components/agent-runs/AgentRunTimeline.tsx",
        "packages/client/src/components/agent-sidebar.tsx",
        "packages/client/src/hooks/use-query-hooks.ts",
        "packages/client/src/index.css",
        "packages/client/src/routes/agent-detail.tsx",
        "packages/core/src/types/database.ts",
        "packages/plugin-sql/src/base.ts",
        "packages/server/src/api/agents/runs.ts"
      ]
    },
    {
      "title": "chore: update zod pckg version",
      "prNumber": 6015,
      "type": "other",
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Upgrade `zod` to `4.1.11` across the monorepo and align package resolutions.\n> \n> - **Dependencies**:\n>   - Upgrade `zod` to `4.1.11` in:\n>     - `packages/cli/package.json`\n>     - `packages/core/package",
      "files": [
        "bun.lock",
        "packages/cli/package.json",
        "packages/core/package.json",
        "packages/plugin-quick-starter/package.json",
        "packages/plugin-starter/package.json",
        "packages/project-starter/package.json",
        "packages/project-tee-starter/package.json"
      ]
    },
    {
      "title": "chore: disable local env endpoint in production",
      "prNumber": 6014,
      "type": "other",
      "body": "This PR enforces a production guard on /api/system/env/local.\n\n- GET /api/system/env/local returns 403 in production\n- POST /api/system/env/local returns 403 in production\n\nRationale: Prevent exposing or mutating local .env via API in prod.",
      "files": [
        "packages/server/src/api/system/environment.ts"
      ]
    },
    {
      "title": "fix: new package publishing on NPM, add public publish config",
      "prNumber": 6012,
      "type": "bugfix",
      "body": "### Summary\n- Added `publishConfig.access = public` to `@elizaos/service-interfaces`.\n- Extended release workflow to publish new/unpublished packages individually if bulk Lerna publish fails, keeping versions and dist-tags in sync.\n\n### Wha",
      "files": [
        ".github/workflows/release.yaml",
        "bun.lock",
        "packages/service-interfaces/package.json"
      ]
    }
  ],
  "topContributors": [
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 173.29472007426324,
      "prScore": 167.41872007426326,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0.8759999999999999,
      "summary": null
    },
    {
      "username": "0xbbjoker",
      "avatarUrl": "https://avatars.githubusercontent.com/u/54844437?u=90fe1762420de6ad493a1c1582f1f70c0d87d8e2&v=4",
      "totalScore": 43.68797154237037,
      "prScore": 38.48797154237037,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 41.16217896088527,
      "prScore": 41.16217896088527,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "linear",
      "avatarUrl": "https://avatars.githubusercontent.com/in/20150?v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "borisudovicic",
      "avatarUrl": "https://avatars.githubusercontent.com/u/31806472?u=8935f4d43fd7e4eb9bf5ff92d54d4d2f8ac8a786&v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    }
  ],
  "newPRs": 6,
  "mergedPRs": 8,
  "newIssues": 2,
  "closedIssues": 1,
  "activeContributors": 6
}
{
  "interval": {
    "intervalStart": "2025-09-28T00:00:00.000Z",
    "intervalEnd": "2025-10-05T00:00:00.000Z",
    "intervalType": "week"
  },
  "repository": "elizaos/eliza",
  "overview": "From 2025-09-28 to 2025-10-05, elizaos/eliza had 13 new PRs (16 merged), 5 new issues, and 7 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDOMT5cIs7F0iCC",
      "title": "Bond Desk Agent",
      "author": "borisudovicic",
      "number": 5767,
      "repository": "elizaos/eliza",
      "body": "Check out the base trading agent we made for hackathon for this. Could be used potentially.\n\n[https://github.com/wtfsayo/otaku](https://github.com/wtfsayo/otaku)\n\nProbably using bond protocol infrastructure.\n\n[https://bondprotocol.finance/](https://bondprotocol.finance/)",
      "createdAt": "2025-08-13T15:20:32Z",
      "closedAt": "2025-10-01T14:21:51Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7JUUNl",
      "title": "Observability GUI for event runs",
      "author": "borisudovicic",
      "number": 5868,
      "repository": "elizaos/eliza",
      "body": "Need this level of visibility/ui for event runs [https://content.trigger.dev/agent-parallelization.mp4](https://content.trigger.dev/agent-parallelization.mp4)",
      "createdAt": "2025-09-02T21:30:19Z",
      "closedAt": "2025-10-01T14:21:52Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7N3ORS",
      "title": "Unhandled exception when getAgents() fails in runtime.ts (missing agents table)",
      "author": "digitalsimboja",
      "number": 6003,
      "repository": "elizaos/eliza",
      "body": "**Describe the bug**\n\nWhen initializing `AgentRuntime`, the following code in `runtime.ts`:\n`tsthis.agent = await this.adapter.getAgent(this.character.id);`\n\nthrows an unhandled exception if:\n - the agents table does not exist (e.g. migrations incomplete), or\n - character.id is missing/undefined.\n\nThis prevents runtime startup and crashes the process.\n\n\n\n**To Reproduce**\n\nRun AgentRuntime with a new Postgres database where the agents table has not been created.\nOr, start with a character config missing an id field.\nObserve the runtime crash with getAgent error.\n\n**Expected behavior**\nIf getAgent() fails due to a missing record, the runtime should gracefully create the agent with createAgent().\nIf character.id is missing, a clear error should be logged, not an unhandled exception.\n\n**Screenshots**\nN/A but here are the logs\n```\nDatabase operation failed (attempt 1/3): Failed query: select \"id\", \"name\", \"bio\" from \"agents\"\n2025-09-25 14:53:12 params: , nextRetryIn: 1.9s\n2025-09-25 14:53:14  Warn       Database operation failed (attempt 2/3): Failed query: select \"id\", \"name\", \"bio\" from \"agents\"\n2025-09-25 14:53:14 params: , nextRetryIn: 2.8s\n2025-09-25 14:53:17  Error      Max retry attempts reached: Failed query: select \"id\", \"name\", \"bio\" from \"agents\"\n2025-09-25 14:53:17 params: , totalAttempts: 3\n```\n\n**Additional context**\nProposed fix is to wrap getAgent() in a try/catch and fall back to createAgent() where possible.",
      "createdAt": "2025-09-25T14:04:41Z",
      "closedAt": "2025-09-28T07:57:03Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7Om1SJ",
      "title": "elizaos dev and elizaos start command in plugin directory doesnt work anymore",
      "author": "linear",
      "number": 6017,
      "repository": "elizaos/eliza",
      "body": "\\`elizaos dev\\` or `elizaos start` in plugin directory should load plugin with test character",
      "createdAt": "2025-09-29T19:17:21Z",
      "closedAt": "2025-09-30T08:53:00Z",
      "state": "CLOSED",
      "commentCount": 0
    },
    {
      "id": "I_kwDOMT5cIs7OacIr",
      "title": "Add Config Option for Discord Plugin to Only Respond to Mentions/Name Calls",
      "author": "borisudovicic",
      "number": 6013,
      "repository": "elizaos/eliza",
      "body": "Introduce a configuration option in the Eliza Discord plugin so that the agent only responds when explicitly mentioned, or when directly called by its configured name.",
      "createdAt": "2025-09-29T03:08:24Z",
      "closedAt": "2025-10-01T14:21:47Z",
      "state": "CLOSED",
      "commentCount": 0
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDOMT5cIs6pYAwb",
      "title": "chore: refactor dynamic migrations",
      "author": "0xbbjoker",
      "number": 5990,
      "body": "",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-18T20:36:13Z",
      "mergedAt": "2025-09-30T14:14:36Z",
      "additions": 11933,
      "deletions": 1673
    },
    {
      "id": "PR_kwDOMT5cIs6rUKkg",
      "title": "feat(client): Enhanced Agent Runs Sidebar with Improved Timeline UI",
      "author": "wtfsayo",
      "number": 6023,
      "body": "## Summary\n\nThis PR significantly enhances the Agent Runs sidebar interface with improved Timeline visualization, better space utilization, and enhanced data extraction.\n\n## Key Changes\n\n### 1. Sidebar Size & Space Optimization\n- **Increased sidebar max width** from 50% to 85% - allows sidebar to take over more screen space\n- **Reduced min width** from 20% to 15% - chat panel can compress more\n- **Removed Timeline tab padding** for maximum space utilization\n- **Increased API limits**: Default 100 runs (from 20), max 500 runs (from 100)\n\n### 2. Timeline UI Improvements\n- **Replaced traces column with dropdown** - more space-efficient design\n- **Compact dropdown items** - single-line layout with Run ID instead of timestamp\n- **Run ID-based naming** - Changed from `Run 8:20:48 AM` to `Run 12345678` for stable identifiers\n- **Improved flexbox layout** - proper flex-shrink/flex-grow conventions in SpanCard 3-column layout\n\n### 3. Visual Design Enhancements\n- **Eliza theme colors** throughout - replaced hardcoded gray/blue/red colors with CSS variables\n- **Selection states** - Added `bg-accent/50` with border, hover states, smooth transitions\n- **Better spacing** - Added py-3 px-2, gap-x-3, rounded corners, shadows\n- **Vertical centering** - Items properly aligned with `items-center`\n- **Reduced margins** - Removed excessive spacing between child runs\n\n### 4. Data Extraction Improvements\n- **Enhanced prompt extraction** - Supports multi-prompt arrays, extracts from params.prompt\n- **Enhanced response extraction** - Extracts from response.content, response.text, result field\n- **Token count extraction** - Handles response.usage and top-level usage objects  \n- **Cost tracking** - Extracts from response.cost when available\n- **Server-side data** - API now includes params, response, usage, prompts, cost in MODEL_USED and ACTION_COMPLETED events\n\n### 5. Theme & Accessibility\n- **Dark mode fixes** - All text uses `text-foreground` instead of `text-gray-950`\n- **Plain text default** - In/Out tab defaults to plain text view (easier to read)\n- **Conditional badges** - Cost and tokens only show when defined (no more '$ undefined')\n- **Theme-aware borders** - Using `border-border` instead of hardcoded colors\n\n## Files Modified\n\n### Client\n- `packages/client/src/components/chat.tsx` - Sidebar size limits\n- `packages/client/src/components/agent-sidebar.tsx` - Timeline padding removal\n- `packages/client/src/components/agent-runs/AgentRunTimeline.tsx` - Layout adjustments\n- `packages/client/src/components/agent-prism/TraceViewer.tsx` - Dropdown implementation\n- `packages/client/src/components/agent-prism/SpanCard/SpanCard.tsx` - Flexbox, spacing, selection\n- `packages/client/src/components/agent-prism/TreeView.tsx` - Padding and spacing\n- `packages/client/src/components/agent-prism/TraceList/*.tsx` - Text colors\n- `packages/client/src/components/agent-prism/DetailsView/*.tsx` - Theme colors, default view\n- `packages/client/src/lib/eliza-span-adapter.ts` - Enhanced data extraction\n\n### Server\n- `packages/server/src/api/agents/runs.ts` - API limits and enhanced event data\n\n## Testing\n- ✅ Timeline tab displays properly\n- ✅ Dropdown shows all runs with details\n- ✅ Selection highlights correctly\n- ✅ Dark mode text is visible\n- ✅ Input/output data displays when available\n- ✅ Sidebar can resize to 85% width\n\n## Screenshots\nSee attached screenshots showing the improved layout and theme integration.\n\n<!-- CURSOR_SUMMARY -->\n---\n\n> [!NOTE]\n> Adds Agent Prism-based trace UI (TraceViewer, SpanCards, DetailsView) with new deps and adapters, replaces legacy timeline, and enriches server run events (params/response/usage/prompts/cost) to improve span rendering and filtering.\n> \n> - **UI (Client)**:\n>   - **Agent Prism Integration**: Add `TraceViewer`, `SpanCard`, `DetailsView`, badges, tabs, inputs, and shared theming under `components/agent-prism/` with span filtering util; install `@evilmartians/agent-prism-data/types`, `react-json-pretty`, `classnames`.\n>   - **Timeline Replacement**: Rework `AgentRunTimeline` to fetch run details in parallel and render via `TraceViewer` using `eliza-span-adapter` conversions; add loading states.\n>   - **Sidebar/Layout Tweaks**: Adjust agent sidebar timeline padding and chat sidebar resizable bounds (min 15%, max 85%).\n> - **Data Mapping**:\n>   - Add `eliza-span-adapter` to convert Eliza run summaries/details to Prism `TraceRecord`/`TraceSpan` (prompt/response, tokens, cost) and `filterSpansRecursively` util.\n> - **Server (API)**:\n>   - Enrich `MODEL_USED` and `ACTION_COMPLETED` events with `params`, `response`, `usage`, `prompts`, `prompt`, `inputTokens`, `outputTokens`, `cost` for better client rendering.\n> - **Theme/UX**:\n>   - Consistent `text-foreground`/`border-border`, compact dropdown trace selector, copy buttons, badges, improved selection/hover states.\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit d40f8a77336764b6af1cbd8a54c4a39e4942c84c. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-30T11:45:29Z",
      "mergedAt": "2025-09-30T15:05:32Z",
      "additions": 3892,
      "deletions": 685
    },
    {
      "id": "PR_kwDOMT5cIs6rCpmo",
      "title": "feat(client): Add agent runs visualization timeline",
      "author": "wtfsayo",
      "number": 6016,
      "body": "## Description\n\nThis PR adds a comprehensive agent runs visualization timeline component that provides detailed insights into agent execution flow and performance metrics.\n\n### Key Features\n\n- **Timeline Visualization**: Interactive timeline showing agent runs with expandable details\n- **Performance Metrics**: Display execution time, memory usage, and status information  \n- **Run Details**: Comprehensive view of messages, actions, evaluators, and providers\n- **Interactive UI**: Collapsible sections, hover effects, and responsive design\n- **Status Indicators**: Visual status badges and progress indicators\n\n### Components Added\n\n-  - Main timeline component with full agent run visualization\n- Comprehensive TypeScript types for agent run data structures\n- Interactive UI elements with proper accessibility support\n\n### Technical Implementation\n\n- Built with React and TypeScript\n- Uses Lucide React icons for consistent UI\n- Responsive design with proper mobile support\n- Optimized rendering for large datasets\n- Clean, maintainable component architecture\n\n### Testing\n\n- Component renders correctly with agent run data\n- Interactive elements function as expected\n- Responsive design tested across different screen sizes\n\nThis enhancement significantly improves the agent monitoring and debugging experience by providing detailed visual insights into agent execution patterns.\n\n<!-- CURSOR_SUMMARY -->\n---\n\n> [!NOTE]\n> Adds an interactive agent run timeline with new client hooks and server endpoints (with caching) backed by SQL adapter summaries and core types.\n> \n> - **Frontend (client)**:\n>   - **Timeline UI**: New `AgentRunTimeline` component and a \"Timeline\" tab in `agent-sidebar` to visualize runs and nested events with durations/status.\n>   - **Data Hooks**: Add `useAgentRuns` and `useAgentRunDetail` for polling run lists and details.\n>   - **Styles**: Timeline status classes added in `index.css`.\n> - **Backend (server)**:\n>   - **Runs API**: Implement `GET /:agentId/runs` and `GET /:agentId/runs/:runId` with aggregation, optional filters, and short-term caching; falls back to log aggregation if adapter summary unavailable.\n> - **Core/DB**:\n>   - **Types**: Introduce `RunStatus`, `AgentRunSummary`, `AgentRunSummaryResult` and `IDatabaseAdapter.getAgentRunSummaries`.\n>   - **SQL Adapter**: Implement `getAgentRunSummaries` in `BaseDrizzleAdapter` for efficient run listing and counts.\n> - **API Client**:\n>   - Wire up `RunsService` on `ElizaClient` (exposed for hooks usage).\n> - **Dependencies**:\n>   - Add `vis-timeline`, `vis-data` and related peer deps.\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit 80bff571f516eafdbe07c3efe09eaf89fd6d0484. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-29T08:41:43Z",
      "mergedAt": "2025-09-29T15:33:21Z",
      "additions": 1398,
      "deletions": 82
    },
    {
      "id": "PR_kwDOMT5cIs6q86kD",
      "title": "chore(lint): ran linter across the repo",
      "author": "wtfsayo",
      "number": 6011,
      "body": "This pull request primarily refactors code formatting for improved readability and consistency, focusing on function arguments, array/object literals, and callback formatting. No logic changes are introduced; all updates are stylistic, targeting trailing commas, indentation, and callback arrow function syntax. Additionally, minor formatting updates are made to configuration files.\r\n\r\nFormatting and code style improvements:\r\n\r\n* Standardized callback formatting in test files and utility functions by using multiline arrow functions and consistent indentation, improving readability in files such as `agent.test.ts`, `character-plugin-ordering.test.ts`, and `ollama-plugin-installation.test.ts`. [[1]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL362-R367) [[2]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL397-R402) [[3]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL414-R425) [[4]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL436-R445) [[5]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL446-R463) [[6]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL478-R493) [[7]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL505-R535) [[8]](diffhunk://#diff-ece06e17a19dbcecb7ba701aa31eda0042c6e850de24ff09593cca08d4f56c7eL22-R24) [[9]](diffhunk://#diff-f364d5de4085248d075b006be9349dc58177d84a795828921d0770f381c5126bL60-R60) [[10]](diffhunk://#diff-f364d5de4085248d075b006be9349dc58177d84a795828921d0770f381c5126bL80-R78) [[11]](diffhunk://#diff-f364d5de4085248d075b006be9349dc58177d84a795828921d0770f381c5126bL101-R97) [[12]](diffhunk://#diff-f364d5de4085248d075b006be9349dc58177d84a795828921d0770f381c5126bL120-R116) [[13]](diffhunk://#diff-f364d5de4085248d075b006be9349dc58177d84a795828921d0770f381c5126bL129-R127)\r\n* Refactored object and array literals to use single-line formatting and trailing commas for consistency in files such as `lerna.json`, `recursion-prevention.test.ts`, and `validation.ts`. [[1]](diffhunk://#diff-2d72bdead8afa0798d18995311992d684348a694c2d5e214e8e4d2b6153e4821L3-R14) [[2]](diffhunk://#diff-0b17f392943e64a4ad310166e18aecc1c36ac50a40d97f7032c81f33175764c2L48-R49) [[3]](diffhunk://#diff-0b17f392943e64a4ad310166e18aecc1c36ac50a40d97f7032c81f33175764c2L62-R63) [[4]](diffhunk://#diff-0b17f392943e64a4ad310166e18aecc1c36ac50a40d97f7032c81f33175764c2L77-R78) [[5]](diffhunk://#diff-1c2713f7bf29769ac9471ca185258c66195fe94fedfabb232d116d539620ae4fL54-R61)\r\n* Improved multiline argument formatting in function calls and error logging, enhancing clarity in files like `e2e-tests.ts`, `plugin-parser.ts`, `data-aggregator.ts`, `scenario/index.ts`, and `local-cli-delegation.ts`. [[1]](diffhunk://#diff-8b775212a1c2704ac4d6a1b4936c6e884b9b5f50ac743ffc313547f3ef1b33d4L138-R148) [[2]](diffhunk://#diff-b6753a3bb07daa9cef087506d2dd92c45de733b048829bec8b9c09256257c740L88-R90) [[3]](diffhunk://#diff-b6753a3bb07daa9cef087506d2dd92c45de733b048829bec8b9c09256257c740L166-R170) [[4]](diffhunk://#diff-9e2606224c867588aef1e44b41eee4c8d5a91f2abb5d4c27157a62599e7dc0c0L178-R187) [[5]](diffhunk://#diff-ef3705731497978ddf0a8bfeff4a9ee09b9f3fe11491df16931496575ce6df45L135-R137) [[6]](diffhunk://#diff-ef3705731497978ddf0a8bfeff4a9ee09b9f3fe11491df16931496575ce6df45L147-R151) [[7]](diffhunk://#diff-97324efdf1393e7f6997f06f7e8f76f786c8cb2131a1c1cdce8a574070be83bdL140-R144)\r\n* Updated test environment setup and command options to use consistent formatting and argument passing, including trailing commas and multiline function calls. [[1]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL68-R68) [[2]](diffhunk://#diff-27cf8d520b4335e7a380e99c2ae2d2a4e1fae652f25ab139482b7d7fb2ccd30bL241-R244) [[3]](diffhunk://#diff-e4632f53d4b35636af568acd817ea172675e16d87eb8f818f6539f1c5ab5a8a3L167-R167)\n\n<!-- CURSOR_SUMMARY -->\n---\n\n> [!NOTE]\n> Standardizes code style across the repo (arrays/objects, callbacks, multiline args, trailing commas, imports) and tidies configs/tests with no functional changes.\n> \n> - **Code Style/Formatting**:\n>   - Standardizes callback/arrow function spacing, multiline argument formatting, and trailing commas.\n>   - Normalizes object/array literals and import ordering across CLI, core, server, plugins, and tests.\n> - **Configs/JSON**:\n>   - Compacts/normalizes `lerna.json` and tsconfig files.\n> - **Tests**:\n>   - Aligns test code with new formatting (no behavioral changes).\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit 2531a172f6601b563446142a197aa9e72b97c91b. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-09-28T16:03:51Z",
      "mergedAt": "2025-09-28T16:03:58Z",
      "additions": 1126,
      "deletions": 1056
    },
    {
      "id": "PR_kwDOMT5cIs6rfDzg",
      "title": "fix: code formatting standardization and const declaration fix",
      "author": "wtfsayo",
      "number": 6027,
      "body": "## Summary\n\nThis PR addresses code quality improvements through formatting standardization and a variable declaration fix.\n\n## Changes\n\n### Code Formatting\n- **Quote Standardization**: Converted double quotes to single quotes across all client-side components for consistency\n- **Formatting Consistency**: Applied consistent code formatting to:\n  - Agent Prism components (Avatar, Badge, Button, CollapseAndExpandControls, etc.)\n  - Trace viewer and span card components\n  - Chat components\n  - Configuration files (tsconfig.json, lerna.json)\n\n### Bug Fix\n- **Schema Transformer** (`packages/plugin-sql/src/runtime-migrator/schema-transformer.ts`):\n  - Changed `let result` to `const result` on line 128\n  - The variable is never reassigned after initialization, making it a good candidate for `const`\n  - This follows best practices for immutable variable declarations\n\n### Other Improvements\n- Improved code readability through better line breaks and indentation\n- Applied consistent formatting to CLI tests and server API code\n- Reduced overall line count from 1385 to 1124 (-261 lines) through more efficient formatting\n\n## Impact\n\n- **No Functional Changes**: All changes are formatting-related except for the const fix\n- **Improved Code Quality**: More consistent codebase following project style guidelines\n- **Better Type Safety**: Using `const` instead of `let` for immutable variables\n\n## Testing\n\n- All existing tests should pass as no functional logic was changed\n- The const fix is a minor improvement that doesn't affect runtime behavior\n\n## Files Changed (42 files)\n\n### Core Components\n- `packages/cli/src/commands/start/index.ts`\n- `packages/cli/tests/commands/dev.test.ts`\n- `packages/cli/tests/commands/start.test.ts`\n\n### Client Components (Agent Prism)\n- 30+ component files in `packages/client/src/components/agent-prism/`\n- Utility files: `agent-prism-utils.ts`, `eliza-span-adapter.ts`\n\n### Plugin & Server\n- `packages/plugin-sql/src/runtime-migrator/schema-transformer.ts`\n- `packages/server/src/api/agents/runs.ts`\n\n### Configuration\n- `lerna.json`\n- `tsconfig.json`\n\n<!-- CURSOR_SUMMARY -->\n---\n\n> [!NOTE]\n> Standardizes quotes/formatting across the client UI, tests, and configs, and replaces a let with const in the SQL schema transformer.\n> \n> - **Client (agent-prism UI)**:\n>   - Quote/style normalization and minor formatting across `packages/client/src/components/agent-prism/**` (no logic changes).\n>   - Trace viewer, span card, tabs, and utilities (`agent-prism-utils.ts`, `eliza-span-adapter.ts`) reformatted.\n> - **CLI Tests**:\n>   - Formatting/line-wrap adjustments in `packages/cli/tests/commands/{dev,start}.test.ts`.\n> - **Server**:\n>   - Minor log string formatting in `packages/server/src/api/agents/runs.ts`.\n> - **Plugin SQL**:\n>   - In `packages/plugin-sql/src/runtime-migrator/schema-transformer.ts`, replace `let result` with `const result`.\n> - **Config**:\n>   - Compact arrays/formatting in `lerna.json` and `tsconfig.json`.\n> - **Other**:\n>   - Minor non-functional formatting in `packages/client/src/components/chat.tsx` and `agent-runs/AgentRunTimeline.tsx`.\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit fc94a1ce795f68129069b0ac6e0a2ca9eb94906b. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->",
      "repository": "elizaos/eliza",
      "createdAt": "2025-10-01T06:35:43Z",
      "mergedAt": "2025-10-01T06:36:18Z",
      "additions": 1124,
      "deletions": 1385
    }
  ],
  "codeChanges": {
    "additions": 21388,
    "deletions": 5923,
    "files": 204,
    "commitCount": 149
  },
  "completedItems": [
    {
      "title": "chore: refactor dynamic migrations",
      "prNumber": 5990,
      "type": "refactor",
      "body": "",
      "files": [
        "bun.lock",
        "packages/plugin-sql/drizzle.config.ts",
        "packages/plugin-sql/src/__tests__/migration/comprehensive-migration.test.ts",
        "packages/plugin-sql/src/__tests__/migration/initialization.test.ts",
        "packages/plugin-sql/src/__tests__/migration/runtime-migrator.test.ts",
        "packages/plugin-sql/src/__tests__/migration/schema-evolution-tests/01-drop-column-with-data.test.ts",
        "packages/plugin-sql/src/__tests__/migration/schema-evolution-tests/02-drop-table-with-relationships.test.ts",
        "packages/plugin-sql/src/__tests__/migration/schema-evolution-tests/03-type-changes-with-data.test.ts",
        "packages/plugin-sql/src/__tests__/migration/schema-evolution-tests/04-safe-column-additions.test.ts",
        "packages/plugin-sql/src/__tests__/migration/schema-evolution-tests/05-constraint-modifications.test.ts",
        "packages/plugin-sql/src/__tests__/migration/schema-evolution-tests/06-index-evolution.test.ts",
        "packages/plugin-sql/src/__tests__/migration/schema-evolution-tests/07-foreign-key-evolution.test.ts",
        "packages/plugin-sql/src/__tests__/migration/transaction-and-concurrency.test.ts",
        "packages/plugin-sql/src/__tests__/runtime/dynamic-migration.test.ts",
        "packages/plugin-sql/src/__tests__/test-helpers.ts",
        "packages/plugin-sql/src/__tests__/unit/migration-service.test.ts",
        "packages/plugin-sql/src/custom-migrator.ts",
        "packages/plugin-sql/src/migration-service.ts",
        "packages/plugin-sql/src/runtime-migrator/drizzle-adapters/diff-calculator.ts",
        "packages/plugin-sql/src/runtime-migrator/drizzle-adapters/snapshot-generator.ts",
        "packages/plugin-sql/src/runtime-migrator/drizzle-adapters/sql-generator.ts",
        "packages/plugin-sql/src/runtime-migrator/extension-manager.ts",
        "packages/plugin-sql/src/runtime-migrator/index.ts",
        "packages/plugin-sql/src/runtime-migrator/runtime-migrator.ts",
        "packages/plugin-sql/src/runtime-migrator/schema-transformer.ts",
        "packages/plugin-sql/src/runtime-migrator/storage/journal-storage.ts",
        "packages/plugin-sql/src/runtime-migrator/storage/migration-tracker.ts",
        "packages/plugin-sql/src/runtime-migrator/storage/snapshot-storage.ts",
        "packages/plugin-sql/src/runtime-migrator/types.ts",
        "packages/plugin-sql/tsconfig.build.json",
        "packages/plugin-sql/tsconfig.build.node.json",
        "packages/core/src/database.ts",
        "packages/core/src/runtime.ts",
        "packages/core/src/types/database.ts",
        "packages/plugin-sql/src/__tests__/migration/actual-runtime-scenario.test.ts",
        "packages/plugin-sql/src/__tests__/migration/initialization-with-plugin.test.ts",
        "packages/plugin-sql/src/__tests__/migration/runtime-simulation.test.ts",
        "packages/plugin-sql/src/__tests__/plugin-schema/test-plugin-schema.ts",
        "packages/plugin-sql/src/base.ts",
        "packages/plugin-sql/src/pg/adapter.ts",
        "packages/plugin-sql/src/pglite/adapter.ts",
        "packages/plugin-sql/README.md",
        "packages/plugin-sql/src/__tests__/migration/data-persistence.test.ts",
        "packages/plugin-sql/src/__tests__/migration/introspection.test.ts",
        "packages/plugin-sql/src/__tests__/migration/production-scenario.test.ts",
        "packages/plugin-sql/src/__tests__/unit/pg/adapter.test.ts",
        "packages/plugin-sql/src/__tests__/unit/pglite/adapter.test.ts",
        "packages/plugin-sql/src/index.browser.ts",
        "packages/plugin-sql/src/runtime-migrator/drizzle-adapters/database-introspector.ts",
        "packages/test-utils/src/mocks/database.ts",
        "packages/test-utils/src/mocks/runtime.ts",
        "packages/plugin-sql/src/__tests__/migration/type-normalization.test.ts",
        "packages/plugin-sql/src/__tests__/migration/database-detection.test.ts"
      ]
    },
    {
      "title": "refactor type definitions across runtime.",
      "prNumber": 5998,
      "type": "refactor",
      "body": "",
      "files": [
        "bun.lock",
        "packages/cli/src/commands/scenario/src/data-aggregator.ts",
        "packages/cli/src/commands/scenario/src/runtime-factory.ts",
        "packages/cli/src/utils/helpers.ts",
        "packages/core/src/__tests__/action-chaining-simple.test.ts",
        "packages/core/src/__tests__/runtime.test.ts",
        "packages/core/src/index.browser.ts",
        "packages/core/src/index.node.ts",
        "packages/core/src/index.ts",
        "packages/core/src/memory.ts",
        "packages/core/src/runtime.ts",
        "packages/core/src/schemas/character.ts",
        "packages/core/src/types/components.ts",
        "packages/core/src/types/events.ts",
        "packages/core/src/types/index.ts",
        "packages/core/src/types/knowledge.ts",
        "packages/core/src/types/memory.ts",
        "packages/core/src/types/model.ts",
        "packages/core/src/types/primitives.ts",
        "packages/core/src/types/runtime.ts",
        "packages/core/src/types/state.ts",
        "packages/plugin-bootstrap/src/actions/imageGeneration.ts",
        "packages/plugin-bootstrap/src/actions/reply.ts",
        "packages/plugin-bootstrap/src/index.ts",
        "packages/server/examples/standalone-server.js",
        "packages/service-interfaces/build.ts",
        "packages/service-interfaces/package.json",
        "packages/service-interfaces/src/index.browser.ts",
        "packages/service-interfaces/src/index.node.ts",
        "packages/service-interfaces/src/index.ts",
        "packages/service-interfaces/src/interfaces/browser.ts",
        "packages/service-interfaces/src/interfaces/email.ts",
        "packages/service-interfaces/src/interfaces/index.ts",
        "packages/service-interfaces/src/interfaces/lp.ts",
        "packages/service-interfaces/src/interfaces/message.ts",
        "packages/service-interfaces/src/interfaces/pdf.ts",
        "packages/service-interfaces/src/interfaces/post.ts",
        "packages/service-interfaces/src/interfaces/token.ts",
        "packages/service-interfaces/src/interfaces/transcription.ts",
        "packages/service-interfaces/src/interfaces/video.ts",
        "packages/service-interfaces/src/interfaces/wallet.ts",
        "packages/service-interfaces/src/interfaces/web-search.ts",
        "packages/service-interfaces/tsconfig.declarations.json",
        "packages/service-interfaces/tsconfig.json",
        "packages/test-utils/src/mocks/runtime.ts",
        "packages/test-utils/src/testModels.ts",
        "packages/plugin-bootstrap/src/__tests__/actions.test.ts",
        "packages/core/src/__tests__/services-by-type.test.ts"
      ]
    },
    {
      "title": "refactor(core): make runtime initialization idempotent and improve service registration coordination",
      "prNumber": 6004,
      "type": "refactor",
      "body": "# Core Cleanup: Remove legacy service initialization code\r\n\r\n## Problem Statement\r\n\r\nPart of Core Cleanup #5911:\r\n- Remove legacy code paths (double-inits, redundant type guards)\r\n- Audit and refactor type definitions across runtime\r\n- Clea",
      "files": [
        "packages/core/src/runtime.ts"
      ]
    },
    {
      "title": "chore(lint): ran linter across the repo",
      "prNumber": 6011,
      "type": "other",
      "body": "This pull request primarily refactors code formatting for improved readability and consistency, focusing on function arguments, array/object literals, and callback formatting. No logic changes are introduced; all updates are stylistic, targ",
      "files": [
        "build-utils.ts",
        "examples/standalone-cli-chat.ts",
        "lerna.json",
        "packages/cli/src/commands/create/utils/validation.ts",
        "packages/cli/src/commands/dev/actions/__tests__/recursion-prevention.test.ts",
        "packages/cli/src/commands/scenario/index.ts",
        "packages/cli/src/commands/scenario/src/data-aggregator.ts",
        "packages/cli/src/commands/scenario/src/plugin-parser.ts",
        "packages/cli/src/commands/scenario/src/runtime-factory.ts",
        "packages/cli/src/commands/start/index.ts",
        "packages/cli/src/commands/test/actions/e2e-tests.ts",
        "packages/cli/src/utils/local-cli-delegation.ts",
        "packages/cli/tests/commands/agent.test.ts",
        "packages/cli/tests/integration/version-display.test.ts",
        "packages/cli/tests/unit/characters/character-plugin-ordering.test.ts",
        "packages/cli/tests/unit/commands/create/ollama-plugin-installation.test.ts",
        "packages/cli/tests/unit/commands/test/e2e-tests.test.ts",
        "packages/cli/tests/unit/utils/local-cli-delegation.test.ts",
        "packages/core/src/__tests__/elizaos.test.ts",
        "packages/core/src/__tests__/runtime.test.ts",
        "packages/core/src/elizaos.ts",
        "packages/core/src/runtime.ts",
        "packages/core/src/types/components.ts",
        "packages/core/src/types/events.ts",
        "packages/core/src/types/index.ts",
        "packages/core/src/types/model.ts",
        "packages/core/src/types/state.ts",
        "packages/core/src/utils.ts",
        "packages/core/src/utils/node.ts",
        "packages/core/src/utils/paths.ts",
        "packages/plugin-bootstrap/src/index.ts",
        "packages/plugin-sql/src/__tests__/unit/index.test.ts",
        "packages/plugin-sql/src/index.ts",
        "packages/server/src/__tests__/agent-server-constructor.test.ts",
        "packages/server/src/__tests__/agent-server-database.test.ts",
        "packages/server/src/__tests__/agent-server-errors.test.ts",
        "packages/server/src/__tests__/agent-server-initialization.test.ts",
        "packages/server/src/__tests__/agent-server-lifecycle.test.ts",
        "packages/server/src/__tests__/agent-server-management.test.ts",
        "packages/server/src/__tests__/agent-server-middleware.test.ts",
        "packages/server/src/__tests__/integration/agent-server-interaction.test.ts",
        "packages/server/src/__tests__/integration/database-operations.test.ts",
        "packages/server/src/__tests__/integration/socketio-message-flow.test.ts",
        "packages/server/src/api/agents/crud.ts",
        "packages/server/src/api/agents/index.ts",
        "packages/server/src/api/memory/index.ts",
        "packages/server/src/api/messaging/index.ts",
        "packages/server/src/api/messaging/sessions.ts",
        "packages/server/src/api/runtime/health.ts",
        "packages/server/src/api/runtime/index.ts"
      ]
    },
    {
      "title": "fix(server): downgrade plugin import failure from error to warn",
      "prNumber": 6010,
      "type": "bugfix",
      "body": "### Summary\n- Downgrade log level from error to warn on failed dynamic import in `packages/server/src/managers/PluginLoader.ts`.\n- Rationale: initial import failure is frequently recoverable (auto-install/optional deps). Logging as error is",
      "files": [
        "packages/server/src/managers/PluginLoader.ts"
      ]
    },
    {
      "title": "feat(client): Add agent runs visualization timeline",
      "prNumber": 6016,
      "type": "feature",
      "body": "## Description\n\nThis PR adds a comprehensive agent runs visualization timeline component that provides detailed insights into agent execution flow and performance metrics.\n\n### Key Features\n\n- **Timeline Visualization**: Interactive timelin",
      "files": [
        "bun.lock",
        "packages/api-client/src/client.ts",
        "packages/api-client/src/types/base.ts",
        "packages/client/package.json",
        "packages/client/src/components/agent-runs/AgentRunTimeline.tsx",
        "packages/client/src/components/agent-sidebar.tsx",
        "packages/client/src/hooks/use-query-hooks.ts",
        "packages/client/src/index.css",
        "packages/client/src/routes/agent-detail.tsx",
        "packages/core/src/types/database.ts",
        "packages/plugin-sql/src/base.ts",
        "packages/server/src/api/agents/runs.ts"
      ]
    },
    {
      "title": "chore: update zod pckg version",
      "prNumber": 6015,
      "type": "other",
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Upgrade `zod` to `4.1.11` across the monorepo and align package resolutions.\n> \n> - **Dependencies**:\n>   - Upgrade `zod` to `4.1.11` in:\n>     - `packages/cli/package.json`\n>     - `packages/core/package",
      "files": [
        "bun.lock",
        "packages/cli/package.json",
        "packages/core/package.json",
        "packages/plugin-quick-starter/package.json",
        "packages/plugin-starter/package.json",
        "packages/project-starter/package.json",
        "packages/project-tee-starter/package.json"
      ]
    },
    {
      "title": "chore: disable local env endpoint in production",
      "prNumber": 6014,
      "type": "other",
      "body": "This PR enforces a production guard on /api/system/env/local.\n\n- GET /api/system/env/local returns 403 in production\n- POST /api/system/env/local returns 403 in production\n\nRationale: Prevent exposing or mutating local .env via API in prod.",
      "files": [
        "packages/server/src/api/system/environment.ts"
      ]
    },
    {
      "title": "fix: new package publishing on NPM, add public publish config",
      "prNumber": 6012,
      "type": "bugfix",
      "body": "### Summary\n- Added `publishConfig.access = public` to `@elizaos/service-interfaces`.\n- Extended release workflow to publish new/unpublished packages individually if bulk Lerna publish fails, keeping versions and dist-tags in sync.\n\n### Wha",
      "files": [
        ".github/workflows/release.yaml",
        "bun.lock",
        "packages/service-interfaces/package.json"
      ]
    },
    {
      "title": "feat: bump deps",
      "prNumber": 6025,
      "type": "feature",
      "body": "bumps le' deps, :pogchamp:\n\n<!-- CURSOR_SUMMARY -->\n---\n\n> [!NOTE]\n> Updates dependencies across `packages/*` and root, including major tooling and runtime bumps (TypeScript, ESLint, Vite, Puppeteer, dotenv, langchain, uuid, Sentry, and mor",
      "files": [
        "bun.lock",
        "package.json",
        "packages/api-client/package.json",
        "packages/cli/package.json",
        "packages/client/package.json",
        "packages/core/package.json",
        "packages/server/package.json"
      ]
    },
    {
      "title": "fix: register and export shouldRespondProvider in bootstrap plugin",
      "prNumber": 6024,
      "type": "bugfix",
      "body": "# Relates to\r\n\r\nFixes missing shouldRespondProvider registration in bootstrap plugin\r\n\r\n# Risks\r\n\r\nLow. This change restores functionality that was accidentally removed. It only affects the shouldRespond logic in the bootstrap plugin by pro",
      "files": [
        "packages/plugin-bootstrap/src/index.ts",
        "packages/plugin-bootstrap/src/providers/index.ts",
        "packages/plugin-bootstrap/src/providers/shouldRespond.ts",
        "packages/plugin-bootstrap/tsconfig.json"
      ]
    },
    {
      "title": "feat(client): Enhanced Agent Runs Sidebar with Improved Timeline UI",
      "prNumber": 6023,
      "type": "feature",
      "body": "## Summary\n\nThis PR significantly enhances the Agent Runs sidebar interface with improved Timeline visualization, better space utilization, and enhanced data extraction.\n\n## Key Changes\n\n### 1. Sidebar Size & Space Optimization\n- **Increase",
      "files": [
        "bun.lock",
        "packages/client/package.json",
        "packages/client/src/components/agent-prism/Avatar.tsx",
        "packages/client/src/components/agent-prism/Badge.tsx",
        "packages/client/src/components/agent-prism/Button.tsx",
        "packages/client/src/components/agent-prism/CollapseAndExpandControls.tsx",
        "packages/client/src/components/agent-prism/CollapsibleSection.tsx",
        "packages/client/src/components/agent-prism/DetailsView/DetailsView.tsx",
        "packages/client/src/components/agent-prism/DetailsView/DetailsViewAttributesTab.tsx",
        "packages/client/src/components/agent-prism/DetailsView/DetailsViewHeader.tsx",
        "packages/client/src/components/agent-prism/DetailsView/DetailsViewHeaderActions.tsx",
        "packages/client/src/components/agent-prism/DetailsView/DetailsViewInputOutputTab.tsx",
        "packages/client/src/components/agent-prism/DetailsView/DetailsViewMetrics.tsx",
        "packages/client/src/components/agent-prism/DetailsView/DetailsViewRawDataTab.tsx",
        "packages/client/src/components/agent-prism/IconButton.tsx",
        "packages/client/src/components/agent-prism/PriceBadge.tsx",
        "packages/client/src/components/agent-prism/SearchInput.tsx",
        "packages/client/src/components/agent-prism/SpanCard/SpanCard.tsx",
        "packages/client/src/components/agent-prism/SpanCard/SpanCardBadges.tsx",
        "packages/client/src/components/agent-prism/SpanCard/SpanCardConnector.tsx",
        "packages/client/src/components/agent-prism/SpanCard/SpanCardTimeline.tsx",
        "packages/client/src/components/agent-prism/SpanCard/SpanCardToggle.tsx",
        "packages/client/src/components/agent-prism/SpanStatus.tsx",
        "packages/client/src/components/agent-prism/Tabs.tsx",
        "packages/client/src/components/agent-prism/TextInput.tsx",
        "packages/client/src/components/agent-prism/TimestampBadge.tsx",
        "packages/client/src/components/agent-prism/TokensBadge.tsx",
        "packages/client/src/components/agent-prism/TraceList/TraceList.tsx",
        "packages/client/src/components/agent-prism/TraceList/TraceListItem.tsx",
        "packages/client/src/components/agent-prism/TraceList/TraceListItemHeader.tsx",
        "packages/client/src/components/agent-prism/TraceViewer.tsx",
        "packages/client/src/components/agent-prism/TreeView.tsx",
        "packages/client/src/components/agent-prism/shared.ts",
        "packages/client/src/components/agent-runs/AgentRunTimeline.tsx",
        "packages/client/src/components/agent-sidebar.tsx",
        "packages/client/src/components/chat.tsx",
        "packages/client/src/lib/agent-prism-utils.ts",
        "packages/client/src/lib/eliza-span-adapter.ts",
        "packages/server/src/api/agents/runs.ts"
      ]
    },
    {
      "title": "fix(config): remove invalid project references from root tsconfig",
      "prNumber": 6022,
      "type": "bugfix",
      "body": "## Issue\n\nTypeScript was throwing an error:\n```\nFile '/Users/studio/Documents/GitHub/eliza/packages/core' not found.\n```\n\n## Root Cause\n\nThe root `tsconfig.json` had a `references` array pointing to `packages/core`, but TypeScript project r",
      "files": [
        "tsconfig.json"
      ]
    },
    {
      "title": "fix(cli): pass ProjectAgent.plugins to server.startAgents in start command",
      "prNumber": 6021,
      "type": "bugfix",
      "body": "## Description\n\nFixes #6017\n\nWhen running `elizaos start` or `elizaos dev` in a plugin directory, the CLI would detect the plugin and create a ProjectAgent with the plugin in its plugins array, but would **not pass these plugins** to `serve",
      "files": [
        "packages/cli/src/commands/start/index.ts",
        "packages/cli/tests/commands/dev.test.ts",
        "packages/cli/tests/commands/start.test.ts",
        "packages/cli/tests/commands/test-utils.ts",
        "tsconfig.json"
      ]
    },
    {
      "title": "fix: code formatting standardization and const declaration fix",
      "prNumber": 6027,
      "type": "bugfix",
      "body": "## Summary\n\nThis PR addresses code quality improvements through formatting standardization and a variable declaration fix.\n\n## Changes\n\n### Code Formatting\n- **Quote Standardization**: Converted double quotes to single quotes across all cli",
      "files": [
        "lerna.json",
        "packages/cli/src/commands/start/index.ts",
        "packages/cli/tests/commands/dev.test.ts",
        "packages/cli/tests/commands/start.test.ts",
        "packages/client/src/components/agent-prism/Avatar.tsx",
        "packages/client/src/components/agent-prism/Badge.tsx",
        "packages/client/src/components/agent-prism/Button.tsx",
        "packages/client/src/components/agent-prism/CollapseAndExpandControls.tsx",
        "packages/client/src/components/agent-prism/CollapsibleSection.tsx",
        "packages/client/src/components/agent-prism/DetailsView/DetailsView.tsx",
        "packages/client/src/components/agent-prism/DetailsView/DetailsViewAttributesTab.tsx",
        "packages/client/src/components/agent-prism/DetailsView/DetailsViewHeader.tsx",
        "packages/client/src/components/agent-prism/DetailsView/DetailsViewHeaderActions.tsx",
        "packages/client/src/components/agent-prism/DetailsView/DetailsViewInputOutputTab.tsx",
        "packages/client/src/components/agent-prism/DetailsView/DetailsViewMetrics.tsx",
        "packages/client/src/components/agent-prism/DetailsView/DetailsViewRawDataTab.tsx",
        "packages/client/src/components/agent-prism/IconButton.tsx",
        "packages/client/src/components/agent-prism/PriceBadge.tsx",
        "packages/client/src/components/agent-prism/SearchInput.tsx",
        "packages/client/src/components/agent-prism/SpanCard/SpanCard.tsx",
        "packages/client/src/components/agent-prism/SpanCard/SpanCardBadges.tsx",
        "packages/client/src/components/agent-prism/SpanCard/SpanCardConnector.tsx",
        "packages/client/src/components/agent-prism/SpanCard/SpanCardTimeline.tsx",
        "packages/client/src/components/agent-prism/SpanCard/SpanCardToggle.tsx",
        "packages/client/src/components/agent-prism/SpanStatus.tsx",
        "packages/client/src/components/agent-prism/Tabs.tsx",
        "packages/client/src/components/agent-prism/TextInput.tsx",
        "packages/client/src/components/agent-prism/TimestampBadge.tsx",
        "packages/client/src/components/agent-prism/TokensBadge.tsx",
        "packages/client/src/components/agent-prism/TraceList/TraceList.tsx",
        "packages/client/src/components/agent-prism/TraceList/TraceListItem.tsx",
        "packages/client/src/components/agent-prism/TraceList/TraceListItemHeader.tsx",
        "packages/client/src/components/agent-prism/TraceViewer.tsx",
        "packages/client/src/components/agent-prism/TreeView.tsx",
        "packages/client/src/components/agent-prism/shared.ts",
        "packages/client/src/components/agent-runs/AgentRunTimeline.tsx",
        "packages/client/src/components/chat.tsx",
        "packages/client/src/lib/agent-prism-utils.ts",
        "packages/client/src/lib/eliza-span-adapter.ts",
        "packages/plugin-sql/src/runtime-migrator/schema-transformer.ts",
        "packages/server/src/api/agents/runs.ts",
        "tsconfig.json"
      ]
    },
    {
      "title": "chore: remove obsolete Docker and devcontainer files",
      "prNumber": 6026,
      "type": "other",
      "body": "Removes obsolete files that are no longer needed:\n- .devcontainer/Dockerfile\n- .devcontainer/devcontainer.json\n- Dockerfile.docs\n- docker-compose-docs.yaml\n\nThese files were already deleted from the filesystem and this PR stages and commits",
      "files": [
        ".devcontainer/Dockerfile",
        ".devcontainer/devcontainer.json",
        "Dockerfile.docs",
        "docker-compose-docs.yaml"
      ]
    }
  ],
  "topContributors": [
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 395.89745818463155,
      "prScore": 389.5834581846316,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 1.3139999999999998,
      "summary": null
    },
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 69.02282068848854,
      "prScore": 69.02282068848854,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "0xbbjoker",
      "avatarUrl": "https://avatars.githubusercontent.com/u/54844437?u=90fe1762420de6ad493a1c1582f1f70c0d87d8e2&v=4",
      "totalScore": 43.88797154237037,
      "prScore": 38.48797154237037,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0.4,
      "summary": null
    },
    {
      "username": "standujar",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16385918?u=718bdcd1585be8447bdfffb8c11ce249baa7532d&v=4",
      "totalScore": 14.649449154672439,
      "prScore": 14.649449154672439,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "linear",
      "avatarUrl": "https://avatars.githubusercontent.com/in/20150?v=4",
      "totalScore": 8,
      "prScore": 0,
      "issueScore": 8,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "borisudovicic",
      "avatarUrl": "https://avatars.githubusercontent.com/u/31806472?u=8935f4d43fd7e4eb9bf5ff92d54d4d2f8ac8a786&v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    }
  ],
  "newPRs": 13,
  "mergedPRs": 16,
  "newIssues": 5,
  "closedIssues": 5,
  "activeContributors": 7
}
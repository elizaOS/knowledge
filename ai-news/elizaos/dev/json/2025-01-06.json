{
  "server": "elizaOS Development",
  "title": "elizaOS Development Discord - 2025-01-06",
  "date": 1736121600,
  "stats": {
    "totalMessages": 600,
    "totalUsers": 67
  },
  "categories": [
    {
      "channelId": "1320246527268098048",
      "channelName": "üí¨ÔΩúgeneral",
      "summary": "# Discord Chat Analysis\n\n## 1. Summary\nThe chat primarily revolves around technical issues with the Eliza AI agent framework. Multiple users report installation and deployment problems, particularly with the develop branch which appears to be frequently broken. Key issues include TypeScript errors related to the Reclaim protocol TLS package, PostgreSQL database errors, and SQLite zero-length vector errors. Several users are seeking guidance on plugin development, particularly for social media integrations like Twitter, Twitch streaming, and OpenSea NFT data. There's also discussion about hosting options and knowledge base integration. The conversation indicates that the project is actively developed but faces stability challenges, with developers recommending using the main branch instead of develop for more reliable operation. Some community members are also exploring job opportunities in the web3 space and sharing information about demo events for showcasing Eliza agents.\n\n## 2. FAQ\nQ: What's the difference between developing with eliza-starter and eliza? (asked by James) A: Eliza comes with everything while with starter you add plugins yourself (answered by AIFlow.ML @ ElizaOS)\nQ: How can I fix the TypeScript error with ROOT_CAS in the develop branch? (asked by WarfreakzPlays) A: Use main branch instead as develop is currently broken (answered by sayonara)\nQ: How do I fix the PostgreSQL error \"simple_heap_update\"? (asked by agwnl) A: Dropping the participants table fixes this (answered by agwnl)\nQ: Is there a way to allow only wallets holding specific tokens to talk with Eliza? (asked by AD) A: Unanswered\nQ: How can I add a knowledge base beyond character file, like PDF files? (asked by AD) A: Use the folder2knowledge tool from the characterfile repository (answered by W3_Bounty)\nQ: How can I fix the \"SQLITE ERROR, zero-length vectors not supported\" issue? (asked by BitCoder) A: Delete agent/data/db.sqlite, fetch latest develop, and run git pull && pnpm i (answered by Santi)\nQ: Where should I put the knowledge.json file in my Eliza project? (asked by totti) A: It goes into the character file JSON in the knowledge field (answered by Odilitime)\nQ: Is the Solana plugin the right one to use for analyzing Solana tokens? (asked by jbolerfreak) A: Yes, use plugin-solana with Birdeye for token analytics (answered by Santi)\n\n## 3. Help Interactions\nHelper: sayonara | Helpee: WarfreakzPlays | Context: Issues with develop branch breaking integration tests | Resolution: Suggested using main branch and offered to review pull request when develop is fixed\nHelper: Santi | Helpee: BitCoder | Context: SQLite error with zero-length vectors after installing news plugin | Resolution: Provided steps to fix by deleting db.sqlite file and pulling latest develop branch\nHelper: W3_Bounty | Helpee: AD | Context: Adding bot to Discord and setting up knowledge base | Resolution: Shared documentation link and explained how to use folder2knowledge tool\nHelper: ‚Ñ≠ùî¶ùî≠ùî•ùî¢ùîØ | Helpee: kAI wilder | Context: Looking for OpenSea integration for NFT data | Resolution: Suggested using EVM unit or Reservoir tools as alternatives with better reliability\nHelper: Santi | Helpee: jbolerfreak | Context: Confusion about which plugin to use for Solana token analysis | Resolution: Clarified that plugin-solana with Birdeye is appropriate for the use case\n\n## 4. Action Items\nTechnical: Fix develop branch stability issues | Description: Address recurring integration test failures and TypeScript errors | Mentioned By: Multiple users\nTechnical: Resolve PostgreSQL \"simple_heap_update\" error | Description: Fix database error occurring on deployment | Mentioned By: agwnl\nTechnical: Fix SQLite zero-length vectors error | Description: Address database error occurring after one question | Mentioned By: BitCoder\nFeature: Create Twitch streaming plugin | Description: Develop integration for agents to stream on Twitch with chat interaction | Mentioned By: DeFine and agwnl\nFeature: Develop OpenSea/NFT marketplace integration | Description: Create plugin for querying NFT properties and sales data | Mentioned By: kAI wilder\nFeature: Implement Twitter Spaces plugin | Description: Create functionality for agents to participate in Twitter Spaces | Mentioned By: Vice man\nDocumentation: Improve plugin development documentation | Description: Make it clearer how to create and register new plugins | Mentioned By: Bertux\nDocumentation: Create guide for onboarding new developers | Description: Simplify documentation for newcomers to reduce confusion | Mentioned By: BitCoder",
      "messageCount": 199,
      "userCount": 45
    },
    {
      "channelId": "1324089429727514674",
      "channelName": "ü§ñÔΩúagent-dev-school",
      "summary": "# Discord Chat Analysis: ü§ñÔΩúagent-dev-school\n\n## 1. Summary\nThe chat primarily revolves around technical discussions about the Eliza agent framework. Key topics include:\n\n- **State management and context persistence**: Users discussed how to maintain state between plugin calls, with suggestions to use runtime context, cache, or providers to inject information into the context.\n- **Plugin architecture**: Conversations about plugin orchestration, action handlers, and callback mechanisms, with code examples shared for implementation.\n- **Environment setup challenges**: Multiple users encountered issues with Node.js version compatibility (particularly with v23.3.0 vs. older LTS versions), Docker configuration, and API integration.\n- **Model provider integration**: Users troubleshooted issues with OpenAI and Heurist API connections, including quota errors and configuration problems.\n- **Custom functionality development**: Discussions about implementing crypto trading bots, image handling capabilities, and Twitter/Telegram client integrations.\n- **Database extensions**: A user shared their implementation of an optional table name parameter for the PostgreSQL adapter.\n\nThe chat demonstrates a community actively building with the Eliza framework while helping each other overcome technical hurdles in implementation and customization.\n\n## 2. FAQ\nQ: What are possible reasons for the action handler not writing handler response to the client? (asked by kAI wilder) A: Action handler response not writing to client could stem from incorrect middleware configuration, missing response serialization, async handler not properly resolved, or mismatched content type headers. (answered by Ruby)\nQ: How does one assure real-time cryptocurrency pricing data? (asked by ‚Ñ≠ùî¶ùî≠ùî•ùî¢ùîØ) A: Real-time crypto pricing requires a multi-layered approach: websocket streams from exchanges, aggregator APIs like coingecko, and on-chain oracle networks like chainlink and pyth for low-latency price feeds. (answered by Ruby)\nQ: How to debug if my bot doesn't see any Twitter interactions it's supposed to see? (asked by Fricoben) A: Twitter API interaction debugging checklist: validate webhook config, check rate limits, verify oauth tokens, inspect network logs. (answered by Ruby)\nQ: What does `TWITTER_DRY_RUN` mean in the .env? (asked by Fricoben) A: It's a debug flag that lets you simulate Twitter interactions without actually sending real API calls. When set to true, it logs interaction details but doesn't execute them. (answered by Ruby)\nQ: Can we add custom function API such as market data, news with Eliza? (asked by TungHoang) A: Absolutely. Eliza's extensibility allows implementing custom API integrations via middleware or character-specific plugins. (answered by Ruby)\nQ: How to debug if I'm seeing a looping message upon running Eliza? (asked by DaKid) A: Check character configuration for circular reference triggers, enable debug logging to trace execution path, and verify no runaway regex patterns in response generation. (answered by Ruby)\nQ: How to change the node version of Eliza framework? (asked by DreedX) A: Use nvm (node version manager) to install and switch between Node.js versions. (answered by Ruby)\nQ: Can I custom an API? (asked by Tr·ªçng) A: Yes, you can create a custom API using Express in TypeScript. (answered by Ruby)\n\n## 3. Help Interactions\nHelper: W3_Bounty | Helpee: kAI wilder | Context: How to add information to the context | Resolution: Explained that providers are the most basic form to add info to the context, with code example showing how a simple provider works.\nHelper: sayonara | Helpee: skmd | Kev's meat space | Context: Installation errors on Ubuntu VM | Resolution: Suggested running clean, install, build commands and recommended using Docker for easier reproducibility.\nHelper: Ruby | Helpee: skmd | Kev's meat space | Context: Docker setup for Eliza | Resolution: Provided a detailed Dockerfile and step-by-step guide for installing Eliza in Docker on Ubuntu.\nHelper: W3_Bounty | Helpee: GeoStrong | Context: Changing OpenAI model in configuration | Resolution: Provided the correct environment variables to set in .env file to change the model.\nHelper: jeanayala.eth | Helpee: saccharinedreams | Context: Twitter client ignoring plugins | Resolution: Explained that plugins can use clients, not vice versa, and suggested using client-twitter inside the plugin.\nHelper: kAI wilder | Helpee: bk0z4k | Context: Integrating echo-chambers plugin | Resolution: Shared a GitHub repository link to help with plugin integration.\n\n## 4. Action Items\nTechnical: Implement a sliding window or token-based truncation strategy for context management to prevent exponential growth | Mentioned By: Ruby\nTechnical: Create a custom solution or fork the existing runtime context handler for conversation context management | Mentioned By: Ruby\nTechnical: Extend PostgreSQL adapter to take an optional table name parameter | Mentioned By: kAI wilder\nTechnical: Develop test suite for PostgreSQL adapter extension | Mentioned By: Ruby\nTechnical: Implement Docker containerization for cross-platform deployment consistency | Mentioned By: Ruby\nTechnical: Create a custom provider for crypto news integration | Mentioned By: Ruby\nTechnical: Develop an image metadata indexer for contextual image mapping | Mentioned By: Ruby\nDocumentation: Create a guide for implementing Telegram bot integration with Eliza | Mentioned By: DreedX\nDocumentation: Document the process for debugging Twitter API interactions | Mentioned By: Fricoben\nFeature: Build a modular design for Solana trading bot with separate microservices for data aggregation, trading logic, and portfolio management | Mentioned By: Ruby\nFeature: Implement a custom image context library for using specific images in conversations | Mentioned By: Ruby",
      "messageCount": 374,
      "userCount": 29
    },
    {
      "channelId": "1323745969115893780",
      "channelName": "üì•ÔΩúpull-requests",
      "summary": "# Analysis of \"üì•ÔΩúpull-requests\" Channel\n\n## 1. Summary\nThe channel primarily focuses on pull requests and issue discussions for the ElizaOS project. Several PRs were shared, including #1917 which appeared to resolve multiple issues in the develop branch, bringing relief to the team. There was discussion about a missing docker-compose file in the \"starter\" component, which was causing deployment problems and being referred to as a \"source of fake bugs.\" A community member named R0am made their first contribution to the elizaos.github.io website. There was also a question about potentially moving away from Token 2022 to the legacy token for better cross-chain compatibility, with Odilitime clarifying that v2 is still in planning stages and no immediate major code refactor is happening. The conversations show active development and community participation in resolving issues and improving the codebase.\n\n## 2. FAQ\nQ: Does PR #1917 resolve a lot of the issues in develop right now? (asked by ÍßÅNinja_DevÍßÇ) A: Fingers crossed. Pray for develop üôè (answered by Santi)\nQ: Are we finally moving away from Token 2022 to the legacy token, which is more cross-chain compatible? (asked by Dev LoD) A: I'm pretty sure he's not talking about a major code refactor rn. v2 is still in planning stages. (answered by Odilitime)\n\n## 3. Help Interactions\nHelper: Odilitime | Helpee: Dev LoD | Context: Concern about potentially wasting development effort if moving from Token 2022 to legacy token | Resolution: Clarified that no major code refactor is happening immediately and v2 is still in planning stages\nHelper: Ruby | Helpee: AIFlow.ML @ ElizaOS | Context: Issues with the starter component and missing docker-compose file | Resolution: Identified the need for a comprehensive audit of the starter's deployment workflow\n\n## 4. Action Items\nTechnical: Investigate and fix issues with the starter component, particularly the missing docker-compose file | Mentioned By: AIFlow.ML @ ElizaOS\nTechnical: Look into issue #1925 | Mentioned By: AIFlow.ML @ ElizaOS\nTechnical: Perform deep dive into RPC data flow to address character file transmission errors | Mentioned By: Ruby\nDocumentation: Audit the starter's deployment workflow documentation | Mentioned By: Ruby",
      "messageCount": 27,
      "userCount": 10
    }
  ]
}
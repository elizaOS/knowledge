{
  "server": "elizaOS",
  "title": "elizaOS Discord - 2025-08-15",
  "date": 1755216000,
  "stats": {
    "totalMessages": 330,
    "totalUsers": 35
  },
  "categories": [
    {
      "channelId": "1253563209462448241",
      "channelName": "discussion",
      "summary": "# Discord Chat Analysis\n\n## 1. Summary\nThe chat primarily revolves around discussions about ElizaOS, its ecosystem, and related topics. There was debate about why Shaw's X account was banned, with some suggesting it was due to scraping X's API instead of paying for access, while others disputed this explanation. Technical discussions were limited, but included mentions of the ElizaOS website migration to docs.elizaos.ai after users reported the original site was down with a 404 error. A university student mentioned working on a research project about AI agents performing MEV on L2s using ElizaOS and requested plugin suggestions. There was also brief discussion about potential use cases for ElizaOS, including the possibility of building an iOS app that would allow agents registered with the DAO to be available for users to interact with, potentially creating a monetization pathway through advertisements.\n\n## 2. FAQ\nQ: Why was Shaw's X account banned? (asked by hildi) A: Multiple theories discussed but no definitive answer; some suggest API scraping issues (answered by multiple users)\nQ: Are A through D elizaOS forks like `aV` or their own OS for agentic agents? (asked by agentVooc) A: Unanswered\nQ: Why is the elizaOS website down with a 404 error? (asked by adsur) A: Migrated to docs.elizaos.ai (answered by Kenk)\nQ: Is docs.elizaos.ai the elizaOS or ai16z official website? (asked by Squiggles2.0) A: Unanswered\n\n## 3. Help Interactions\nHelper: Kenk | Helpee: Squiggles2.0 and adsur | Context: Users reported the ElizaOS website was down with a 404 error | Resolution: Kenk informed them the site had been migrated to docs.elizaos.ai\n\n## 4. Action Items\nTechnical Tasks: Description: Investigate plugins for AI agents performing MEV on L2s | Mentioned By: Pepec01\nTechnical Tasks: Description: Explore agent/task monitoring capabilities in ElizaOS | Mentioned By: Pepec01\nFeature Requests: Description: Build an ElizaOS iOS app that allows agents registered with the DAO to be available to users | Mentioned By: DorianD\nFeature Requests: Description: Create functionality for agents to post and reply with advertisements as a monetization strategy | Mentioned By: DorianD\nDocumentation Needs: Description: Update redirects from old ElizaOS website to new docs.elizaos.ai domain | Mentioned By: adsur",
      "messageCount": 140,
      "userCount": 20
    },
    {
      "channelId": "1300025221834739744",
      "channelName": "ðŸ’»-coders",
      "summary": "# Discord Chat Analysis for ðŸ’»-coders\n\n## 1. Summary:\nThe discussion primarily revolves around database issues, agent looping mechanisms, and plugin functionality in ElizaOS. Charlie reported a database timeout issue with PGLITE after 15-20 hours of runtime, to which sayonara suggested using real Postgres in production environments. A significant technical conversation focused on implementing agent looping for chained action calls, with 0xbbjoker sharing a GitHub branch (feat/integrated-loop-action-call) demonstrating a potential solution. Rabbidfly inquired about the Twitter Plugin's functionality with the local RAG database, specifically whether an agent could retrieve information from RAG when responding to tweets. Additionally, Pepec01 asked about monitoring solutions for AI agents performing MEV on L2s using ElizaOS. The chat also noted that eliza.how has been migrated to docs.elizaos.ai.\n\n## 2. FAQ:\nQ: Is there a database timeout on current eliza database sys (I'm using PGLITE)? (asked by Charlie) A: Nothing that we have put; but it's recommended to use real postgres in prod (answered by sayonara)\nQ: Am I correct that the suggestion is to loop an agent directly inside a messagesHandler? Or try to implant the looping directly on MCP plugin for a CALL_TOOL action? (asked by maikyman) A: In bootstrap yes, smth like this -> `feat/integrated-loop-action-call` https://github.com/elizaOS/eliza/tree/feat/integrated-loop-action-call (answered by 0xbbjoker)\nQ: Does the agent query the local RAG database when replying to the tweets? (asked by Rabbidfly) A: Unanswered\nQ: How's the situation with agent/task monitoring? Are there existing plugins for that, or is it more of a \"set up Grafana yourself\" situation? (asked by Pepec01) A: Unanswered\n\n## 3. Help Interactions:\nHelper: 0xbbjoker | Helpee: Charlie/maikyman | Context: Agent looping for chained action calls | Resolution: Shared a GitHub branch demonstrating a solution for looping agents when they need to chain multiple action calls\nHelper: Kenk | Helpee: Rabbidfly | Context: Confusion about eliza.how being \"borked\" | Resolution: Clarified that documentation has been migrated to docs.elizaos.ai\nHelper: sayonara | Helpee: Charlie | Context: Database timeout issues with PGLITE | Resolution: Suggested using real Postgres in production environments\n\n## 4. Action Items:\nTechnical: Implement proper database connection handling for long-running agents using PGLITE | Mentioned By: Charlie\nTechnical: Develop solution for agent looping when chaining multiple action calls | Mentioned By: 0xbbjoker\nTechnical: Test Twitter Plugin integration with local RAG database for retrieving information | Mentioned By: Rabbidfly\nFeature: Develop agent/task monitoring capabilities for ElizaOS | Mentioned By: Pepec01\nFeature: Support for AI agents performing MEV on L2s | Mentioned By: Pepec01",
      "messageCount": 13,
      "userCount": 8
    },
    {
      "channelId": "1361442528813121556",
      "channelName": "fun",
      "summary": "# Discord Chat Analysis for Channel \"fun\"\n\n## 1. Summary\nThe chat segment contains minimal technical discussion. A user named casper inquired about a token they created that is not tradable, expressing a desire to sell it to recover their investment. Another user named realmad asked about the font used in the \"autofun\" logo. The conversation included some joking responses but contained no substantive technical discussions, problem-solving, or implementations.\n\n## 2. FAQ\nQ: 9j1ayE6MQLuiUmcVS2qivsjbznajvidLWQcFBjPQ5FUN this token is not tradble why i created this and i want to sell to make my money back (asked by casper) A: Unanswered\nQ: Anyone here have any idea what font was used for autofun logo? (asked by realmad) A: its called BTUO \"BIG TITS UP ONLY\" (answered by 33coded)\n\n## 3. Help Interactions\nNo significant help interactions were present in the chat segment.\n\n## 4. Action Items\nNo clear action items were identified in the chat segment.",
      "messageCount": 10,
      "userCount": 4
    },
    {
      "channelId": "1377726087789940836",
      "channelName": "core-devs",
      "summary": "# Analysis of \"core-devs\" Discord Chat\n\n## 1. Summary:\nThe discussion primarily focused on dependency management issues in the Eliza project. The team encountered significant problems with Bun package installations, with cjft spending hours troubleshooting dependency errors that were difficult to trace. They discovered that pnpm provided much better error logging, which helped identify issues with packages like \"bats-assert\" and mismatched peer dependencies. The team also discussed architectural improvements, including a proposal for a more explicit ElizaOS instance initialization pattern that would make the codebase less \"magical\" and more customizable. They explored build performance issues, noting that the client build is the slowest part and suggesting packaging \"@elizaos/client\" separately. There were discussions about streaming functionality in useModel, with shaw suggesting using a STREAMING_TEXT event handler type rather than a separate function. The team also discussed metrics collection for tracking developer engagement and installation statistics.\n\n## 2. FAQ:\nQ: What's causing the installation problems? (asked by shaw) A: Random dependencies not found and 404ing in package installs, with bats-assert package being one issue (answered by cjft and Odilitime)\nQ: What's the use case for runtime.on('serviceAvailable')? (asked by shaw) A: Allowing plugins to be registered in any order without polling for services (answered by Odilitime)\nQ: Why is bun in packages at all? (asked by Odilitime) A: Because it uses bun:test and any Bun.() functions need types (answered by cjft)\nQ: How do we make an orange Eliza robot competing next year? (asked by R0am | tip.md) A: Unanswered\nQ: How can we track metrics like churn and new dev onboarding? (asked by sayonara) A: We can get machine addresses for unique installs (answered by shaw)\nQ: How can I help? (asked by jin) A: Need to redirect eliza.how to https://docs.elizaos.ai/ (answered by Borko)\n\n## 3. Help Interactions:\nHelper: pnpm | Helpee: cjft | Context: Struggling with dependency errors in Bun that were hard to trace | Resolution: pnpm provided better error logs, identified issues with bats-assert package and fixed mismatched peer deps in 5 minutes\nHelper: shaw | Helpee: Odilitime | Context: Needed a way for plugins to be registered in any order | Resolution: Suggested using runtime.registerEvent and runtime.emitEvent, or loading them in the init function\nHelper: shaw | Helpee: cjft | Context: Discussing how to improve useModel for streaming | Resolution: Suggested using a STREAMING_TEXT event handler type instead of a separate function to maintain type safety\nHelper: R0am | tip.md | Helpee: Team | Context: Needed ways to track package downloads | Resolution: Shared npm-stat.com link and curl command to get download statistics\n\n## 4. Action Items:\nTechnical: Fix dependency issues with bats-assert and other packages | Description: Address 404 errors during installation | Mentioned By: cjft\nTechnical: Implement streaming functionality in useModel | Description: Add STREAMING_TEXT event handler type for streaming | Mentioned By: shaw\nTechnical: Improve build performance | Description: Package client separately as @elizaos/client to improve build times | Mentioned By: shaw\nTechnical: Fix Bun version inconsistencies | Description: Pin all packages to latest Bun version to avoid mismatches | Mentioned By: cjft\nTechnical: Implement ElizaOS instance pattern | Description: Create new ElizaOS() constructor with typed inputs for better customization | Mentioned By: shaw\nDocumentation: Create metrics dashboard | Description: Build backoffice metrics board tracking plugins, devs, installs | Mentioned By: cjft\nDocumentation: Redirect documentation URL | Description: Redirect eliza.how to docs.elizaos.ai | Mentioned By: Borko\nFeature: Implement service availability events | Description: Add runtime.servicePromises[] to allow awaiting services | Mentioned By: Odilitime\nFeature: Improve dependency management | Description: Use peerDeps to reduce dependency reusage | Mentioned By: cjft\nFeature: Add telemetry for tracking developer engagement | Description: Track metrics like time to \"hello world\" and dev onboarding | Mentioned By: sayonara",
      "messageCount": 167,
      "userCount": 9
    }
  ]
}
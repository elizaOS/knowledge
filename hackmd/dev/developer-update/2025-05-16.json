{
  "prompt_name": "developer-update",
  "category": "dev",
  "date": "2025-05-16",
  "generated_text": "# ElizaOS Developer Update - May 10 to May 16, 2025\n\n## Core Framework\n\nElizaOS has seen significant architectural improvements this week as we approach the upcoming v2 release. The core runtime has received multiple enhancements for stability, performance, and developer experience.\n\n### Architecture Changes\n- Implemented a comprehensive event-driven system for agent message handling, allowing for asynchronous flow and better support for scenarios where agents may choose not to reply ([PR #4594](https://github.com/elizaos/eliza/pull/4594))\n- Guaranteed callback execution in `messageReceivedHandler` regardless of success, errors, or timeouts, preventing resource leaks ([PR #4589](https://github.com/elizaos/eliza/pull/4589))\n- Improved agent data fetching with enhanced performance when loading multiple agents ([PR #4519](https://github.com/elizaos/eliza/pull/4519))\n- Removed the REST `/ping` endpoint for WebSocket status checks in favor of native WebSocket state monitoring ([PR #4551](https://github.com/elizaos/eliza/pull/4551))\n\n### Plugin System Improvements\n- Added support for third-party plugin installations with Git repository integration ([PR #4568](https://github.com/elizaos/eliza/pull/4568))\n- Enhanced GitHub URL support for plugins with both HTTPS and shorthand formats ([PR #4577](https://github.com/elizaos/eliza/pull/4577))\n- Introduced the plugin specification submodule for standardization ([PR #4553](https://github.com/elizaos/eliza/pull/4553))\n- Fixed plugin routes functionality at `/api/agents/{AGENT_UUID_OR_NAME}/plugins/{PLUGIN_NAME}/{ROUTE_FROM_PLUGIN}` ([PR #4415](https://github.com/elizaos/eliza/pull/4415))\n\n```typescript\n// Example of installing a third-party plugin:\nnpx elizaos plugins install github:username/elizaos-plugin-example\n// or\nnpx elizaos plugins install https://github.com/username/elizaos-plugin-example.git\n```\n\n### Agent Runtime Enhancements\n- Refactored model handling in AgentRuntime to support provider and priority settings ([PR #4507](https://github.com/elizaos/eliza/pull/4507))\n- Improved LLM response parsing to support custom fields from templates and clean up empty message headers ([PR #4580](https://github.com/elizaos/eliza/pull/4580))\n\n## New Features\n\n### Knowledge Integration\n- Added comprehensive integration tests for knowledge database operations ([PR #4518](https://github.com/elizaos/eliza/pull/4518))\n- Improved entity scoping for knowledge items to ensure correct association with agents ([PR #4581](https://github.com/elizaos/eliza/pull/4581))\n\n### Database Management\n- Implemented per-project database directories for better isolation ([PR #4423](https://github.com/elizaos/eliza/pull/4423))\n- Simplified and fixed PGLite directory configuration and migration paths ([PR #4532](https://github.com/elizaos/eliza/pull/4532))\n- Added proper Drizzle ORM support for database operations ([PR #4500](https://github.com/elizaos/eliza/pull/4500))\n\n```typescript\n// Example of configuring database location (now supports environment variables):\nprocess.env.PGLITE_DIR = './data/my-custom-db-location';\n```\n\n### CLI Enhancements\n- Improved the `elizaos agent` command with better JSON output and file saving options ([PR #4560](https://github.com/elizaos/eliza/pull/4560))\n- Enhanced the CLI start command with better character option parsing ([PR #4583](https://github.com/elizaos/eliza/pull/4583))\n- Improved the CLI update command to handle version specifications more robustly ([PR #4591](https://github.com/elizaos/eliza/pull/4591))\n\n```bash\n# New improved character path handling in start command\nelizaos run --character \"path/to/my character.json, path/to/another character.json\"\n```\n\n## Bug Fixes\n\n### Critical Fixes\n- Fixed core importability in client and added vite polyfills to resolve module resolution errors ([PR #4599](https://github.com/elizaos/eliza/pull/4599), [PR #4590](https://github.com/elizaos/eliza/pull/4590))\n- Fixed JSON serialization in PGLite to properly handle invalid Unicode escape sequences ([PR #4458](https://github.com/elizaos/eliza/pull/4458))\n- Resolved foreign key constraint violations on agent deletion ([PR #4510](https://github.com/elizaos/eliza/pull/4510))\n- Fixed Discord service unregistration timeout issues ([PR #4450](https://github.com/elizaos/eliza/pull/4450))\n\n### User Experience Improvements\n- Fixed client chat ignore functionality ([PR #4600](https://github.com/elizaos/eliza/pull/4600))\n- Fixed client scrollbars that were doubled up in the task list ([PR #4465](https://github.com/elizaos/eliza/pull/4465))\n- Added missing topics for X post templates ([PR #4595](https://github.com/elizaos/eliza/pull/4595))\n- Fixed topics project starter and default character definitions ([PR #4602](https://github.com/elizaos/eliza/pull/4602))\n\n## API Changes\n\n### Breaking Changes\n- Removed forced bootstrap plugin-add in CLI, making simple agents easier to create ([PR #4417](https://github.com/elizaos/eliza/pull/4417))\n- Refactored model handling in AgentRuntime, changing the ModelHandler type to include provider and optional priority ([PR #4507](https://github.com/elizaos/eliza/pull/4507))\n\n```typescript\n// New ModelHandler interface with provider and priority\nexport interface ModelHandler {\n  provider: string;\n  priority?: number;\n  handle: (params: ModelRequest) => Promise<ModelResponse>;\n}\n```\n\n### Deprecations and Migrations\n- The CLI now prefers direct command usage (e.g., `elizaos run`) instead of npx prefix ([PR #4493](https://github.com/elizaos/eliza/pull/4493))\n- Removed StudioLM support to focus on llama.cpp for local models ([PR #4459](https://github.com/elizaos/eliza/pull/4459))\n\n## Social Media Integrations\n\n### Twitter/X Updates\n- Implemented Twitter timeline functionality with better configuration options ([PR #4429](https://github.com/elizaos/eliza/pull/4429))\n- Fixed and refactored Twitter plugin code for improved error handling and configurable retry mechanisms ([PR #4506](https://github.com/elizaos/eliza/pull/4506))\n- Updated the community manager agent to work with Twitter integration out of the box ([PR #4557](https://github.com/elizaos/eliza/pull/4557))\n\n```typescript\n// Configure Twitter timeline with environment variables:\nENABLE_TWITTER_TIMELINE_SEARCH=true\nTWITTER_TIMELINE_SEARCH_INTERVAL=900000 // 15 minutes\n```\n\n### Discord Improvements\n- Fixed build issues for the Discord plugin and service messaging ([PR #4552](https://github.com/elizaos/eliza/pull/4552))\n- Resolved issues with Discord message formatting ([PR #4548](https://github.com/elizaos/eliza/pull/4548))\n- Added proper error handling to Discord message sending with fallback methods ([PR #4552](https://github.com/elizaos/eliza/pull/4552))\n\n### Telegram Enhancements\n- Enabled strict TypeScript types and improved error guards for the Telegram plugin ([PR #4559](https://github.com/elizaos/eliza/pull/4559))\n- Updated tests to expect MarkdownV2 format for message parsing ([PR #4570](https://github.com/elizaos/eliza/pull/4570))\n\n## Model Provider Updates\n\n### OpenAI Integration\n- Extended OpenAI plugin to support custom embedding endpoints ([PR #4421](https://github.com/elizaos/eliza/pull/4421))\n- Added model usage events for embeddings and image description ([PR #4438](https://github.com/elizaos/eliza/pull/4438))\n- Fixed TEXT_EMBEDDING delegation issues ([PR #4537](https://github.com/elizaos/eliza/pull/4537))\n\n### Performance Optimizations\n- Reply functionality now uses small models for faster responses ([PR #4416](https://github.com/elizaos/eliza/pull/4416))\n- Implemented better message processing for agent replies with customizable fields ([PR #4580](https://github.com/elizaos/eliza/pull/4580))\n\n## Breaking Changes\n\n### V1 to V2 Migration Issues\n- Characters now require \"version\": \"2.0\" and \"id\" fields at the root level of the JSON ([Discord Help Thread](https://discord.gg/elizaOS))\n- Package.json in v2 projects should avoid hardcoding paths to \"the-org\" directory ([PR discussed in Discord](https://discord.gg/elizaOS))\n- Several plugins have been moved from the monorepo to a separate repository: [github.com/elizaos-plugins](https://github.com/elizaos-plugins)\n- Knowledge paths in character.json files are now relative to characters/knowledge directory and cannot use \"./\" or \"../\" prefixes\n\n```json\n// Example of a v2-compatible character file\n{\n  \"version\": \"2.0\",\n  \"id\": \"your_character_id\",\n  \"name\": \"Character Name\",\n  \"clients\": [\"twitter\"],\n  \"plugins\": [\n    \"@elizaos/plugin-twitter\",\n    \"@elizaos/plugin-anthropic\"\n  ],\n  \"modelProvider\": \"anthropic\",\n  \"model\": \"claude-3-haiku-20240307\"\n}\n```\n\n### Development Workflow Changes\n- ElizaOS CLI now generates proper TypeScript declarations with `dts: true` in both CLI and plugin-sql packages ([PR #4529](https://github.com/elizaos/eliza/pull/4529))\n- The ElizaOS v2 terminal is now referred to as \"eliza 1.0.0\" in discussions ([Discord](https://discord.gg/elizaOS))\n- Several plugins now enforce strict TypeScript type checking ([PR #4559](https://github.com/elizaos/eliza/pull/4559))",
  "source_references": [
    "From \"2025-05-15.md\":\n> Jin mentioned work on AI-powered documentation summarization and video generation using Remotion for creating AI news shows with visualizations is underway\n> \n> ElizaOS is described as \"an open source framework for development of AI agents that can interact with blockchains\"\n\nFrom \"2025-05-13.md\":\n> ElizaOS v2 release is scheduled for the current month, with team members indicating they'll update when it's ready\n> \n> Users can track development progress on GitHub at https://github.com/elizaos/eliza\n> \n> ElizaOS is confirmed to be an open-source project with resources available at eliza.how and GitHub repositories\n\nFrom \"2025-05-15.json\":\n> Recent completed items in the elizaOS/eliza repository include several features, bugfixes, and other improvements. Features added include integration tests (PR #4518) and missing topics for X post templates (PR #4595). Multiple bugfixes were implemented, addressing issues with topics project starter and def character (PR #4602), client chat ignore (PR #4600), core importability in client and vite polyfills (PR #4599 and #4590), send-message-api (PR #4594), and ensuring onComplete is always called in messageReceivedHandler (PR #4589). Other improvements include CLI start command (PR #4583) and CLI update command (PR #4591).\n\nFrom \"2025-05-15.json\":\n> Completed Items: fix: send-message-api\n> PR #4594\n>\n> # Release Notes\n>\n> ## New Features\n> - Enhanced message processing with an event-driven, asynchronous flow for agent message handling\n> - Added support for new response scenarios where the agent may choose not to reply\n>\n> ## Bug Fixes\n> - Corrected handling of onComplete callbacks to prevent hanging connections\n\nFrom \"2025-05-15.md\":\n> \"What are the required fields for a v2 character JSON?\"\n> A: Add \"version\": \"2.0\" and \"id\": \"your_character_id\" at the root level of your JSON\n>\n> \"How does knowledge work in character files and what is the path relative to?\"\n> A: The path specified in character.json is relative to characters/knowledge directory, and you can't use \"./\" or \"../\"\n\nFrom \"2025-05-15.json\":\n> fix: core not importable in client / vite polyfills.\n> PR #4599\n> Fixes client error:\n> Uncaught TypeError: Failed to resolve module specifier \"@elizaos/core\". Relative references must start with either \"/\", \"./\", or \"../\".\n> Also adds vite-node-polyfills to supplement Buffer and process missing.\n\nFrom \"2025-05-15.json\":\n> [enhancement] Refactor model handling in AgentRuntime to support provider and priority\n> PR #4507\n> Refactor model handling in AgentRuntime to support provider and priority. \n> Updated ModelHandler type to include provider and optional priority for better model selection. \n> Enhanced registerModel and getModel methods to utilize these new features.\n\nFrom \"2025-05-15.json\":\n> feat: Reply uses small model\n> PR #4416\n> Currently reply is using large model but replies end up being very slow. Small model is appropriate for most functionality.\n\nFrom \"2025-05-11.md\":\n> Added support for third-party plugin installations with improved Git repository integration [#4568]\n>\n> Incorporated plugin specification submodule to standardize plugin development [#4553]\n>\n> Enhanced GitHub URL support for plugin installations, supporting both HTTPS and shorthand formats [#4577]\n\nFrom \"2025-05-11.md\":\n> Improved agent CLI command with better JSON output and file saving [#4560]\n>\n> Improved CLI start command with better character option parsing [#4583]\n>\n> Enhanced CLI update command to handle version specifications more robustly [#4591]\n\nFrom \"2025-05-15.md\":\n> \"Where are the plugins now that they've been moved out of the core repo?\"\n> A: https://github.com/elizaos-plugins (answered by shaw)\n\nFrom \"2025-05-13.md\":\n> \"What is v2 gonna do for ai16z and degenai?\"\n> A: \"Eli5, eddy, degenai will be ai agents you can directly interact with on the elizaos v2 terminal or better known as eliza 1.0.0\"\n\nFrom \"2025-05-15.json\":\n> fix(pglite): JSON serialization to handle invalid Unicode escape sequences when log\n> PR #4458\n> # Relates to\n> Issue #42: Unicode escape sequence error when creating log entries with TEXT_LARGE model type\n\nFrom \"2025-05-15.json\":\n> PR #4429 \"feat: twitter timeline\"\n> Related: https://github.com/elizaos/eliza/issues/4405\n>\n> This PR introduces a new timeline.ts module to handle bot interactions with the Twitter timeline.\n>\n> The timeline interaction is now optional. To enable it, configure the following environment variables:"
  ]
}
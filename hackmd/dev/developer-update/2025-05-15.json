{
  "prompt_name": "developer-update",
  "category": "dev",
  "date": "2025-05-15",
  "generated_text": "# ElizaOS Developer Update (May 15, 2025)\n\n## Core Framework\n\nThe ElizaOS framework has seen significant architecture improvements this week as we prepare for the upcoming v2 release. The plugin system has been substantially enhanced to improve cross-version compatibility between v0.x (v1) and v1.x (v2) codebases.\n\nKey architectural changes:\n- **Plugin specification standardization**: A new plugin specification submodule has been added to enforce consistent plugin development standards across the ecosystem.\n- **Enhanced model handling**: AgentRuntime now supports dynamic provider selection and priority settings, giving developers more control over model selection logic.\n- **Database improvements**: Entity relationship constraints have been fixed, resolving foreign key constraint violations on agent deletion.\n\n```javascript\n// New model provider selection pattern\nconst runtime = new AgentRuntime({\n  providers: [\n    { name: 'openai', priority: 10 },\n    { name: 'anthropic', priority: 5 },\n    { name: 'local', priority: 1 }\n  ]\n});\n```\n\n## New Features\n\n### Third-Party Plugin Installation\nWe've added comprehensive support for third-party plugin installation with improved Git repository integration. Developers can now install plugins directly from external repositories using both HTTPS and shorthand formats:\n\n```bash\n# Install from HTTPS URL\nelizaos plugin add https://github.com/developer/awesome-plugin.git\n\n# Install using shorthand format\nelizaos plugin add developer/awesome-plugin\n```\n\n### DAG Viewer Tool\nA new Directed Acyclic Graph (DAG) viewer tool is in development, using react-flow as the underlying technology. This tool will allow visual creation and debugging of agent workflows, with support for:\n- Agent state tracking and debug views\n- Custom node types and conditional flows\n- Circuit breakers and rate limiting between nodes\n- Budget constraints to prevent resource spiraling\n\n### LinkedIn Plugin\nWork has begun on a LinkedIn plugin for ElizaOS, similar to the existing Twitter integration. This will expand social media capabilities for ElizaOS agents.\n\n## Bug Fixes\n\nSeveral critical bugs have been addressed this week:\n\n1. **JSON Serialization in PGLite**: Fixed handling of invalid Unicode escape sequences in logs, preventing database corruption.\n   \n2. **Twitter Integration**: Resolved multiple issues with the Twitter plugin:\n   - Fixed mention response functionality \n   - Improved error handling with configurable retry settings\n   - Resolved issues with threading and scheduling of tweets\n\n3. **Discord Plugin**: Fixed disappearing messages and implemented proper reply functionality.\n\n4. **Knowledge Path Implementation**: Resolved issues with knowledge file referencing in character.json, ensuring correct relative path handling.\n\n## API Changes\n\n### Discord Plugin Extension\nThe recommended pattern for extending plugin functionality has been clarified. Developers should extend plugin classes directly rather than modifying service implementations:\n\n```typescript\n// Correct pattern for extending the Discord plugin\nimport { DiscordPlugin } from '@elizaos/plugin-discord';\n\nexport class MyCustomDiscordPlugin extends DiscordPlugin {\n  override async sendMessage(message: string, channelId?: string): Promise<void> {\n    // Custom implementation\n    await super.sendMessage(message, channelId);\n  }\n}\n```\n\n### Character File Knowledge References\nThe API for referencing knowledge files in character.json has been standardized:\n- Paths are relative to the characters/knowledge directory\n- RAG knowledge is enabled by setting \"ragknowledge: true\" in character settings\n\n```json\n{\n  \"name\": \"ExpertAgent\",\n  \"settings\": {\n    \"ragknowledge\": true\n  },\n  \"knowledge\": [\n    \"domain_expertise.md\",\n    \"technical_reference.md\"\n  ]\n}\n```\n\n## Social Media Integrations\n\n### Twitter/X Integration\nSignificant improvements have been made to the Twitter integration:\n- Enhanced error handling and configurable retry settings\n- Fixed scheduling with consistent timing using TWITTER_POST_INTERVAL_MIN and TWITTER_POST_INTERVAL_MAX\n- Improved mention handling and reply formatting\n\n### Farcaster Integration\nThe Farcaster v2 plugin is now in testing. Note the naming convention differences:\n- `plugin-twitter`: For ElizaOS v2/v1.x\n- `client-twitter`: For ElizaOS v0.x\n\n### Discord Integration\nThe Discord plugin has received several fixes:\n- Proper reply functionality implementation\n- Fixed formatting issues\n- Resolved disappearing messages problem\n\n## Model Provider Updates\n\n### OpenAI Integration\n- Added model usage events for embeddings and image description\n- GPT-4o image generation is being integrated as part of the v2 release\n\n### Local Model Support\n- Fixed connection timeout errors when initializing local AI models\n- Improved Ollama integration with better error handling\n\n## Breaking Changes\n\nSeveral breaking changes are important to note for v1 to v2 migration:\n\n1. **Plugin Repository Restructuring**: Plugins have been moved to a separate repository (elizaos-plugins). Update your references accordingly.\n\n2. **Package Naming Conventions**: \n   - v2/v1.x uses the `plugin-*` naming pattern\n   - v0.x uses the `client-*` naming pattern\n\n3. **Version Compatibility**: When upgrading, make sure to pin your dependencies:\n   ```json\n   {\n     \"dependencies\": {\n       \"@elizaos/cli\": \"^1.0.0-beta.51\",\n       \"@elizaos/core\": \"^1.0.0-beta.51\"\n     }\n   }\n   ```\n\n4. **Character File Structure**: The character file structure has changed significantly in v2, especially regarding knowledge integration. Refer to the updated documentation.\n\nElizaOS v2 is currently in beta testing and represents a significant improvement over v1. Stay updated with the development progress on GitHub: https://github.com/elizaos/eliza",
  "source_references": [
    "\"ElizaOS v2 Development\": \"Currently in beta testing phase. A team member described it as 'looking at a pizza before it goes into the oven' with GPT-4o image generation being the final step.\"\n\n\"Version Differences\": \"Users noted significant differences between ElizaOS v1 (main branch, 0.x) and v2 (v2-develop branch, 1.x), described as 'like day and night.'\"\n\n\"DAG Viewer Tool\": \"DefiniteOptimist shared progress on a tool for visualizing and designing agent workflows using react-flow as the underlying technology\"\n\n\"Ruby provided DefiniteOptimist with feature suggestions for the DAG viewer:\n- Agent state tracking and debug views\n- Circuit breakers and rate limiting between nodes\n- Budget constraints to prevent resource spiraling\"\n\n\"Discord Plugin Extension Support: Ruby provided comprehensive guidance to Scooter on extending the Discord plugin:\n- Identified version mismatch issues in package.json\n- Recommended pinning @elizaos/cli and @elizaos/core to specific beta versions\n- Shared a complete implementation example for extending the DiscordPlugin class with custom reply functionality\n- Explained proper plugin extension patterns that work with ElizaOS's architecture\"\n\n\"Twitter Configuration Assistance:\n- der.jogi shared solutions for tweet scheduling timing issues and avoiding threading in replies\n- der.jogi shared GitHub links to client and server socket implementation code for WebSocket endpoint questions\"\n\n\"Q: What's the difference between `plugin-twitter` & `client-twitter`?  \nA: The former is for v2/v1.x and the latter for v0.x (sayonara)\"\n\n\"Knowledge Path Implementation\n- Nooters helped LemonS understand how knowledge paths work in character files\n- Explained directory structure and provided guidance on relative paths\"\n\n\"Core/runtime reads what's defined in knowledge, which can be a path, array or similar (answered by 0xbbjoker)\"\n\n\"Explained the need to set 'ragknowledge: true' in settings and add paths to files\"\n\n\"Fixed JSON serialization in PGLite to handle invalid Unicode escape sequences in logs [#4458]\"\n\n\"Added support for third-party plugin installations with improved Git repository integration [#4568], [#4577]\"\n\n\"Incorporated plugin specification submodule to standardize plugin development [#4553]\"\n\n\"Refactored model handling in AgentRuntime to support provider selection and priority settings [#4507]\"\n\n\"Fixed Twitter plugin with improved error handling and configurable retry settings [#4506]\"\n\n\"Addressed Discord messages randomly disappearing ([#3952]\"\n\n\"Fixed Twitter interactions fetching without reaction implementation [#4181]\"\n\n\"Feature LinkedIn plugin for Eliza (Mentioned by aith)\"\n\n\"Q: Is there a plan for Eli5? A: Shaw confirmed eli5 to be the community manager AI agent of elizaOS v2.\"\n\n\"Set both TWITTER_POST_INTERVAL_MIN and TWITTER_POST_INTERVAL_MAX to the same value for consistent timing (answered by der.jogi)\"\n\n\"Resolved issues with Twitter agent not replying to some target accounts ([#4054]\""
  ]
}
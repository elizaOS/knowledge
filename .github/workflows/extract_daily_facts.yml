name: Extract Daily Facts and Convert to Markdown

on:
  schedule:
    # Runs daily at 01:15 UTC (after aggregation, before council briefing)
    - cron: '15 1 * * *'
  workflow_dispatch:

jobs:
  extract_and_report:
    runs-on: ubuntu-latest
    permissions:
      contents: write # To commit new files
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Match other workflows

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests # Dependency for extract-facts.py

      - name: Get yesterday's date
        id: get_date
        run: echo "DATE=$(date -d 'yesterday' '+%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Run Fact Extraction (JSON & Markdown Output)
        id: extract_files # Renamed id for clarity, though not strictly necessary
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          DATE=${{ steps.get_date.outputs.DATE }}
          AGGREGATED_INPUT_FILE="the-council/aggregated/${DATE}.json"
          JSON_OUTPUT_FILE="the-council/facts/${DATE}.json"
          MARKDOWN_OUTPUT_FILE="hackmd/facts/${DATE}.md"

          if [ ! -f "$AGGREGATED_INPUT_FILE" ]; then
            echo "Aggregated input file $AGGREGATED_INPUT_FILE not found. Skipping fact extraction."
            # Create empty files to prevent commit step from failing if it expects them
            mkdir -p $(dirname "$JSON_OUTPUT_FILE")
            touch "$JSON_OUTPUT_FILE"
            mkdir -p $(dirname "$MARKDOWN_OUTPUT_FILE")
            touch "$MARKDOWN_OUTPUT_FILE"
            exit 0 # Exit successfully, nothing to process
          fi
          
          echo "Running extract-facts.py for JSON and Markdown output..."
          python scripts/extract-facts.py \
            -i "$AGGREGATED_INPUT_FILE" \
            -o "$JSON_OUTPUT_FILE" \
            -md "$MARKDOWN_OUTPUT_FILE" \
            -d "$DATE" \
            --verbose
        
      - name: Commit daily fact files (JSON and Markdown)
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "feat: Add daily extracted facts for ${{ steps.get_date.outputs.DATE }}"
          file_pattern: "the-council/facts/*.json hackmd/facts/*.md"
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          # Add push_options: '--force' if you want to overwrite history on the branch, otherwise it will fail if the branch is protected.
          # Be cautious with force push. Usually not needed if committing to the main branch of a fork or a feature branch. 
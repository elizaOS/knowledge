{
  "ai-news": {
    "elizaos": {
      "discord_md_last_3_days": [
        {
          "filename": "2025-05-14.md",
          "content": "# elizaOS Discord - 2025-05-14\n\n## Overall Discussion Highlights\n\n### ElizaOS Development\n- **ElizaOS v2 Development**: Currently in beta testing phase. A team member described it as \"looking at a pizza before it goes into the oven\" with GPT-4o image generation being the final step.\n- **Version Differences**: Users noted significant differences between ElizaOS v1 (main branch, 0.x) and v2 (v2-develop branch, 1.x), described as \"like day and night.\"\n- **Mobile Development**: Discussions about creating mobile applications for ElizaOS, with participants noting that mobile presence is crucial for user adoption. Technical challenges were identified as ElizaOS is dependent on NodeJS, with only some very old versions running on iOS.\n\n### auto.fun Platform\n- **API Limitations**: Users examined the auto.fun repository code and identified that while some API endpoints exist (for swaps, token retrieval, search, and charts), they lack functionality for creating new coins or executing swaps.\n- **Token Tracking Mechanism**: auto.fun tracks tokens that interact with its specific program address (autoUmixaMaYKFjexMpQuBpNYntgbkzCo2b1ZqUaAZ5) rather than all tokens on-chain.\n- **Market Making**: Team members clarified they have reputable market makers for both CEX and DEX, and addressed questions about relationships with specific market makers.\n\n### Technical Implementation\n- **Supabase Integration**: Users shared SQL commands for creating database tables for agents with proper references and constraints.\n- **Plugin Development**: Discussions about custom plugin development and integration challenges, particularly importing local plugins versus using NPM packages.\n- **Twitter/X Integration**: Users troubleshooting configuration issues with Twitter integration, including setting environment variables for replying to specific users.\n\n### Token Discussions\n- **AI16z Token Permissions**: Concerns about the \"mint\" permission on the AI16z token, with a team member explaining this is standard for daos.fun coins and will be addressed at the appropriate time.\n- **ELI5 Token**: Claims that ELI5 will be the community manager AI agent for ElizaOS v2, with references to an interview confirming this. Debate about the token's legitimacy and potential value ensued.\n\n## Key Questions & Answers\n\n**Q: Can ElizaOS run on iPhone?**  \nA: It's dependent on NodeJS and only some very old versions run on iOS; Android might be possible. (DorianD)\n\n**Q: Where is the auto.fun API?**  \nA: https://github.com/elizaOS/auto.fun/blob/6877fd1955a2d73577399eabb2b722d4b2806257/packages/client/src/utils/api.ts (Osint)\n\n**Q: Do you have an agreement with Wintermute as a market maker?**  \nA: We don't have an agreement with WM, we can't restrict them from trading either. We have very reputable MM's for both CEX & DEX. (jasyn_bjorn)\n\n**Q: What is the roadmap to disable the \"mint\" permission on ai16z token?**  \nA: All daos.fun coins have this by default; when we get the right opportunity to change, the team will take a hard look at it. (Osint)\n\n**Q: What's the difference between Eliza and Elizav2?**  \nA: Yes like day and night. (xell0x)\n\n**Q: How to set up Supabase tables for ElizaOS?**  \nA: Use SQL commands to create tables with proper references and constraints. (cjft)\n\n**Q: Is the ElizaOS/eliza repo on GitHub V2 or is only the CLI using V2?**  \nA: Main branch is 0.x (v1) and v2-develop is 1.x (v2). (cjft)\n\n**Q: How does autofun track tokens?**  \nA: It processes tokens that interact with the program at autoUmixaMaYKFjexMpQuBpNYntgbkzCo2b1ZqUaAZ5. (vas, confirmed by DorianD)\n\n**Q: Is there a plan for Eli5?**  \nA: Shaw confirmed eli5 to be the community manager AI agent of elizaOS v2. (xell0x)\n\n## Community Help & Collaboration\n\n1. **auto.fun API Exploration**:\n   - Osint provided GitHub links to the API code and brand kit when DorianD was looking for auto.fun API information.\n   - vas explained to DorianD how auto.fun tracks tokens through interaction with its program address.\n\n2. **ElizaOS v2 Development Updates**:\n   - jin shared progress on v2 development with xell0x, providing a visual explanation of the current state.\n   - xell0x explained to Dive or Die that v2 is currently being beta tested.\n\n3. **Database Setup Assistance**:\n   - cjft shared SQL commands for creating agent and room tables with proper references for Supabase integration.\n\n4. **Configuration Troubleshooting**:\n   - cjft helped starlord understand model loading output behavior.\n   - cjft suggested checking ENABLE_ACTION_PROCESSING setting and TWITTER_TARGET_USERS configuration for Twitter integration issues.\n\n## Action Items\n\n### Technical\n- Develop mobile apps (iOS/Android) for ElizaOS/auto.fun (Mentioned by: DorianD, Osint)\n- Expand auto.fun API to support coin creation and swapping (Mentioned by: DorianD)\n- Fix getToken API endpoint which is broken with a TODO comment (Mentioned by: DorianD)\n- Complete v2 development, currently in beta testing phase (Mentioned by: jin, xell0x)\n- Address the \"mint\" permission on AI16z token (Mentioned by: Kenshiro)\n- Fix plugin import errors for custom plugins (Mentioned by: cjft)\n- Resolve character configuration not updating in UI (Mentioned by: cjft)\n- Fix Twitter/X integration to properly respond to targeted users (Mentioned by: cjft)\n- Resolve client build errors in Windows environment (Mentioned by: Bills_43)\n- Recreate launch or launchandswap instruction to interact with auto.fun program (Mentioned by: vas)\n\n### Documentation\n- Create guide for extending core plugins in v2 (Mentioned by: cjft)\n- Document differences between v1 and v2 plugin systems (Mentioned by: cjft)\n- Document steps for creating tokens through auto.fun (Mentioned by: DorianD)\n\n### Feature\n- Create an AI agent to answer project-related questions (Mentioned by: DorianD)\n- Consider including ICM meta bumper functionality in auto.fun (Mentioned by: abhi_ironman)\n- Improve plugin-bootstrap customization options (Mentioned by: cjft)\n- Add Google Generative AI support to ElizaOS beta (Mentioned by: cjft)\n- Develop a phone app for auto.fun (Mentioned by: DorianD)"
        },
        {
          "filename": "2025-05-13.md",
          "content": "# elizaOS Discord - 2025-05-13\n\n## Overall Discussion Highlights\n\n### ElizaOS Development Status\n- ElizaOS v2 release is scheduled for the current month, with team members indicating they'll update when it's ready\n- Users can track development progress on GitHub at https://github.com/elizaos/eliza\n- ElizaOS is confirmed to be an open-source project with resources available at eliza.how and GitHub repositories\n\n### Technical Challenges\n- Multiple users experiencing plugin loading failures, particularly with Farcaster and Bootstrap plugins\n- Entity relationship constraints in SQL causing errors when entities aren't properly stored\n- Twitter/X integration issues including scheduling posts and handling replies without threading\n- Local AI model configuration with Ollama showing connection timeout errors\n- Discord integration issues, particularly with formatting responses as replies\n- v2-develop branch challenges including character definition problems and frontend display issues\n\n### AI Agent Applications & Monetization\n- Discussion about potential monetization strategies for AI agents, including subscription models vs. token-based access\n- Reference to terminal.cookie.fun using AI agents for trading analysis\n- Suggestions for AI applications in financial analysis, particularly SEC filing analysis\n- Limitations of AI in determining sentiment were discussed\n\n### Community Concerns\n- Some community members expressed frustration about a DOOD token airdrop allocation process\n- Discussion about cryptocurrency tokens including eli5, squid, and autofun, with brief mentions of market performance\n\n## Key Questions & Answers\n\n**Q: What happened to eliza.how? Is it not working anymore?**  \nA: It works (answered by Osint)\n\n**Q: Can someone share resource(s) where I can learn the scope of the character file for ElizaOS agent?**  \nA: https://eliza.how and https://github.com/elizaOS/characterfile (answered by Osint)\n\n**Q: Shaw has recently mentioned on v2 release as this week or next weekâ€¦do team have further update or clarity on this?**  \nA: We'll update when we have the release ready (answered by Kenk)\n\n**Q: How is v2 going?**  \nA: You can always go and check in github at https://github.com/elizaos/eliza (answered by Osint)\n\n**Q: How can I make Twitter replies use single tweets instead of threads?**  \nA: Have it a try, should not use threads (answered by der.jogi)\n\n**Q: How does tweet scheduling work in ElizaOS?**  \nA: Set both TWITTER_POST_INTERVAL_MIN and TWITTER_POST_INTERVAL_MAX to the same value for consistent timing (answered by der.jogi)\n\n## Community Help & Collaboration\n\n1. **Character File Resources**\n   - Osint provided GitHub links to character file repository and eliza.how website to help Tahlil learn about character files for ElizaOS agents\n\n2. **Token Allocation Support**\n   - jasyn_bjorn offered to give their own DOOD token allocation to sukrucildirr who was upset about missing the allocation\n\n3. **Twitter Configuration Assistance**\n   - der.jogi shared solutions for tweet scheduling timing issues and avoiding threading in replies\n   - der.jogi shared GitHub links to client and server socket implementation code for WebSocket endpoint questions\n\n4. **Project Perspective**\n   - MDMnvest provided perspective to Xyness that Autofun is in early days and needs time to grow as success stories emerge\n\n## Action Items\n\n### Technical\n- Fix Farcaster plugin loading failures - resolve module loading strategies for @Eliza#3900os/plugin-farcaster (mentioned by thescoho)\n- Fix entity relationship constraints - ensure entities are stored before creating relationships (mentioned by der.jogi)\n- Resolve Ollama connection timeout errors - fix \"Headers Timeout Error\" when connecting to local Ollama instance (mentioned by der.jogi)\n- Fix Bootstrap plugin loading failure - resolve module loading strategies for @elizaos/plugin-bootstrap (mentioned by der.jogi)\n- Fix Twitter mention response functionality - agent not responding to Twitter mentions despite successful tweeting (mentioned by der.jogi)\n- Fix character definition display in v2-develop - character definitions not showing correctly in frontend (mentioned by der.jogi)\n- Fix cross-posting between Twitter and Discord - enable forwarding matching tweets to Discord channels (mentioned by der.jogi)\n- Fix local AI model initialization hanging - system gets stuck after model path validation (mentioned by starlord)\n- Check GitHub repository for ElizaOS v2 development progress (mentioned by Osint)\n\n### Documentation\n- Update Twitter agent guide for v2 - current guide doesn't work properly with v2-develop branch (mentioned by der.jogi)\n\n### Feature\n- Create LinkedIn plugin for ElizaOS - add LinkedIn integration capabilities (mentioned by der.jogi)\n- Consider releasing Elizav2 while market conditions are favorable (mentioned by ryanthelad)\n- Consider monetization strategies for AI agents - subscription models vs. token-based access (mentioned by Osint)\n- Explore AI agent applications for financial analysis - potential for AI to analyze SEC filings and financial data (mentioned by The Prophet)"
        }
      ],
      "dev_md_last_3_days": [
        {
          "filename": "2025-05-14.md",
          "content": "# elizaOS Development Discord - 2025-05-14\n\n## Overall Discussion Highlights\n\n### Plugin Development & Architecture\n- **Discord Plugin Extension**: Detailed discussion on proper methods to extend the Discord plugin in ElizaOS, focusing on class extension rather than service modification\n- **DAG Viewer Tool**: DefiniteOptimist shared progress on a tool for visualizing and designing agent workflows using react-flow as the underlying technology\n- **Plugin Versioning**: Clarification about Farcaster plugin versions, with distinction between `plugin-twitter` (for v2/v1.x) and `client-twitter` (for v0.x)\n\n### Integration & Identity Management\n- **GitHub-Wallet Integration**: Jin proposed several methods for linking wallet addresses to GitHub identities:\n  - Hidden comments in profile READMEs\n  - Comments in GitHub issues\n  - GitHub gist implementation with API integration\n- **Anonymous Airdrops**: Discussion about zkdrops for anonymous airdrops, with concerns about airdrop farming and potential mitigation strategies\n\n## Key Questions & Answers\n\n### Plugin Development\n- **Q**: How close is Farcaster v2?  \n  **A**: It exists but is currently in testing (DorianD)\n\n- **Q**: What's the difference between `plugin-twitter` & `client-twitter`?  \n  **A**: The former is for v2/v1.x and the latter for v0.x (sayonara)\n\n- **Q**: For custom Discord plugin functionality, should I extend it in index.ts while NPXing the plugin or modify the entire plugin code?  \n  **A**: Extending the base plugin in your own index.ts is usually cleaner than modifying the core code (Ruby)\n\n- **Q**: What would be the advantages to NPM installing eliza cli instead of NPX?  \n  **A**: Global install gives persistent access to cli commands without npx and is faster since you're not downloading the package each time (Ruby)\n\n### DAG Viewer Tool\n- **Q**: Are you using graphviz under the hood for the DAG viewer?  \n  **A**: It's react-flow under the hood (DefiniteOptimist)\n\n- **Q**: Have you considered adding support for custom node types and conditional flows?  \n  **A**: Yes, those are on the way! (DefiniteOptimist)\n\n## Community Help & Collaboration\n\n### Discord Plugin Extension Support\nRuby provided comprehensive guidance to Scooter on extending the Discord plugin:\n- Identified version mismatch issues in package.json\n- Recommended pinning @elizaos/cli and @elizaos/core to specific beta versions\n- Shared a complete implementation example for extending the DiscordPlugin class with custom reply functionality\n- Explained proper plugin extension patterns that work with ElizaOS's architecture\n\n### Farcaster Module Selection\nSayonara helped Jonas understand which Twitter module to use with Farcaster, clarifying that plugin-twitter is for v2/v1.x and client-twitter is for v0.x\n\n### DAG Viewer Feature Suggestions\nRuby provided DefiniteOptimist with feature suggestions for the DAG viewer:\n- Agent state tracking and debug views\n- Circuit breakers and rate limiting between nodes\n- Budget constraints to prevent resource spiraling\n\n## Action Items\n\n### Technical\n- Extend DiscordPlugin class directly instead of modifying the service to implement reply functionality (Ruby)\n- Pin @elizaos/cli and @elizaos/core to specific beta versions (^1.0.0-beta.51) to match plugin versions (Ruby)\n- Override sendMessage method in extended Discord plugin to implement reply functionality (Ruby)\n- Implement wallet linking via GitHub gists using GitHub API (Jin)\n- Develop strategies to mitigate airdrop farming by combining automated calculations with human evaluation (Jin)\n- Develop dynamic dependency generation and orchestration capabilities for DAG viewer (DefiniteOptimist)\n\n### Documentation\n- Document the proper pattern for extending ElizaOS plugins (Ruby)\n\n### Features\n- Link wallets in hidden comments on GitHub profile READMEs (Jin)\n- Link wallets as comments in GitHub issues (Jin)\n- Add agent state tracking and debug views to help catch edge cases in decision trees (Ruby)\n- Implement custom node types and conditional flows for modeling complex agent behavior patterns (Ruby)\n- Add budget constraints for applications and pathways in DAG viewer (DefiniteOptimist)\n- Implement circuit breakers or rate limiting between nodes to prevent cascading failures (Ruby)"
        },
        {
          "filename": "2025-05-13.md",
          "content": "# elizaOS Development Discord - 2025-05-13\n\n## Overall Discussion Highlights\n\n### Knowledge Integration in Character Files\n- Discussions focused on how to properly reference knowledge files in character.json\n- Paths are relative to the characters/knowledge directory\n- RAG (Retrieval-Augmented Generation) knowledge works by setting \"ragknowledge: true\" in character settings\n- Users explored the codebase, specifically examining how knowledge is processed through ragknowledge.ts\n- Version differences between v1 and v2 of the Eliza codebase were mentioned, with a link to the v2-develop branch\n\n### Plugin Development\n- Plugins have been moved to a separate repository (elizaos-plugins)\n- Question raised about LinkedIn plugin availability for Eliza\n- GitHub link shared: https://github.com/elizaos-plugins\n\n### Community Guidelines\n- Ruby expressed disinterest in providing feedback on gambling or token projects\n- Preference stated for building useful tools rather than enabling speculation\n- Some promotional messages from freelancers were flagged as potential spam\n\n## Key Questions & Answers\n\n**Q: How does knowledge work in character files and what is the path relative to?** (asked by LemonS)  \n**A:** The path specified in character.json is relative to characters/knowledge directory, and you can't use \"./\" or \"../\" (answered by Nooters)\n\n**Q: Is there an example of character JSON files referencing a knowledge path?** (asked by DorianD)  \n**A:** Core/runtime reads what's defined in knowledge, which can be a path, array or similar (answered by 0xbbjoker)\n\n**Q: Where are the plugins now that they've been moved out of the core repo?** (asked by DorianD)  \n**A:** https://github.com/elizaos-plugins (answered by shaw)\n\n## Community Help & Collaboration\n\n1. **Knowledge Path Implementation**\n   - Nooters helped LemonS understand how knowledge paths work in character files\n   - Explained directory structure and provided guidance on relative paths\n\n2. **RAG Knowledge Configuration**\n   - 0xbbjoker assisted DorianD in understanding RAG knowledge implementation\n   - Explained the need to set \"ragknowledge: true\" in settings and add paths to files\n\n3. **Plugin Repository Location**\n   - shaw directed DorianD to the new elizaos-plugins repository\n   - Provided the GitHub link to help locate moved plugins\n\n4. **Knowledge Implementation Exploration**\n   - DorianD investigated the codebase and found relevant code in ragknowledge.ts\n   - Shared findings about how knowledge processing is handled\n\n## Action Items\n\n### Technical\n- **Implement proper knowledge file referencing in character.json files** (Mentioned by Nooters)\n  - Ensure paths are relative to characters/knowledge directory\n\n### Feature\n- **LinkedIn plugin for Eliza** (Mentioned by aith)\n  - Create a LinkedIn plugin similar to existing Twitter plugin\n\n### Documentation\n- **Document the knowledge referencing system** (Mentioned by DorianD)\n  - Create clear documentation on how to properly reference knowledge files in character.json"
        }
      ]
    }
  },
  "github": {
    "summaries": {
      "week": [
        {
          "filename": "2025-05-11.md",
          "content": "# ElizaOS Weekly Update (May 11 - 17, 2025)\n\n## OVERVIEW\nThis week saw significant progress across the ElizaOS ecosystem with a focus on plugin architecture improvements, agent functionality enhancements, and critical bug fixes. The team added support for third-party plugin installations, improved CLI commands, and fixed several issues related to database operations and agent interactions. The Project Manager agent (Jimmy) was also further developed, enhancing the framework's autonomous capabilities.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Plugin System Enhancements\n- Added support for third-party plugin installations with improved Git repository integration [#4568](https://github.com/elizaos/eliza/pull/4568), [#4577](https://github.com/elizaos/eliza/pull/4577)\n- Incorporated plugin specification submodule to standardize plugin development [#4553](https://github.com/elizaos/eliza/pull/4553)\n- Refactored model handling in AgentRuntime to support provider selection and priority settings [#4507](https://github.com/elizaos/eliza/pull/4507)\n\n### Agent and CLI Improvements\n- Enhanced the Project Manager agent (Jimmy) with new capabilities [#4471](https://github.com/elizaos/eliza/pull/4471)\n- Upgraded CLI agent commands with fixes for JSON output and file handling [#4560](https://github.com/elizaos/eliza/pull/4560)\n- Added comprehensive tests for the create-eliza command [#4582](https://github.com/elizaos/eliza/pull/4582)\n- Improved knowledge association with agents, ensuring proper scoping of worldId and entityId [#4581](https://github.com/elizaos/eliza/pull/4581)\n\n### Critical Bug Fixes\n- Fixed JSON serialization in PGLite to handle invalid Unicode escape sequences in logs [#4458](https://github.com/elizaos/eliza/pull/4458)\n- Resolved database migration issues in PGLite [#4532](https://github.com/elizaos/eliza/pull/4532), [#4531](https://github.com/elizaos/eliza/pull/4531)\n- Enhanced LLM response parsing to support custom fields and clean up empty message headers [#4580](https://github.com/elizaos/eliza/pull/4580)\n- Fixed Twitter plugin with improved error handling and configurable retry settings [#4506](https://github.com/elizaos/eliza/pull/4506)\n\n## CLOSED ISSUES\n\n### Plugin Functionality Issues\n- Resolved Twitter interactions fetching without reaction implementation [#4181](https://github.com/elizaos/eliza/issues/4181)\n- Fixed Twitter space functionality that was causing dyld errors [#4180](https://github.com/elizaos/eliza/issues/4180)\n\n### Documentation and Compatibility\n- Addressed unclear marking of plugins not yet compatible with Eliza v2 [#4164](https://github.com/elizaos/eliza/issues/4164)\n- Fixed issues with the \"Building a Social AI Agent in 15 Minutes\" tutorial [#3880](https://github.com/elizaos/eliza/issues/3880)\n\n### Miscellaneous\n- Closed job posting for Eliza framework developer [#4432](https://github.com/elizaos/eliza/issues/4432)\n- Resolved PGLite log entry Unicode escape error [#4457](https://github.com/elizaos/eliza/issues/4457)\n\n## NEW ISSUES\n\n### Infrastructure and Build Improvements\n- Need to improve Eliza in TEE oasis with support for custom installations and streamlined local builds [#4528](https://github.com/elizaos/eliza/issues/4528)\n- Request to publish updated packages to npm to resolve dependency conflicts [#4562](https://github.com/elizaos/eliza/issues/4562)\n\n### Technical Errors\n- Module resolution error for '@elizaos/core' affecting agent functionality [#4536](https://github.com/elizaos/eliza/issues/4536)\n- Path not found error for internationalization documentation [#4565](https://github.com/elizaos/eliza/issues/4565)\n- CI activity error requiring investigation [#4561](https://github.com/elizaos/eliza/issues/4561)"
        }
      ],
      "month": [
        {
          "filename": "2025-05-01.md",
          "content": "# ElizaOS Monthly Update (May 2025)\n\n## OVERVIEW\nMay was a highly productive month for ElizaOS, with significant advancements in the framework's modularity and stability. The team completed 58 pull requests, focusing on enhancing the CLI experience, improving plugin architecture, fixing critical bugs, and streamlining the codebase. Major achievements include preparing for plugin compatibility between versions 0.x and 1.x, implementing API key authentication, and refining agent response handling.\n\n## KEY TECHNICAL DEVELOPMENTS\n\n### Plugin Architecture Enhancements\n- Prepared for plugin sharing between 0.x and 1.x versions, improving cross-version compatibility ([#4384](https://github.com/elizaos/eliza/pull/4384))\n- Added support for third-party plugin installation with comprehensive testing ([#4568](https://github.com/elizaos/eliza/pull/4568))\n- Improved git repository plugin installation support for both HTTPS and shorthand formats ([#4577](https://github.com/elizaos/eliza/pull/4577))\n- Created a plugin specification submodule to standardize plugin development ([#4553](https://github.com/elizaos/eliza/pull/4553))\n\n### CLI Experience Improvements\n- Enhanced the CLI agent command with fixes for JSON output and file saving options ([#4560](https://github.com/elizaos/eliza/pull/4560))\n- Added comprehensive tests for the create-eliza command ([#4582](https://github.com/elizaos/eliza/pull/4582))\n- Implemented unique PGLite folder creation if not provided ([#4423](https://github.com/elizaos/eliza/pull/4423))\n- Refactored environment variable handling for better consistency ([#4445](https://github.com/elizaos/eliza/pull/4445))\n\n### Authentication and Security\n- Added authentication middleware and API key dialog for unauthorized access ([#4420](https://github.com/elizaos/eliza/pull/4420))\n- Fixed API key resolution issues ([#4547](https://github.com/elizaos/eliza/pull/4547))\n- Enhanced error handling and logging throughout the Telegram plugin ([#4559](https://github.com/elizaos/eliza/pull/4559))\n\n### Model and Response Handling\n- Optimized reply functionality to use small models for faster responses ([#4416](https://github.com/elizaos/eliza/pull/4416))\n- Added model usage events for embeddings and image description in OpenAI plugin ([#4438](https://github.com/elizaos/eliza/pull/4438))\n- Refactored model handling in AgentRuntime to support provider and priority ([#4507](https://github.com/elizaos/eliza/pull/4507))\n- Improved LLM response parsing to support custom fields ([#4580](https://github.com/elizaos/eliza/pull/4580))\n\n### Social Media Integration\n- Implemented Twitter timeline functionality ([#4429](https://github.com/elizaos/eliza/pull/4429))\n- Added comprehensive blog tutorial for Twitter agent setup ([#4425](https://github.com/elizaos/eliza/pull/4425))\n- Fixed and refactored Twitter plugin code for improved error handling ([#4506](https://github.com/elizaos/eliza/pull/4506))\n\n### Database and Storage Improvements\n- Fixed PGLite directory configuration and migrations ([#4497](https://github.com/elizaos/eliza/pull/4497), [#4532](https://github.com/elizaos/eliza/pull/4532))\n- Implemented proper JSON serialization to handle invalid Unicode escape sequences ([#4458](https://github.com/elizaos/eliza/pull/4458))\n- Added support for using Drizzle ORM for database operations ([#4500](https://github.com/elizaos/eliza/pull/4500))\n- Fixed foreign key constraint violation on agent deletion ([#4510](https://github.com/elizaos/eliza/pull/4510))\n\n### Documentation and Code Quality\n- Added comprehensive docstrings to multiple components ([#4446](https://github.com/elizaos/eliza/pull/4446), [#4469](https://github.com/elizaos/eliza/pull/4469), [#4494](https://github.com/elizaos/eliza/pull/4494), [#4498](https://github.com/elizaos/eliza/pull/4498), [#4521](https://github.com/elizaos/eliza/pull/4521))\n- Updated documentation to prefer direct usage instead of npx ([#4493](https://github.com/elizaos/eliza/pull/4493))\n- Fixed broken documentation links ([#4460](https://github.com/elizaos/eliza/pull/4460))\n- Implemented semantic text splitting for improved RAG knowledge retrieval ([#4235](https://github.com/elizaos/eliza/pull/4235))\n\n### Monorepo Cleanup\n- Removed several plugins from the monorepo to streamline maintenance ([#4406](https://github.com/elizaos/eliza/pull/4406), [#4402](https://github.com/elizaos/eliza/pull/4402), [#4439](https://github.com/elizaos/eliza/pull/4439), [#4437](https://github.com/elizaos/eliza/pull/4437), [#4436](https://github.com/elizaos/eliza/pull/4436), [#4428](https://github.com/elizaos/eliza/pull/4428), [#4427](https://github.com/elizaos/eliza/pull/4427), [#4480](https://github.com/elizaos/eliza/pull/4480), [#4513](https://github.com/elizaos/eliza/pull/4513), [#4511](https://github.com/elizaos/eliza/pull/4511))\n\n## CLOSED ISSUES\n\n### Social Media Integration Issues\n- Fixed Twitter interactions fetching and reactions implementation ([#4181](https://github.com/elizaos/eliza/issues/4181))\n- Resolved Twitter space functionality issues ([#4180](https://github.com/elizaos/eliza/issues/4180))\n- Fixed line breaks appearing as raw characters in tweets ([#3972](https://github.com/elizaos/eliza/issues/3972))\n- Addressed issues with Twitter agent not replying to some target accounts ([#4054](https://github.com/elizaos/eliza/issues/4054))\n\n### Documentation and Tutorial Improvements\n- Fixed outdated or broken links in the \"Building a Social AI Agent in 15 Minutes\" tutorial ([#3880](https://github.com/elizaos/eliza/issues/3880))\n- Improved CLI tool instructions with better documentation links ([#4113](https://github.com/elizaos/eliza/issues/4113))\n- Fixed autodoc file usage documentation that was missing context ([#3912](https://github.com/elizaos/eliza/issues/3912))\n\n### Platform Compatibility and Installation\n- Resolved issues with building on Windows platforms ([#4094](https://github.com/elizaos/eliza/issues/4094))\n- Fixed error when creating new agents with `npx elizaos create` ([#4107](https://github.com/elizaos/eliza/issues/4107))\n- Improved remote debugging capabilities for v2 ([#3978](https://github.com/elizaos/eliza/issues/3978))\n\n### Plugin Management and Compatibility\n- Clearly marked or removed plugins not yet compatible with Eliza v2 ([#4164](https://github.com/elizaos/eliza/issues/4164))\n- Fixed import issues with core modules ([#4046](https://github.com/elizaos/eliza/issues/4046))\n\n### Service Functionality\n- Addressed Discord messages randomly disappearing ([#3952](https://github.com/elizaos/eliza/issues/3952))\n- Fixed Anthropic API key error handling ([#4049](https://github.com/elizaos/eliza/issues/4049))\n-"
        }
      ]
    }
  }
}
